import * as $protobuf from "protobufjs";
/** Properties of an AndroidAppDeliveryData. */
export interface IAndroidAppDeliveryData {

    /** AndroidAppDeliveryData downloadSize */
    downloadSize?: (number|Long|null);

    /** AndroidAppDeliveryData sha1 */
    sha1?: (string|null);

    /** AndroidAppDeliveryData downloadUrl */
    downloadUrl?: (string|null);

    /** AndroidAppDeliveryData additionalFile */
    additionalFile?: (IAppFileMetadata[]|null);

    /** AndroidAppDeliveryData downloadAuthCookie */
    downloadAuthCookie?: (IHttpCookie[]|null);

    /** AndroidAppDeliveryData forwardLocked */
    forwardLocked?: (boolean|null);

    /** AndroidAppDeliveryData refundTimeout */
    refundTimeout?: (number|Long|null);

    /** AndroidAppDeliveryData serverInitiated */
    serverInitiated?: (boolean|null);

    /** AndroidAppDeliveryData postInstallRefundWindowMillis */
    postInstallRefundWindowMillis?: (number|Long|null);

    /** AndroidAppDeliveryData immediateStartNeeded */
    immediateStartNeeded?: (boolean|null);

    /** AndroidAppDeliveryData patchData */
    patchData?: (IAndroidAppPatchData|null);

    /** AndroidAppDeliveryData encryptionParams */
    encryptionParams?: (IEncryptionParams|null);

    /** AndroidAppDeliveryData compressedDownloadUrl */
    compressedDownloadUrl?: (string|null);

    /** AndroidAppDeliveryData compressedSize */
    compressedSize?: (number|Long|null);

    /** AndroidAppDeliveryData splitDeliveryData */
    splitDeliveryData?: (ISplitDeliveryData[]|null);

    /** AndroidAppDeliveryData installLocation */
    installLocation?: (number|null);

    /** AndroidAppDeliveryData type */
    type?: (number|Long|null);

    /** AndroidAppDeliveryData compressedAppData */
    compressedAppData?: (ICompressedAppData|null);

    /** AndroidAppDeliveryData sha256 */
    sha256?: (string|null);
}

/** Represents an AndroidAppDeliveryData. */
export class AndroidAppDeliveryData implements IAndroidAppDeliveryData {

    /**
     * Constructs a new AndroidAppDeliveryData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidAppDeliveryData);

    /** AndroidAppDeliveryData downloadSize. */
    public downloadSize: (number|Long);

    /** AndroidAppDeliveryData sha1. */
    public sha1: string;

    /** AndroidAppDeliveryData downloadUrl. */
    public downloadUrl: string;

    /** AndroidAppDeliveryData additionalFile. */
    public additionalFile: IAppFileMetadata[];

    /** AndroidAppDeliveryData downloadAuthCookie. */
    public downloadAuthCookie: IHttpCookie[];

    /** AndroidAppDeliveryData forwardLocked. */
    public forwardLocked: boolean;

    /** AndroidAppDeliveryData refundTimeout. */
    public refundTimeout: (number|Long);

    /** AndroidAppDeliveryData serverInitiated. */
    public serverInitiated: boolean;

    /** AndroidAppDeliveryData postInstallRefundWindowMillis. */
    public postInstallRefundWindowMillis: (number|Long);

    /** AndroidAppDeliveryData immediateStartNeeded. */
    public immediateStartNeeded: boolean;

    /** AndroidAppDeliveryData patchData. */
    public patchData?: (IAndroidAppPatchData|null);

    /** AndroidAppDeliveryData encryptionParams. */
    public encryptionParams?: (IEncryptionParams|null);

    /** AndroidAppDeliveryData compressedDownloadUrl. */
    public compressedDownloadUrl: string;

    /** AndroidAppDeliveryData compressedSize. */
    public compressedSize: (number|Long);

    /** AndroidAppDeliveryData splitDeliveryData. */
    public splitDeliveryData: ISplitDeliveryData[];

    /** AndroidAppDeliveryData installLocation. */
    public installLocation: number;

    /** AndroidAppDeliveryData type. */
    public type: (number|Long);

    /** AndroidAppDeliveryData compressedAppData. */
    public compressedAppData?: (ICompressedAppData|null);

    /** AndroidAppDeliveryData sha256. */
    public sha256: string;

    /**
     * Creates a new AndroidAppDeliveryData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidAppDeliveryData instance
     */
    public static create(properties?: IAndroidAppDeliveryData): AndroidAppDeliveryData;

    /**
     * Encodes the specified AndroidAppDeliveryData message. Does not implicitly {@link AndroidAppDeliveryData.verify|verify} messages.
     * @param message AndroidAppDeliveryData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidAppDeliveryData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidAppDeliveryData message, length delimited. Does not implicitly {@link AndroidAppDeliveryData.verify|verify} messages.
     * @param message AndroidAppDeliveryData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidAppDeliveryData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidAppDeliveryData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidAppDeliveryData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidAppDeliveryData;

    /**
     * Decodes an AndroidAppDeliveryData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidAppDeliveryData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidAppDeliveryData;

    /**
     * Verifies an AndroidAppDeliveryData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidAppDeliveryData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidAppDeliveryData
     */
    public static fromObject(object: { [k: string]: any }): AndroidAppDeliveryData;

    /**
     * Creates a plain object from an AndroidAppDeliveryData message. Also converts values to other types if specified.
     * @param message AndroidAppDeliveryData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidAppDeliveryData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidAppDeliveryData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SplitDeliveryData. */
export interface ISplitDeliveryData {

    /** SplitDeliveryData name */
    name?: (string|null);

    /** SplitDeliveryData downloadSize */
    downloadSize?: (number|Long|null);

    /** SplitDeliveryData compressedSize */
    compressedSize?: (number|Long|null);

    /** SplitDeliveryData sha1 */
    sha1?: (string|null);

    /** SplitDeliveryData downloadUrl */
    downloadUrl?: (string|null);

    /** SplitDeliveryData compressedDownloadUrl */
    compressedDownloadUrl?: (string|null);

    /** SplitDeliveryData patchData */
    patchData?: (IAndroidAppPatchData|null);

    /** SplitDeliveryData compressedAppData */
    compressedAppData?: (ICompressedAppData|null);

    /** SplitDeliveryData sha256 */
    sha256?: (string|null);
}

/** Represents a SplitDeliveryData. */
export class SplitDeliveryData implements ISplitDeliveryData {

    /**
     * Constructs a new SplitDeliveryData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISplitDeliveryData);

    /** SplitDeliveryData name. */
    public name: string;

    /** SplitDeliveryData downloadSize. */
    public downloadSize: (number|Long);

    /** SplitDeliveryData compressedSize. */
    public compressedSize: (number|Long);

    /** SplitDeliveryData sha1. */
    public sha1: string;

    /** SplitDeliveryData downloadUrl. */
    public downloadUrl: string;

    /** SplitDeliveryData compressedDownloadUrl. */
    public compressedDownloadUrl: string;

    /** SplitDeliveryData patchData. */
    public patchData?: (IAndroidAppPatchData|null);

    /** SplitDeliveryData compressedAppData. */
    public compressedAppData?: (ICompressedAppData|null);

    /** SplitDeliveryData sha256. */
    public sha256: string;

    /**
     * Creates a new SplitDeliveryData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SplitDeliveryData instance
     */
    public static create(properties?: ISplitDeliveryData): SplitDeliveryData;

    /**
     * Encodes the specified SplitDeliveryData message. Does not implicitly {@link SplitDeliveryData.verify|verify} messages.
     * @param message SplitDeliveryData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISplitDeliveryData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SplitDeliveryData message, length delimited. Does not implicitly {@link SplitDeliveryData.verify|verify} messages.
     * @param message SplitDeliveryData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISplitDeliveryData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SplitDeliveryData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SplitDeliveryData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SplitDeliveryData;

    /**
     * Decodes a SplitDeliveryData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SplitDeliveryData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SplitDeliveryData;

    /**
     * Verifies a SplitDeliveryData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SplitDeliveryData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SplitDeliveryData
     */
    public static fromObject(object: { [k: string]: any }): SplitDeliveryData;

    /**
     * Creates a plain object from a SplitDeliveryData message. Also converts values to other types if specified.
     * @param message SplitDeliveryData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SplitDeliveryData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SplitDeliveryData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidAppPatchData. */
export interface IAndroidAppPatchData {

    /** AndroidAppPatchData baseVersionCode */
    baseVersionCode?: (number|null);

    /** AndroidAppPatchData baseSha1 */
    baseSha1?: (string|null);

    /** AndroidAppPatchData downloadUrl */
    downloadUrl?: (string|null);

    /** AndroidAppPatchData patchFormat */
    patchFormat?: (number|null);

    /** AndroidAppPatchData maxPatchSize */
    maxPatchSize?: (number|Long|null);
}

/** Represents an AndroidAppPatchData. */
export class AndroidAppPatchData implements IAndroidAppPatchData {

    /**
     * Constructs a new AndroidAppPatchData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidAppPatchData);

    /** AndroidAppPatchData baseVersionCode. */
    public baseVersionCode: number;

    /** AndroidAppPatchData baseSha1. */
    public baseSha1: string;

    /** AndroidAppPatchData downloadUrl. */
    public downloadUrl: string;

    /** AndroidAppPatchData patchFormat. */
    public patchFormat: number;

    /** AndroidAppPatchData maxPatchSize. */
    public maxPatchSize: (number|Long);

    /**
     * Creates a new AndroidAppPatchData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidAppPatchData instance
     */
    public static create(properties?: IAndroidAppPatchData): AndroidAppPatchData;

    /**
     * Encodes the specified AndroidAppPatchData message. Does not implicitly {@link AndroidAppPatchData.verify|verify} messages.
     * @param message AndroidAppPatchData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidAppPatchData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidAppPatchData message, length delimited. Does not implicitly {@link AndroidAppPatchData.verify|verify} messages.
     * @param message AndroidAppPatchData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidAppPatchData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidAppPatchData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidAppPatchData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidAppPatchData;

    /**
     * Decodes an AndroidAppPatchData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidAppPatchData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidAppPatchData;

    /**
     * Verifies an AndroidAppPatchData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidAppPatchData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidAppPatchData
     */
    public static fromObject(object: { [k: string]: any }): AndroidAppPatchData;

    /**
     * Creates a plain object from an AndroidAppPatchData message. Also converts values to other types if specified.
     * @param message AndroidAppPatchData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidAppPatchData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidAppPatchData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CompressedAppData. */
export interface ICompressedAppData {

    /** CompressedAppData type */
    type?: (number|Long|null);

    /** CompressedAppData size */
    size?: (number|Long|null);

    /** CompressedAppData downloadUrl */
    downloadUrl?: (string|null);
}

/** Represents a CompressedAppData. */
export class CompressedAppData implements ICompressedAppData {

    /**
     * Constructs a new CompressedAppData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICompressedAppData);

    /** CompressedAppData type. */
    public type: (number|Long);

    /** CompressedAppData size. */
    public size: (number|Long);

    /** CompressedAppData downloadUrl. */
    public downloadUrl: string;

    /**
     * Creates a new CompressedAppData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CompressedAppData instance
     */
    public static create(properties?: ICompressedAppData): CompressedAppData;

    /**
     * Encodes the specified CompressedAppData message. Does not implicitly {@link CompressedAppData.verify|verify} messages.
     * @param message CompressedAppData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICompressedAppData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CompressedAppData message, length delimited. Does not implicitly {@link CompressedAppData.verify|verify} messages.
     * @param message CompressedAppData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICompressedAppData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CompressedAppData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CompressedAppData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CompressedAppData;

    /**
     * Decodes a CompressedAppData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CompressedAppData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CompressedAppData;

    /**
     * Verifies a CompressedAppData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CompressedAppData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CompressedAppData
     */
    public static fromObject(object: { [k: string]: any }): CompressedAppData;

    /**
     * Creates a plain object from a CompressedAppData message. Also converts values to other types if specified.
     * @param message CompressedAppData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CompressedAppData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CompressedAppData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppFileMetadata. */
export interface IAppFileMetadata {

    /** AppFileMetadata fileType */
    fileType?: (number|null);

    /** AppFileMetadata versionCode */
    versionCode?: (number|null);

    /** AppFileMetadata size */
    size?: (number|Long|null);

    /** AppFileMetadata downloadUrl */
    downloadUrl?: (string|null);

    /** AppFileMetadata patchData */
    patchData?: (IAndroidAppPatchData|null);

    /** AppFileMetadata compressedSize */
    compressedSize?: (number|Long|null);

    /** AppFileMetadata compressedDownloadUrl */
    compressedDownloadUrl?: (string|null);

    /** AppFileMetadata sha1 */
    sha1?: (string|null);
}

/** Represents an AppFileMetadata. */
export class AppFileMetadata implements IAppFileMetadata {

    /**
     * Constructs a new AppFileMetadata.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppFileMetadata);

    /** AppFileMetadata fileType. */
    public fileType: number;

    /** AppFileMetadata versionCode. */
    public versionCode: number;

    /** AppFileMetadata size. */
    public size: (number|Long);

    /** AppFileMetadata downloadUrl. */
    public downloadUrl: string;

    /** AppFileMetadata patchData. */
    public patchData?: (IAndroidAppPatchData|null);

    /** AppFileMetadata compressedSize. */
    public compressedSize: (number|Long);

    /** AppFileMetadata compressedDownloadUrl. */
    public compressedDownloadUrl: string;

    /** AppFileMetadata sha1. */
    public sha1: string;

    /**
     * Creates a new AppFileMetadata instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppFileMetadata instance
     */
    public static create(properties?: IAppFileMetadata): AppFileMetadata;

    /**
     * Encodes the specified AppFileMetadata message. Does not implicitly {@link AppFileMetadata.verify|verify} messages.
     * @param message AppFileMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppFileMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppFileMetadata message, length delimited. Does not implicitly {@link AppFileMetadata.verify|verify} messages.
     * @param message AppFileMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppFileMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppFileMetadata message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppFileMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppFileMetadata;

    /**
     * Decodes an AppFileMetadata message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppFileMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppFileMetadata;

    /**
     * Verifies an AppFileMetadata message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppFileMetadata message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppFileMetadata
     */
    public static fromObject(object: { [k: string]: any }): AppFileMetadata;

    /**
     * Creates a plain object from an AppFileMetadata message. Also converts values to other types if specified.
     * @param message AppFileMetadata
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppFileMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppFileMetadata to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EncryptionParams. */
export interface IEncryptionParams {

    /** EncryptionParams version */
    version?: (number|null);

    /** EncryptionParams encryptionKey */
    encryptionKey?: (string|null);

    /** EncryptionParams hMacKey */
    hMacKey?: (string|null);
}

/** Represents an EncryptionParams. */
export class EncryptionParams implements IEncryptionParams {

    /**
     * Constructs a new EncryptionParams.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEncryptionParams);

    /** EncryptionParams version. */
    public version: number;

    /** EncryptionParams encryptionKey. */
    public encryptionKey: string;

    /** EncryptionParams hMacKey. */
    public hMacKey: string;

    /**
     * Creates a new EncryptionParams instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EncryptionParams instance
     */
    public static create(properties?: IEncryptionParams): EncryptionParams;

    /**
     * Encodes the specified EncryptionParams message. Does not implicitly {@link EncryptionParams.verify|verify} messages.
     * @param message EncryptionParams message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEncryptionParams, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EncryptionParams message, length delimited. Does not implicitly {@link EncryptionParams.verify|verify} messages.
     * @param message EncryptionParams message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEncryptionParams, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EncryptionParams message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EncryptionParams
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EncryptionParams;

    /**
     * Decodes an EncryptionParams message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EncryptionParams
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EncryptionParams;

    /**
     * Verifies an EncryptionParams message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EncryptionParams message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EncryptionParams
     */
    public static fromObject(object: { [k: string]: any }): EncryptionParams;

    /**
     * Creates a plain object from an EncryptionParams message. Also converts values to other types if specified.
     * @param message EncryptionParams
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EncryptionParams, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EncryptionParams to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a HttpCookie. */
export interface IHttpCookie {

    /** HttpCookie name */
    name?: (string|null);

    /** HttpCookie value */
    value?: (string|null);
}

/** Represents a HttpCookie. */
export class HttpCookie implements IHttpCookie {

    /**
     * Constructs a new HttpCookie.
     * @param [properties] Properties to set
     */
    constructor(properties?: IHttpCookie);

    /** HttpCookie name. */
    public name: string;

    /** HttpCookie value. */
    public value: string;

    /**
     * Creates a new HttpCookie instance using the specified properties.
     * @param [properties] Properties to set
     * @returns HttpCookie instance
     */
    public static create(properties?: IHttpCookie): HttpCookie;

    /**
     * Encodes the specified HttpCookie message. Does not implicitly {@link HttpCookie.verify|verify} messages.
     * @param message HttpCookie message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IHttpCookie, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified HttpCookie message, length delimited. Does not implicitly {@link HttpCookie.verify|verify} messages.
     * @param message HttpCookie message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IHttpCookie, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a HttpCookie message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns HttpCookie
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): HttpCookie;

    /**
     * Decodes a HttpCookie message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns HttpCookie
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): HttpCookie;

    /**
     * Verifies a HttpCookie message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a HttpCookie message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns HttpCookie
     */
    public static fromObject(object: { [k: string]: any }): HttpCookie;

    /**
     * Creates a plain object from a HttpCookie message. Also converts values to other types if specified.
     * @param message HttpCookie
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: HttpCookie, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this HttpCookie to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Address. */
export interface IAddress {

    /** Address name */
    name?: (string|null);

    /** Address addressLine1 */
    addressLine1?: (string|null);

    /** Address addressLine2 */
    addressLine2?: (string|null);

    /** Address city */
    city?: (string|null);

    /** Address state */
    state?: (string|null);

    /** Address postalCode */
    postalCode?: (string|null);

    /** Address postalCountry */
    postalCountry?: (string|null);

    /** Address dependentLocality */
    dependentLocality?: (string|null);

    /** Address sortingCode */
    sortingCode?: (string|null);

    /** Address languageCode */
    languageCode?: (string|null);

    /** Address phoneNumber */
    phoneNumber?: (string|null);

    /** Address deprecatedIsReduced */
    deprecatedIsReduced?: (boolean|null);

    /** Address firstName */
    firstName?: (string|null);

    /** Address lastName */
    lastName?: (string|null);

    /** Address email */
    email?: (string|null);
}

/** Represents an Address. */
export class Address implements IAddress {

    /**
     * Constructs a new Address.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAddress);

    /** Address name. */
    public name: string;

    /** Address addressLine1. */
    public addressLine1: string;

    /** Address addressLine2. */
    public addressLine2: string;

    /** Address city. */
    public city: string;

    /** Address state. */
    public state: string;

    /** Address postalCode. */
    public postalCode: string;

    /** Address postalCountry. */
    public postalCountry: string;

    /** Address dependentLocality. */
    public dependentLocality: string;

    /** Address sortingCode. */
    public sortingCode: string;

    /** Address languageCode. */
    public languageCode: string;

    /** Address phoneNumber. */
    public phoneNumber: string;

    /** Address deprecatedIsReduced. */
    public deprecatedIsReduced: boolean;

    /** Address firstName. */
    public firstName: string;

    /** Address lastName. */
    public lastName: string;

    /** Address email. */
    public email: string;

    /**
     * Creates a new Address instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Address instance
     */
    public static create(properties?: IAddress): Address;

    /**
     * Encodes the specified Address message. Does not implicitly {@link Address.verify|verify} messages.
     * @param message Address message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAddress, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Address message, length delimited. Does not implicitly {@link Address.verify|verify} messages.
     * @param message Address message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAddress, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Address message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Address
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Address;

    /**
     * Decodes an Address message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Address
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Address;

    /**
     * Verifies an Address message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Address message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Address
     */
    public static fromObject(object: { [k: string]: any }): Address;

    /**
     * Creates a plain object from an Address message. Also converts values to other types if specified.
     * @param message Address
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Address, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Address to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BrowseLink. */
export interface IBrowseLink {

    /** BrowseLink name */
    name?: (string|null);

    /** BrowseLink dataUrl */
    dataUrl?: (string|null);

    /** BrowseLink serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** BrowseLink icon */
    icon?: (IImage|null);
}

/** Represents a BrowseLink. */
export class BrowseLink implements IBrowseLink {

    /**
     * Constructs a new BrowseLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBrowseLink);

    /** BrowseLink name. */
    public name: string;

    /** BrowseLink dataUrl. */
    public dataUrl: string;

    /** BrowseLink serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** BrowseLink icon. */
    public icon?: (IImage|null);

    /**
     * Creates a new BrowseLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BrowseLink instance
     */
    public static create(properties?: IBrowseLink): BrowseLink;

    /**
     * Encodes the specified BrowseLink message. Does not implicitly {@link BrowseLink.verify|verify} messages.
     * @param message BrowseLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBrowseLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BrowseLink message, length delimited. Does not implicitly {@link BrowseLink.verify|verify} messages.
     * @param message BrowseLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBrowseLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BrowseLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BrowseLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BrowseLink;

    /**
     * Decodes a BrowseLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BrowseLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BrowseLink;

    /**
     * Verifies a BrowseLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BrowseLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BrowseLink
     */
    public static fromObject(object: { [k: string]: any }): BrowseLink;

    /**
     * Creates a plain object from a BrowseLink message. Also converts values to other types if specified.
     * @param message BrowseLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BrowseLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BrowseLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BrowseResponse. */
export interface IBrowseResponse {

    /** BrowseResponse contentsUrl */
    contentsUrl?: (string|null);

    /** BrowseResponse promoUrl */
    promoUrl?: (string|null);

    /** BrowseResponse category */
    category?: (IBrowseLink[]|null);

    /** BrowseResponse breadcrumb */
    breadcrumb?: (IBrowseLink[]|null);

    /** BrowseResponse quickLink */
    quickLink?: (IQuickLink[]|null);

    /** BrowseResponse serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** BrowseResponse title */
    title?: (string|null);

    /** BrowseResponse backendId */
    backendId?: (number|null);

    /** BrowseResponse browseTab */
    browseTab?: (IBrowseTab|null);

    /** BrowseResponse landingTabIndex */
    landingTabIndex?: (number|null);

    /** BrowseResponse quickLinkTabIndex */
    quickLinkTabIndex?: (number|null);

    /** BrowseResponse quickLinkFallbackTabIndex */
    quickLinkFallbackTabIndex?: (number|null);

    /** BrowseResponse isFamilySafe */
    isFamilySafe?: (boolean|null);

    /** BrowseResponse shareUrl */
    shareUrl?: (string|null);
}

/** Represents a BrowseResponse. */
export class BrowseResponse implements IBrowseResponse {

    /**
     * Constructs a new BrowseResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBrowseResponse);

    /** BrowseResponse contentsUrl. */
    public contentsUrl: string;

    /** BrowseResponse promoUrl. */
    public promoUrl: string;

    /** BrowseResponse category. */
    public category: IBrowseLink[];

    /** BrowseResponse breadcrumb. */
    public breadcrumb: IBrowseLink[];

    /** BrowseResponse quickLink. */
    public quickLink: IQuickLink[];

    /** BrowseResponse serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** BrowseResponse title. */
    public title: string;

    /** BrowseResponse backendId. */
    public backendId: number;

    /** BrowseResponse browseTab. */
    public browseTab?: (IBrowseTab|null);

    /** BrowseResponse landingTabIndex. */
    public landingTabIndex: number;

    /** BrowseResponse quickLinkTabIndex. */
    public quickLinkTabIndex: number;

    /** BrowseResponse quickLinkFallbackTabIndex. */
    public quickLinkFallbackTabIndex: number;

    /** BrowseResponse isFamilySafe. */
    public isFamilySafe: boolean;

    /** BrowseResponse shareUrl. */
    public shareUrl: string;

    /**
     * Creates a new BrowseResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BrowseResponse instance
     */
    public static create(properties?: IBrowseResponse): BrowseResponse;

    /**
     * Encodes the specified BrowseResponse message. Does not implicitly {@link BrowseResponse.verify|verify} messages.
     * @param message BrowseResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBrowseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BrowseResponse message, length delimited. Does not implicitly {@link BrowseResponse.verify|verify} messages.
     * @param message BrowseResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBrowseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BrowseResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BrowseResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BrowseResponse;

    /**
     * Decodes a BrowseResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BrowseResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BrowseResponse;

    /**
     * Verifies a BrowseResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BrowseResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BrowseResponse
     */
    public static fromObject(object: { [k: string]: any }): BrowseResponse;

    /**
     * Creates a plain object from a BrowseResponse message. Also converts values to other types if specified.
     * @param message BrowseResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BrowseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BrowseResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DirectPurchase. */
export interface IDirectPurchase {

    /** DirectPurchase detailsUrl */
    detailsUrl?: (string|null);

    /** DirectPurchase purchaseItemId */
    purchaseItemId?: (string|null);

    /** DirectPurchase parentItemId */
    parentItemId?: (string|null);

    /** DirectPurchase offerType */
    offerType?: (number|null);
}

/** Represents a DirectPurchase. */
export class DirectPurchase implements IDirectPurchase {

    /**
     * Constructs a new DirectPurchase.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDirectPurchase);

    /** DirectPurchase detailsUrl. */
    public detailsUrl: string;

    /** DirectPurchase purchaseItemId. */
    public purchaseItemId: string;

    /** DirectPurchase parentItemId. */
    public parentItemId: string;

    /** DirectPurchase offerType. */
    public offerType: number;

    /**
     * Creates a new DirectPurchase instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DirectPurchase instance
     */
    public static create(properties?: IDirectPurchase): DirectPurchase;

    /**
     * Encodes the specified DirectPurchase message. Does not implicitly {@link DirectPurchase.verify|verify} messages.
     * @param message DirectPurchase message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDirectPurchase, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DirectPurchase message, length delimited. Does not implicitly {@link DirectPurchase.verify|verify} messages.
     * @param message DirectPurchase message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDirectPurchase, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DirectPurchase message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DirectPurchase
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DirectPurchase;

    /**
     * Decodes a DirectPurchase message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DirectPurchase
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DirectPurchase;

    /**
     * Verifies a DirectPurchase message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DirectPurchase message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DirectPurchase
     */
    public static fromObject(object: { [k: string]: any }): DirectPurchase;

    /**
     * Creates a plain object from a DirectPurchase message. Also converts values to other types if specified.
     * @param message DirectPurchase
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DirectPurchase, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DirectPurchase to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RedeemGiftCard. */
export interface IRedeemGiftCard {

    /** RedeemGiftCard prefillCode */
    prefillCode?: (string|null);

    /** RedeemGiftCard partnerPayload */
    partnerPayload?: (string|null);
}

/** Represents a RedeemGiftCard. */
export class RedeemGiftCard implements IRedeemGiftCard {

    /**
     * Constructs a new RedeemGiftCard.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRedeemGiftCard);

    /** RedeemGiftCard prefillCode. */
    public prefillCode: string;

    /** RedeemGiftCard partnerPayload. */
    public partnerPayload: string;

    /**
     * Creates a new RedeemGiftCard instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RedeemGiftCard instance
     */
    public static create(properties?: IRedeemGiftCard): RedeemGiftCard;

    /**
     * Encodes the specified RedeemGiftCard message. Does not implicitly {@link RedeemGiftCard.verify|verify} messages.
     * @param message RedeemGiftCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRedeemGiftCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RedeemGiftCard message, length delimited. Does not implicitly {@link RedeemGiftCard.verify|verify} messages.
     * @param message RedeemGiftCard message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRedeemGiftCard, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RedeemGiftCard message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RedeemGiftCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RedeemGiftCard;

    /**
     * Decodes a RedeemGiftCard message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RedeemGiftCard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RedeemGiftCard;

    /**
     * Verifies a RedeemGiftCard message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RedeemGiftCard message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RedeemGiftCard
     */
    public static fromObject(object: { [k: string]: any }): RedeemGiftCard;

    /**
     * Creates a plain object from a RedeemGiftCard message. Also converts values to other types if specified.
     * @param message RedeemGiftCard
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RedeemGiftCard, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RedeemGiftCard to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ResolvedLink. */
export interface IResolvedLink {

    /** ResolvedLink detailsUrl */
    detailsUrl?: (string|null);

    /** ResolvedLink browseUrl */
    browseUrl?: (string|null);

    /** ResolvedLink searchUrl */
    searchUrl?: (string|null);

    /** ResolvedLink directPurchase */
    directPurchase?: (IDirectPurchase|null);

    /** ResolvedLink homeUrl */
    homeUrl?: (string|null);

    /** ResolvedLink redeemGiftCard */
    redeemGiftCard?: (IRedeemGiftCard|null);

    /** ResolvedLink serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** ResolvedLink DocId */
    DocId?: (IDocId|null);

    /** ResolvedLink wishlistUrl */
    wishlistUrl?: (string|null);

    /** ResolvedLink backend */
    backend?: (number|null);

    /** ResolvedLink query */
    query?: (string|null);

    /** ResolvedLink myAccountUrl */
    myAccountUrl?: (string|null);

    /** ResolvedLink helpCenter */
    helpCenter?: (IHelpCenter|null);
}

/** Represents a ResolvedLink. */
export class ResolvedLink implements IResolvedLink {

    /**
     * Constructs a new ResolvedLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IResolvedLink);

    /** ResolvedLink detailsUrl. */
    public detailsUrl: string;

    /** ResolvedLink browseUrl. */
    public browseUrl: string;

    /** ResolvedLink searchUrl. */
    public searchUrl: string;

    /** ResolvedLink directPurchase. */
    public directPurchase?: (IDirectPurchase|null);

    /** ResolvedLink homeUrl. */
    public homeUrl: string;

    /** ResolvedLink redeemGiftCard. */
    public redeemGiftCard?: (IRedeemGiftCard|null);

    /** ResolvedLink serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** ResolvedLink DocId. */
    public DocId?: (IDocId|null);

    /** ResolvedLink wishlistUrl. */
    public wishlistUrl: string;

    /** ResolvedLink backend. */
    public backend: number;

    /** ResolvedLink query. */
    public query: string;

    /** ResolvedLink myAccountUrl. */
    public myAccountUrl: string;

    /** ResolvedLink helpCenter. */
    public helpCenter?: (IHelpCenter|null);

    /**
     * Creates a new ResolvedLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ResolvedLink instance
     */
    public static create(properties?: IResolvedLink): ResolvedLink;

    /**
     * Encodes the specified ResolvedLink message. Does not implicitly {@link ResolvedLink.verify|verify} messages.
     * @param message ResolvedLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IResolvedLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ResolvedLink message, length delimited. Does not implicitly {@link ResolvedLink.verify|verify} messages.
     * @param message ResolvedLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IResolvedLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ResolvedLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ResolvedLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ResolvedLink;

    /**
     * Decodes a ResolvedLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ResolvedLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ResolvedLink;

    /**
     * Verifies a ResolvedLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ResolvedLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ResolvedLink
     */
    public static fromObject(object: { [k: string]: any }): ResolvedLink;

    /**
     * Creates a plain object from a ResolvedLink message. Also converts values to other types if specified.
     * @param message ResolvedLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ResolvedLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ResolvedLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a HelpCenter. */
export interface IHelpCenter {

    /** HelpCenter contextId */
    contextId?: (string|null);
}

/** Represents a HelpCenter. */
export class HelpCenter implements IHelpCenter {

    /**
     * Constructs a new HelpCenter.
     * @param [properties] Properties to set
     */
    constructor(properties?: IHelpCenter);

    /** HelpCenter contextId. */
    public contextId: string;

    /**
     * Creates a new HelpCenter instance using the specified properties.
     * @param [properties] Properties to set
     * @returns HelpCenter instance
     */
    public static create(properties?: IHelpCenter): HelpCenter;

    /**
     * Encodes the specified HelpCenter message. Does not implicitly {@link HelpCenter.verify|verify} messages.
     * @param message HelpCenter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IHelpCenter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified HelpCenter message, length delimited. Does not implicitly {@link HelpCenter.verify|verify} messages.
     * @param message HelpCenter message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IHelpCenter, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a HelpCenter message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns HelpCenter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): HelpCenter;

    /**
     * Decodes a HelpCenter message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns HelpCenter
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): HelpCenter;

    /**
     * Verifies a HelpCenter message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a HelpCenter message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns HelpCenter
     */
    public static fromObject(object: { [k: string]: any }): HelpCenter;

    /**
     * Creates a plain object from a HelpCenter message. Also converts values to other types if specified.
     * @param message HelpCenter
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: HelpCenter, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this HelpCenter to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a QuickLink. */
export interface IQuickLink {

    /** QuickLink name */
    name?: (string|null);

    /** QuickLink image */
    image?: (IImage|null);

    /** QuickLink link */
    link?: (IResolvedLink|null);

    /** QuickLink displayRequired */
    displayRequired?: (boolean|null);

    /** QuickLink serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** QuickLink backendId */
    backendId?: (number|null);

    /** QuickLink prismStyle */
    prismStyle?: (boolean|null);
}

/** Represents a QuickLink. */
export class QuickLink implements IQuickLink {

    /**
     * Constructs a new QuickLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IQuickLink);

    /** QuickLink name. */
    public name: string;

    /** QuickLink image. */
    public image?: (IImage|null);

    /** QuickLink link. */
    public link?: (IResolvedLink|null);

    /** QuickLink displayRequired. */
    public displayRequired: boolean;

    /** QuickLink serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** QuickLink backendId. */
    public backendId: number;

    /** QuickLink prismStyle. */
    public prismStyle: boolean;

    /**
     * Creates a new QuickLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns QuickLink instance
     */
    public static create(properties?: IQuickLink): QuickLink;

    /**
     * Encodes the specified QuickLink message. Does not implicitly {@link QuickLink.verify|verify} messages.
     * @param message QuickLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IQuickLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified QuickLink message, length delimited. Does not implicitly {@link QuickLink.verify|verify} messages.
     * @param message QuickLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IQuickLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a QuickLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns QuickLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): QuickLink;

    /**
     * Decodes a QuickLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns QuickLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): QuickLink;

    /**
     * Verifies a QuickLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a QuickLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns QuickLink
     */
    public static fromObject(object: { [k: string]: any }): QuickLink;

    /**
     * Creates a plain object from a QuickLink message. Also converts values to other types if specified.
     * @param message QuickLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: QuickLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this QuickLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BrowseTab. */
export interface IBrowseTab {

    /** BrowseTab title */
    title?: (string|null);

    /** BrowseTab serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** BrowseTab listUrl */
    listUrl?: (string|null);

    /** BrowseTab browseLink */
    browseLink?: (IBrowseLink[]|null);

    /** BrowseTab quickLink */
    quickLink?: (IQuickLink[]|null);

    /** BrowseTab quickLinkTitle */
    quickLinkTitle?: (string|null);

    /** BrowseTab categoriesTitle */
    categoriesTitle?: (string|null);

    /** BrowseTab backendId */
    backendId?: (number|null);

    /** BrowseTab highlightsBannerUrl */
    highlightsBannerUrl?: (string|null);
}

/** Represents a BrowseTab. */
export class BrowseTab implements IBrowseTab {

    /**
     * Constructs a new BrowseTab.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBrowseTab);

    /** BrowseTab title. */
    public title: string;

    /** BrowseTab serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** BrowseTab listUrl. */
    public listUrl: string;

    /** BrowseTab browseLink. */
    public browseLink: IBrowseLink[];

    /** BrowseTab quickLink. */
    public quickLink: IQuickLink[];

    /** BrowseTab quickLinkTitle. */
    public quickLinkTitle: string;

    /** BrowseTab categoriesTitle. */
    public categoriesTitle: string;

    /** BrowseTab backendId. */
    public backendId: number;

    /** BrowseTab highlightsBannerUrl. */
    public highlightsBannerUrl: string;

    /**
     * Creates a new BrowseTab instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BrowseTab instance
     */
    public static create(properties?: IBrowseTab): BrowseTab;

    /**
     * Encodes the specified BrowseTab message. Does not implicitly {@link BrowseTab.verify|verify} messages.
     * @param message BrowseTab message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBrowseTab, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BrowseTab message, length delimited. Does not implicitly {@link BrowseTab.verify|verify} messages.
     * @param message BrowseTab message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBrowseTab, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BrowseTab message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BrowseTab
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BrowseTab;

    /**
     * Decodes a BrowseTab message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BrowseTab
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BrowseTab;

    /**
     * Verifies a BrowseTab message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BrowseTab message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BrowseTab
     */
    public static fromObject(object: { [k: string]: any }): BrowseTab;

    /**
     * Creates a plain object from a BrowseTab message. Also converts values to other types if specified.
     * @param message BrowseTab
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BrowseTab, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BrowseTab to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BuyResponse. */
export interface IBuyResponse {

    /** BuyResponse purchaseResponse */
    purchaseResponse?: (IPurchaseNotificationResponse|null);

    /** BuyResponse checkoutInfo */
    checkoutInfo?: (BuyResponse.ICheckoutInfo|null);

    /** BuyResponse continueViaUrl */
    continueViaUrl?: (string|null);

    /** BuyResponse purchaseStatusUrl */
    purchaseStatusUrl?: (string|null);

    /** BuyResponse checkoutServiceId */
    checkoutServiceId?: (string|null);

    /** BuyResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);

    /** BuyResponse baseCheckoutUrl */
    baseCheckoutUrl?: (string|null);

    /** BuyResponse tosCheckboxHtml */
    tosCheckboxHtml?: (string[]|null);

    /** BuyResponse iabPermissionError */
    iabPermissionError?: (number|null);

    /** BuyResponse purchaseStatusResponse */
    purchaseStatusResponse?: (IPurchaseStatusResponse|null);

    /** BuyResponse purchaseCookie */
    purchaseCookie?: (string|null);

    /** BuyResponse challenge */
    challenge?: (IChallenge|null);

    /** BuyResponse addInstrumentPromptHtml */
    addInstrumentPromptHtml?: (string|null);

    /** BuyResponse confirmButtonText */
    confirmButtonText?: (string|null);

    /** BuyResponse permissionErrorTitleText */
    permissionErrorTitleText?: (string|null);

    /** BuyResponse permissionErrorMessageText */
    permissionErrorMessageText?: (string|null);

    /** BuyResponse serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** BuyResponse encodedDeliveryToken */
    encodedDeliveryToken?: (string|null);

    /** BuyResponse unknownToken */
    unknownToken?: (string|null);
}

/** Represents a BuyResponse. */
export class BuyResponse implements IBuyResponse {

    /**
     * Constructs a new BuyResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBuyResponse);

    /** BuyResponse purchaseResponse. */
    public purchaseResponse?: (IPurchaseNotificationResponse|null);

    /** BuyResponse checkoutInfo. */
    public checkoutInfo?: (BuyResponse.ICheckoutInfo|null);

    /** BuyResponse continueViaUrl. */
    public continueViaUrl: string;

    /** BuyResponse purchaseStatusUrl. */
    public purchaseStatusUrl: string;

    /** BuyResponse checkoutServiceId. */
    public checkoutServiceId: string;

    /** BuyResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /** BuyResponse baseCheckoutUrl. */
    public baseCheckoutUrl: string;

    /** BuyResponse tosCheckboxHtml. */
    public tosCheckboxHtml: string[];

    /** BuyResponse iabPermissionError. */
    public iabPermissionError: number;

    /** BuyResponse purchaseStatusResponse. */
    public purchaseStatusResponse?: (IPurchaseStatusResponse|null);

    /** BuyResponse purchaseCookie. */
    public purchaseCookie: string;

    /** BuyResponse challenge. */
    public challenge?: (IChallenge|null);

    /** BuyResponse addInstrumentPromptHtml. */
    public addInstrumentPromptHtml: string;

    /** BuyResponse confirmButtonText. */
    public confirmButtonText: string;

    /** BuyResponse permissionErrorTitleText. */
    public permissionErrorTitleText: string;

    /** BuyResponse permissionErrorMessageText. */
    public permissionErrorMessageText: string;

    /** BuyResponse serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** BuyResponse encodedDeliveryToken. */
    public encodedDeliveryToken: string;

    /** BuyResponse unknownToken. */
    public unknownToken: string;

    /**
     * Creates a new BuyResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BuyResponse instance
     */
    public static create(properties?: IBuyResponse): BuyResponse;

    /**
     * Encodes the specified BuyResponse message. Does not implicitly {@link BuyResponse.verify|verify} messages.
     * @param message BuyResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBuyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BuyResponse message, length delimited. Does not implicitly {@link BuyResponse.verify|verify} messages.
     * @param message BuyResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBuyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BuyResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BuyResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BuyResponse;

    /**
     * Decodes a BuyResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BuyResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BuyResponse;

    /**
     * Verifies a BuyResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BuyResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BuyResponse
     */
    public static fromObject(object: { [k: string]: any }): BuyResponse;

    /**
     * Creates a plain object from a BuyResponse message. Also converts values to other types if specified.
     * @param message BuyResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BuyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BuyResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace BuyResponse {

    /** Properties of a CheckoutInfo. */
    interface ICheckoutInfo {

        /** CheckoutInfo item */
        item?: (ILineItem|null);

        /** CheckoutInfo subItem */
        subItem?: (ILineItem[]|null);

        /** CheckoutInfo checkoutOption */
        checkoutOption?: (BuyResponse.CheckoutInfo.ICheckoutOption[]|null);

        /** CheckoutInfo deprecatedCheckoutUrl */
        deprecatedCheckoutUrl?: (string|null);

        /** CheckoutInfo addInstrumentUrl */
        addInstrumentUrl?: (string|null);

        /** CheckoutInfo footerHtml */
        footerHtml?: (string[]|null);

        /** CheckoutInfo eligibleInstrumentFamily */
        eligibleInstrumentFamily?: (number[]|null);

        /** CheckoutInfo footnoteHtml */
        footnoteHtml?: (string[]|null);

        /** CheckoutInfo eligibleInstrument */
        eligibleInstrument?: (IInstrument[]|null);
    }

    /** Represents a CheckoutInfo. */
    class CheckoutInfo implements ICheckoutInfo {

        /**
         * Constructs a new CheckoutInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: BuyResponse.ICheckoutInfo);

        /** CheckoutInfo item. */
        public item?: (ILineItem|null);

        /** CheckoutInfo subItem. */
        public subItem: ILineItem[];

        /** CheckoutInfo checkoutOption. */
        public checkoutOption: BuyResponse.CheckoutInfo.ICheckoutOption[];

        /** CheckoutInfo deprecatedCheckoutUrl. */
        public deprecatedCheckoutUrl: string;

        /** CheckoutInfo addInstrumentUrl. */
        public addInstrumentUrl: string;

        /** CheckoutInfo footerHtml. */
        public footerHtml: string[];

        /** CheckoutInfo eligibleInstrumentFamily. */
        public eligibleInstrumentFamily: number[];

        /** CheckoutInfo footnoteHtml. */
        public footnoteHtml: string[];

        /** CheckoutInfo eligibleInstrument. */
        public eligibleInstrument: IInstrument[];

        /**
         * Creates a new CheckoutInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CheckoutInfo instance
         */
        public static create(properties?: BuyResponse.ICheckoutInfo): BuyResponse.CheckoutInfo;

        /**
         * Encodes the specified CheckoutInfo message. Does not implicitly {@link BuyResponse.CheckoutInfo.verify|verify} messages.
         * @param message CheckoutInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: BuyResponse.ICheckoutInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CheckoutInfo message, length delimited. Does not implicitly {@link BuyResponse.CheckoutInfo.verify|verify} messages.
         * @param message CheckoutInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: BuyResponse.ICheckoutInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CheckoutInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CheckoutInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BuyResponse.CheckoutInfo;

        /**
         * Decodes a CheckoutInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CheckoutInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BuyResponse.CheckoutInfo;

        /**
         * Verifies a CheckoutInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CheckoutInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CheckoutInfo
         */
        public static fromObject(object: { [k: string]: any }): BuyResponse.CheckoutInfo;

        /**
         * Creates a plain object from a CheckoutInfo message. Also converts values to other types if specified.
         * @param message CheckoutInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: BuyResponse.CheckoutInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CheckoutInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace CheckoutInfo {

        /** Properties of a CheckoutOption. */
        interface ICheckoutOption {

            /** CheckoutOption formOfPayment */
            formOfPayment?: (string|null);

            /** CheckoutOption encodedAdjustedCart */
            encodedAdjustedCart?: (string|null);

            /** CheckoutOption instrumentId */
            instrumentId?: (string|null);

            /** CheckoutOption item */
            item?: (ILineItem[]|null);

            /** CheckoutOption subItem */
            subItem?: (ILineItem[]|null);

            /** CheckoutOption total */
            total?: (ILineItem|null);

            /** CheckoutOption footerHtml */
            footerHtml?: (string[]|null);

            /** CheckoutOption instrumentFamily */
            instrumentFamily?: (number|null);

            /** CheckoutOption deprecatedInstrumentInapplicableReason */
            deprecatedInstrumentInapplicableReason?: (number[]|null);

            /** CheckoutOption selectedInstrument */
            selectedInstrument?: (boolean|null);

            /** CheckoutOption summary */
            summary?: (ILineItem|null);

            /** CheckoutOption footnoteHtml */
            footnoteHtml?: (string[]|null);

            /** CheckoutOption instrument */
            instrument?: (IInstrument|null);

            /** CheckoutOption purchaseCookie */
            purchaseCookie?: (string|null);

            /** CheckoutOption disabledReason */
            disabledReason?: (string[]|null);
        }

        /** Represents a CheckoutOption. */
        class CheckoutOption implements ICheckoutOption {

            /**
             * Constructs a new CheckoutOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: BuyResponse.CheckoutInfo.ICheckoutOption);

            /** CheckoutOption formOfPayment. */
            public formOfPayment: string;

            /** CheckoutOption encodedAdjustedCart. */
            public encodedAdjustedCart: string;

            /** CheckoutOption instrumentId. */
            public instrumentId: string;

            /** CheckoutOption item. */
            public item: ILineItem[];

            /** CheckoutOption subItem. */
            public subItem: ILineItem[];

            /** CheckoutOption total. */
            public total?: (ILineItem|null);

            /** CheckoutOption footerHtml. */
            public footerHtml: string[];

            /** CheckoutOption instrumentFamily. */
            public instrumentFamily: number;

            /** CheckoutOption deprecatedInstrumentInapplicableReason. */
            public deprecatedInstrumentInapplicableReason: number[];

            /** CheckoutOption selectedInstrument. */
            public selectedInstrument: boolean;

            /** CheckoutOption summary. */
            public summary?: (ILineItem|null);

            /** CheckoutOption footnoteHtml. */
            public footnoteHtml: string[];

            /** CheckoutOption instrument. */
            public instrument?: (IInstrument|null);

            /** CheckoutOption purchaseCookie. */
            public purchaseCookie: string;

            /** CheckoutOption disabledReason. */
            public disabledReason: string[];

            /**
             * Creates a new CheckoutOption instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckoutOption instance
             */
            public static create(properties?: BuyResponse.CheckoutInfo.ICheckoutOption): BuyResponse.CheckoutInfo.CheckoutOption;

            /**
             * Encodes the specified CheckoutOption message. Does not implicitly {@link BuyResponse.CheckoutInfo.CheckoutOption.verify|verify} messages.
             * @param message CheckoutOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: BuyResponse.CheckoutInfo.ICheckoutOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckoutOption message, length delimited. Does not implicitly {@link BuyResponse.CheckoutInfo.CheckoutOption.verify|verify} messages.
             * @param message CheckoutOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: BuyResponse.CheckoutInfo.ICheckoutOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckoutOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckoutOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BuyResponse.CheckoutInfo.CheckoutOption;

            /**
             * Decodes a CheckoutOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckoutOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BuyResponse.CheckoutInfo.CheckoutOption;

            /**
             * Verifies a CheckoutOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckoutOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckoutOption
             */
            public static fromObject(object: { [k: string]: any }): BuyResponse.CheckoutInfo.CheckoutOption;

            /**
             * Creates a plain object from a CheckoutOption message. Also converts values to other types if specified.
             * @param message CheckoutOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: BuyResponse.CheckoutInfo.CheckoutOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckoutOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Properties of a LineItem. */
export interface ILineItem {

    /** LineItem name */
    name?: (string|null);

    /** LineItem description */
    description?: (string|null);

    /** LineItem offer */
    offer?: (IOffer|null);

    /** LineItem amount */
    amount?: (IMoney|null);
}

/** Represents a LineItem. */
export class LineItem implements ILineItem {

    /**
     * Constructs a new LineItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILineItem);

    /** LineItem name. */
    public name: string;

    /** LineItem description. */
    public description: string;

    /** LineItem offer. */
    public offer?: (IOffer|null);

    /** LineItem amount. */
    public amount?: (IMoney|null);

    /**
     * Creates a new LineItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LineItem instance
     */
    public static create(properties?: ILineItem): LineItem;

    /**
     * Encodes the specified LineItem message. Does not implicitly {@link LineItem.verify|verify} messages.
     * @param message LineItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILineItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LineItem message, length delimited. Does not implicitly {@link LineItem.verify|verify} messages.
     * @param message LineItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILineItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LineItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LineItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LineItem;

    /**
     * Decodes a LineItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LineItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LineItem;

    /**
     * Verifies a LineItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LineItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LineItem
     */
    public static fromObject(object: { [k: string]: any }): LineItem;

    /**
     * Creates a plain object from a LineItem message. Also converts values to other types if specified.
     * @param message LineItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LineItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LineItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Money. */
export interface IMoney {

    /** Money micros */
    micros?: (number|Long|null);

    /** Money currencyCode */
    currencyCode?: (string|null);

    /** Money formattedAmount */
    formattedAmount?: (string|null);
}

/** Represents a Money. */
export class Money implements IMoney {

    /**
     * Constructs a new Money.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMoney);

    /** Money micros. */
    public micros: (number|Long);

    /** Money currencyCode. */
    public currencyCode: string;

    /** Money formattedAmount. */
    public formattedAmount: string;

    /**
     * Creates a new Money instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Money instance
     */
    public static create(properties?: IMoney): Money;

    /**
     * Encodes the specified Money message. Does not implicitly {@link Money.verify|verify} messages.
     * @param message Money message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Money message, length delimited. Does not implicitly {@link Money.verify|verify} messages.
     * @param message Money message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMoney, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Money message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Money
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Money;

    /**
     * Decodes a Money message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Money
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Money;

    /**
     * Verifies a Money message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Money message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Money
     */
    public static fromObject(object: { [k: string]: any }): Money;

    /**
     * Creates a plain object from a Money message. Also converts values to other types if specified.
     * @param message Money
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Money, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Money to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PurchaseNotificationResponse. */
export interface IPurchaseNotificationResponse {

    /** PurchaseNotificationResponse status */
    status?: (number|null);

    /** PurchaseNotificationResponse debugInfo */
    debugInfo?: (IDebugInfo|null);

    /** PurchaseNotificationResponse localizedErrorMessage */
    localizedErrorMessage?: (string|null);

    /** PurchaseNotificationResponse purchaseId */
    purchaseId?: (string|null);
}

/** Represents a PurchaseNotificationResponse. */
export class PurchaseNotificationResponse implements IPurchaseNotificationResponse {

    /**
     * Constructs a new PurchaseNotificationResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPurchaseNotificationResponse);

    /** PurchaseNotificationResponse status. */
    public status: number;

    /** PurchaseNotificationResponse debugInfo. */
    public debugInfo?: (IDebugInfo|null);

    /** PurchaseNotificationResponse localizedErrorMessage. */
    public localizedErrorMessage: string;

    /** PurchaseNotificationResponse purchaseId. */
    public purchaseId: string;

    /**
     * Creates a new PurchaseNotificationResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PurchaseNotificationResponse instance
     */
    public static create(properties?: IPurchaseNotificationResponse): PurchaseNotificationResponse;

    /**
     * Encodes the specified PurchaseNotificationResponse message. Does not implicitly {@link PurchaseNotificationResponse.verify|verify} messages.
     * @param message PurchaseNotificationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPurchaseNotificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PurchaseNotificationResponse message, length delimited. Does not implicitly {@link PurchaseNotificationResponse.verify|verify} messages.
     * @param message PurchaseNotificationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPurchaseNotificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PurchaseNotificationResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PurchaseNotificationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PurchaseNotificationResponse;

    /**
     * Decodes a PurchaseNotificationResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PurchaseNotificationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PurchaseNotificationResponse;

    /**
     * Verifies a PurchaseNotificationResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PurchaseNotificationResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PurchaseNotificationResponse
     */
    public static fromObject(object: { [k: string]: any }): PurchaseNotificationResponse;

    /**
     * Creates a plain object from a PurchaseNotificationResponse message. Also converts values to other types if specified.
     * @param message PurchaseNotificationResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PurchaseNotificationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PurchaseNotificationResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PurchaseStatusResponse. */
export interface IPurchaseStatusResponse {

    /** PurchaseStatusResponse status */
    status?: (number|null);

    /** PurchaseStatusResponse statusMsg */
    statusMsg?: (string|null);

    /** PurchaseStatusResponse statusTitle */
    statusTitle?: (string|null);

    /** PurchaseStatusResponse briefMessage */
    briefMessage?: (string|null);

    /** PurchaseStatusResponse infoUrl */
    infoUrl?: (string|null);

    /** PurchaseStatusResponse libraryUpdate */
    libraryUpdate?: (ILibraryUpdate|null);

    /** PurchaseStatusResponse rejectedInstrument */
    rejectedInstrument?: (IInstrument|null);

    /** PurchaseStatusResponse appDeliveryData */
    appDeliveryData?: (IAndroidAppDeliveryData|null);
}

/** Represents a PurchaseStatusResponse. */
export class PurchaseStatusResponse implements IPurchaseStatusResponse {

    /**
     * Constructs a new PurchaseStatusResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPurchaseStatusResponse);

    /** PurchaseStatusResponse status. */
    public status: number;

    /** PurchaseStatusResponse statusMsg. */
    public statusMsg: string;

    /** PurchaseStatusResponse statusTitle. */
    public statusTitle: string;

    /** PurchaseStatusResponse briefMessage. */
    public briefMessage: string;

    /** PurchaseStatusResponse infoUrl. */
    public infoUrl: string;

    /** PurchaseStatusResponse libraryUpdate. */
    public libraryUpdate?: (ILibraryUpdate|null);

    /** PurchaseStatusResponse rejectedInstrument. */
    public rejectedInstrument?: (IInstrument|null);

    /** PurchaseStatusResponse appDeliveryData. */
    public appDeliveryData?: (IAndroidAppDeliveryData|null);

    /**
     * Creates a new PurchaseStatusResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PurchaseStatusResponse instance
     */
    public static create(properties?: IPurchaseStatusResponse): PurchaseStatusResponse;

    /**
     * Encodes the specified PurchaseStatusResponse message. Does not implicitly {@link PurchaseStatusResponse.verify|verify} messages.
     * @param message PurchaseStatusResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPurchaseStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PurchaseStatusResponse message, length delimited. Does not implicitly {@link PurchaseStatusResponse.verify|verify} messages.
     * @param message PurchaseStatusResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPurchaseStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PurchaseStatusResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PurchaseStatusResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PurchaseStatusResponse;

    /**
     * Decodes a PurchaseStatusResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PurchaseStatusResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PurchaseStatusResponse;

    /**
     * Verifies a PurchaseStatusResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PurchaseStatusResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PurchaseStatusResponse
     */
    public static fromObject(object: { [k: string]: any }): PurchaseStatusResponse;

    /**
     * Creates a plain object from a PurchaseStatusResponse message. Also converts values to other types if specified.
     * @param message PurchaseStatusResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PurchaseStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PurchaseStatusResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PurchaseHistoryDetails. */
export interface IPurchaseHistoryDetails {

    /** PurchaseHistoryDetails purchaseTimestampMillis */
    purchaseTimestampMillis?: (number|Long|null);

    /** PurchaseHistoryDetails purchaseDetailsHtml */
    purchaseDetailsHtml?: (string|null);

    /** PurchaseHistoryDetails offer */
    offer?: (IOffer|null);

    /** PurchaseHistoryDetails purchaseStatus */
    purchaseStatus?: (string|null);

    /** PurchaseHistoryDetails titleBylineHtml */
    titleBylineHtml?: (string|null);

    /** PurchaseHistoryDetails clientRefundContext */
    clientRefundContext?: (Uint8Array|null);

    /** PurchaseHistoryDetails purchaseDetailsImage */
    purchaseDetailsImage?: (IImage|null);
}

/** Represents a PurchaseHistoryDetails. */
export class PurchaseHistoryDetails implements IPurchaseHistoryDetails {

    /**
     * Constructs a new PurchaseHistoryDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPurchaseHistoryDetails);

    /** PurchaseHistoryDetails purchaseTimestampMillis. */
    public purchaseTimestampMillis: (number|Long);

    /** PurchaseHistoryDetails purchaseDetailsHtml. */
    public purchaseDetailsHtml: string;

    /** PurchaseHistoryDetails offer. */
    public offer?: (IOffer|null);

    /** PurchaseHistoryDetails purchaseStatus. */
    public purchaseStatus: string;

    /** PurchaseHistoryDetails titleBylineHtml. */
    public titleBylineHtml: string;

    /** PurchaseHistoryDetails clientRefundContext. */
    public clientRefundContext: Uint8Array;

    /** PurchaseHistoryDetails purchaseDetailsImage. */
    public purchaseDetailsImage?: (IImage|null);

    /**
     * Creates a new PurchaseHistoryDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PurchaseHistoryDetails instance
     */
    public static create(properties?: IPurchaseHistoryDetails): PurchaseHistoryDetails;

    /**
     * Encodes the specified PurchaseHistoryDetails message. Does not implicitly {@link PurchaseHistoryDetails.verify|verify} messages.
     * @param message PurchaseHistoryDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPurchaseHistoryDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PurchaseHistoryDetails message, length delimited. Does not implicitly {@link PurchaseHistoryDetails.verify|verify} messages.
     * @param message PurchaseHistoryDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPurchaseHistoryDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PurchaseHistoryDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PurchaseHistoryDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PurchaseHistoryDetails;

    /**
     * Decodes a PurchaseHistoryDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PurchaseHistoryDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PurchaseHistoryDetails;

    /**
     * Verifies a PurchaseHistoryDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PurchaseHistoryDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PurchaseHistoryDetails
     */
    public static fromObject(object: { [k: string]: any }): PurchaseHistoryDetails;

    /**
     * Creates a plain object from a PurchaseHistoryDetails message. Also converts values to other types if specified.
     * @param message PurchaseHistoryDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PurchaseHistoryDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PurchaseHistoryDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BillingProfileResponse. */
export interface IBillingProfileResponse {

    /** BillingProfileResponse result */
    result?: (number|null);

    /** BillingProfileResponse billingProfile */
    billingProfile?: (IBillingProfile|null);

    /** BillingProfileResponse userMessageHtml */
    userMessageHtml?: (string|null);
}

/** Represents a BillingProfileResponse. */
export class BillingProfileResponse implements IBillingProfileResponse {

    /**
     * Constructs a new BillingProfileResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBillingProfileResponse);

    /** BillingProfileResponse result. */
    public result: number;

    /** BillingProfileResponse billingProfile. */
    public billingProfile?: (IBillingProfile|null);

    /** BillingProfileResponse userMessageHtml. */
    public userMessageHtml: string;

    /**
     * Creates a new BillingProfileResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BillingProfileResponse instance
     */
    public static create(properties?: IBillingProfileResponse): BillingProfileResponse;

    /**
     * Encodes the specified BillingProfileResponse message. Does not implicitly {@link BillingProfileResponse.verify|verify} messages.
     * @param message BillingProfileResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBillingProfileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BillingProfileResponse message, length delimited. Does not implicitly {@link BillingProfileResponse.verify|verify} messages.
     * @param message BillingProfileResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBillingProfileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BillingProfileResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BillingProfileResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BillingProfileResponse;

    /**
     * Decodes a BillingProfileResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BillingProfileResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BillingProfileResponse;

    /**
     * Verifies a BillingProfileResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BillingProfileResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BillingProfileResponse
     */
    public static fromObject(object: { [k: string]: any }): BillingProfileResponse;

    /**
     * Creates a plain object from a BillingProfileResponse message. Also converts values to other types if specified.
     * @param message BillingProfileResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BillingProfileResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BillingProfileResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CheckInstrumentResponse. */
export interface ICheckInstrumentResponse {

    /** CheckInstrumentResponse userHasValidInstrument */
    userHasValidInstrument?: (boolean|null);

    /** CheckInstrumentResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);

    /** CheckInstrumentResponse instrument */
    instrument?: (IInstrument[]|null);

    /** CheckInstrumentResponse eligibleInstrument */
    eligibleInstrument?: (IInstrument[]|null);
}

/** Represents a CheckInstrumentResponse. */
export class CheckInstrumentResponse implements ICheckInstrumentResponse {

    /**
     * Constructs a new CheckInstrumentResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICheckInstrumentResponse);

    /** CheckInstrumentResponse userHasValidInstrument. */
    public userHasValidInstrument: boolean;

    /** CheckInstrumentResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /** CheckInstrumentResponse instrument. */
    public instrument: IInstrument[];

    /** CheckInstrumentResponse eligibleInstrument. */
    public eligibleInstrument: IInstrument[];

    /**
     * Creates a new CheckInstrumentResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CheckInstrumentResponse instance
     */
    public static create(properties?: ICheckInstrumentResponse): CheckInstrumentResponse;

    /**
     * Encodes the specified CheckInstrumentResponse message. Does not implicitly {@link CheckInstrumentResponse.verify|verify} messages.
     * @param message CheckInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICheckInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CheckInstrumentResponse message, length delimited. Does not implicitly {@link CheckInstrumentResponse.verify|verify} messages.
     * @param message CheckInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICheckInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CheckInstrumentResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CheckInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CheckInstrumentResponse;

    /**
     * Decodes a CheckInstrumentResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CheckInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CheckInstrumentResponse;

    /**
     * Verifies a CheckInstrumentResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CheckInstrumentResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CheckInstrumentResponse
     */
    public static fromObject(object: { [k: string]: any }): CheckInstrumentResponse;

    /**
     * Creates a plain object from a CheckInstrumentResponse message. Also converts values to other types if specified.
     * @param message CheckInstrumentResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CheckInstrumentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CheckInstrumentResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an InstrumentSetupInfoResponse. */
export interface IInstrumentSetupInfoResponse {

    /** InstrumentSetupInfoResponse setupInfo */
    setupInfo?: (IInstrumentSetupInfo[]|null);

    /** InstrumentSetupInfoResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);
}

/** Represents an InstrumentSetupInfoResponse. */
export class InstrumentSetupInfoResponse implements IInstrumentSetupInfoResponse {

    /**
     * Constructs a new InstrumentSetupInfoResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInstrumentSetupInfoResponse);

    /** InstrumentSetupInfoResponse setupInfo. */
    public setupInfo: IInstrumentSetupInfo[];

    /** InstrumentSetupInfoResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /**
     * Creates a new InstrumentSetupInfoResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InstrumentSetupInfoResponse instance
     */
    public static create(properties?: IInstrumentSetupInfoResponse): InstrumentSetupInfoResponse;

    /**
     * Encodes the specified InstrumentSetupInfoResponse message. Does not implicitly {@link InstrumentSetupInfoResponse.verify|verify} messages.
     * @param message InstrumentSetupInfoResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInstrumentSetupInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InstrumentSetupInfoResponse message, length delimited. Does not implicitly {@link InstrumentSetupInfoResponse.verify|verify} messages.
     * @param message InstrumentSetupInfoResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInstrumentSetupInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InstrumentSetupInfoResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InstrumentSetupInfoResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InstrumentSetupInfoResponse;

    /**
     * Decodes an InstrumentSetupInfoResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InstrumentSetupInfoResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InstrumentSetupInfoResponse;

    /**
     * Verifies an InstrumentSetupInfoResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InstrumentSetupInfoResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InstrumentSetupInfoResponse
     */
    public static fromObject(object: { [k: string]: any }): InstrumentSetupInfoResponse;

    /**
     * Creates a plain object from an InstrumentSetupInfoResponse message. Also converts values to other types if specified.
     * @param message InstrumentSetupInfoResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InstrumentSetupInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InstrumentSetupInfoResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RedeemGiftCardRequest. */
export interface IRedeemGiftCardRequest {

    /** RedeemGiftCardRequest giftCardPin */
    giftCardPin?: (string|null);

    /** RedeemGiftCardRequest address */
    address?: (IAddress|null);

    /** RedeemGiftCardRequest acceptedLegalDocumentId */
    acceptedLegalDocumentId?: (string[]|null);

    /** RedeemGiftCardRequest checkoutToken */
    checkoutToken?: (string|null);
}

/** Represents a RedeemGiftCardRequest. */
export class RedeemGiftCardRequest implements IRedeemGiftCardRequest {

    /**
     * Constructs a new RedeemGiftCardRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRedeemGiftCardRequest);

    /** RedeemGiftCardRequest giftCardPin. */
    public giftCardPin: string;

    /** RedeemGiftCardRequest address. */
    public address?: (IAddress|null);

    /** RedeemGiftCardRequest acceptedLegalDocumentId. */
    public acceptedLegalDocumentId: string[];

    /** RedeemGiftCardRequest checkoutToken. */
    public checkoutToken: string;

    /**
     * Creates a new RedeemGiftCardRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RedeemGiftCardRequest instance
     */
    public static create(properties?: IRedeemGiftCardRequest): RedeemGiftCardRequest;

    /**
     * Encodes the specified RedeemGiftCardRequest message. Does not implicitly {@link RedeemGiftCardRequest.verify|verify} messages.
     * @param message RedeemGiftCardRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRedeemGiftCardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RedeemGiftCardRequest message, length delimited. Does not implicitly {@link RedeemGiftCardRequest.verify|verify} messages.
     * @param message RedeemGiftCardRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRedeemGiftCardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RedeemGiftCardRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RedeemGiftCardRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RedeemGiftCardRequest;

    /**
     * Decodes a RedeemGiftCardRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RedeemGiftCardRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RedeemGiftCardRequest;

    /**
     * Verifies a RedeemGiftCardRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RedeemGiftCardRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RedeemGiftCardRequest
     */
    public static fromObject(object: { [k: string]: any }): RedeemGiftCardRequest;

    /**
     * Creates a plain object from a RedeemGiftCardRequest message. Also converts values to other types if specified.
     * @param message RedeemGiftCardRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RedeemGiftCardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RedeemGiftCardRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RedeemGiftCardResponse. */
export interface IRedeemGiftCardResponse {

    /** RedeemGiftCardResponse result */
    result?: (number|null);

    /** RedeemGiftCardResponse userMessageHtml */
    userMessageHtml?: (string|null);

    /** RedeemGiftCardResponse balanceHtml */
    balanceHtml?: (string|null);

    /** RedeemGiftCardResponse addressChallenge */
    addressChallenge?: (IAddressChallenge|null);

    /** RedeemGiftCardResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);
}

/** Represents a RedeemGiftCardResponse. */
export class RedeemGiftCardResponse implements IRedeemGiftCardResponse {

    /**
     * Constructs a new RedeemGiftCardResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRedeemGiftCardResponse);

    /** RedeemGiftCardResponse result. */
    public result: number;

    /** RedeemGiftCardResponse userMessageHtml. */
    public userMessageHtml: string;

    /** RedeemGiftCardResponse balanceHtml. */
    public balanceHtml: string;

    /** RedeemGiftCardResponse addressChallenge. */
    public addressChallenge?: (IAddressChallenge|null);

    /** RedeemGiftCardResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /**
     * Creates a new RedeemGiftCardResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RedeemGiftCardResponse instance
     */
    public static create(properties?: IRedeemGiftCardResponse): RedeemGiftCardResponse;

    /**
     * Encodes the specified RedeemGiftCardResponse message. Does not implicitly {@link RedeemGiftCardResponse.verify|verify} messages.
     * @param message RedeemGiftCardResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRedeemGiftCardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RedeemGiftCardResponse message, length delimited. Does not implicitly {@link RedeemGiftCardResponse.verify|verify} messages.
     * @param message RedeemGiftCardResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRedeemGiftCardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RedeemGiftCardResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RedeemGiftCardResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RedeemGiftCardResponse;

    /**
     * Decodes a RedeemGiftCardResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RedeemGiftCardResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RedeemGiftCardResponse;

    /**
     * Verifies a RedeemGiftCardResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RedeemGiftCardResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RedeemGiftCardResponse
     */
    public static fromObject(object: { [k: string]: any }): RedeemGiftCardResponse;

    /**
     * Creates a plain object from a RedeemGiftCardResponse message. Also converts values to other types if specified.
     * @param message RedeemGiftCardResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RedeemGiftCardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RedeemGiftCardResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UpdateInstrumentRequest. */
export interface IUpdateInstrumentRequest {

    /** UpdateInstrumentRequest instrument */
    instrument?: (IInstrument|null);

    /** UpdateInstrumentRequest checkoutToken */
    checkoutToken?: (string|null);
}

/** Represents an UpdateInstrumentRequest. */
export class UpdateInstrumentRequest implements IUpdateInstrumentRequest {

    /**
     * Constructs a new UpdateInstrumentRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUpdateInstrumentRequest);

    /** UpdateInstrumentRequest instrument. */
    public instrument?: (IInstrument|null);

    /** UpdateInstrumentRequest checkoutToken. */
    public checkoutToken: string;

    /**
     * Creates a new UpdateInstrumentRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UpdateInstrumentRequest instance
     */
    public static create(properties?: IUpdateInstrumentRequest): UpdateInstrumentRequest;

    /**
     * Encodes the specified UpdateInstrumentRequest message. Does not implicitly {@link UpdateInstrumentRequest.verify|verify} messages.
     * @param message UpdateInstrumentRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUpdateInstrumentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UpdateInstrumentRequest message, length delimited. Does not implicitly {@link UpdateInstrumentRequest.verify|verify} messages.
     * @param message UpdateInstrumentRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUpdateInstrumentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UpdateInstrumentRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UpdateInstrumentRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UpdateInstrumentRequest;

    /**
     * Decodes an UpdateInstrumentRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UpdateInstrumentRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UpdateInstrumentRequest;

    /**
     * Verifies an UpdateInstrumentRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UpdateInstrumentRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UpdateInstrumentRequest
     */
    public static fromObject(object: { [k: string]: any }): UpdateInstrumentRequest;

    /**
     * Creates a plain object from an UpdateInstrumentRequest message. Also converts values to other types if specified.
     * @param message UpdateInstrumentRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UpdateInstrumentRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UpdateInstrumentRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UpdateInstrumentResponse. */
export interface IUpdateInstrumentResponse {

    /** UpdateInstrumentResponse result */
    result?: (number|null);

    /** UpdateInstrumentResponse instrumentId */
    instrumentId?: (string|null);

    /** UpdateInstrumentResponse userMessageHtml */
    userMessageHtml?: (string|null);

    /** UpdateInstrumentResponse errorInputField */
    errorInputField?: (IInputValidationError[]|null);

    /** UpdateInstrumentResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);

    /** UpdateInstrumentResponse redeemedOffer */
    redeemedOffer?: (IRedeemedPromoOffer|null);
}

/** Represents an UpdateInstrumentResponse. */
export class UpdateInstrumentResponse implements IUpdateInstrumentResponse {

    /**
     * Constructs a new UpdateInstrumentResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUpdateInstrumentResponse);

    /** UpdateInstrumentResponse result. */
    public result: number;

    /** UpdateInstrumentResponse instrumentId. */
    public instrumentId: string;

    /** UpdateInstrumentResponse userMessageHtml. */
    public userMessageHtml: string;

    /** UpdateInstrumentResponse errorInputField. */
    public errorInputField: IInputValidationError[];

    /** UpdateInstrumentResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /** UpdateInstrumentResponse redeemedOffer. */
    public redeemedOffer?: (IRedeemedPromoOffer|null);

    /**
     * Creates a new UpdateInstrumentResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UpdateInstrumentResponse instance
     */
    public static create(properties?: IUpdateInstrumentResponse): UpdateInstrumentResponse;

    /**
     * Encodes the specified UpdateInstrumentResponse message. Does not implicitly {@link UpdateInstrumentResponse.verify|verify} messages.
     * @param message UpdateInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUpdateInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UpdateInstrumentResponse message, length delimited. Does not implicitly {@link UpdateInstrumentResponse.verify|verify} messages.
     * @param message UpdateInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUpdateInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UpdateInstrumentResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UpdateInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UpdateInstrumentResponse;

    /**
     * Decodes an UpdateInstrumentResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UpdateInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UpdateInstrumentResponse;

    /**
     * Verifies an UpdateInstrumentResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UpdateInstrumentResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UpdateInstrumentResponse
     */
    public static fromObject(object: { [k: string]: any }): UpdateInstrumentResponse;

    /**
     * Creates a plain object from an UpdateInstrumentResponse message. Also converts values to other types if specified.
     * @param message UpdateInstrumentResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UpdateInstrumentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UpdateInstrumentResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an InitiateAssociationResponse. */
export interface IInitiateAssociationResponse {

    /** InitiateAssociationResponse userToken */
    userToken?: (string|null);
}

/** Represents an InitiateAssociationResponse. */
export class InitiateAssociationResponse implements IInitiateAssociationResponse {

    /**
     * Constructs a new InitiateAssociationResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInitiateAssociationResponse);

    /** InitiateAssociationResponse userToken. */
    public userToken: string;

    /**
     * Creates a new InitiateAssociationResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InitiateAssociationResponse instance
     */
    public static create(properties?: IInitiateAssociationResponse): InitiateAssociationResponse;

    /**
     * Encodes the specified InitiateAssociationResponse message. Does not implicitly {@link InitiateAssociationResponse.verify|verify} messages.
     * @param message InitiateAssociationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInitiateAssociationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InitiateAssociationResponse message, length delimited. Does not implicitly {@link InitiateAssociationResponse.verify|verify} messages.
     * @param message InitiateAssociationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInitiateAssociationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InitiateAssociationResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InitiateAssociationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitiateAssociationResponse;

    /**
     * Decodes an InitiateAssociationResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InitiateAssociationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitiateAssociationResponse;

    /**
     * Verifies an InitiateAssociationResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InitiateAssociationResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InitiateAssociationResponse
     */
    public static fromObject(object: { [k: string]: any }): InitiateAssociationResponse;

    /**
     * Creates a plain object from an InitiateAssociationResponse message. Also converts values to other types if specified.
     * @param message InitiateAssociationResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InitiateAssociationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InitiateAssociationResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a VerifyAssociationResponse. */
export interface IVerifyAssociationResponse {

    /** VerifyAssociationResponse status */
    status?: (number|null);

    /** VerifyAssociationResponse billingAddress */
    billingAddress?: (IAddress|null);

    /** VerifyAssociationResponse carrierTos */
    carrierTos?: (ICarrierTos|null);

    /** VerifyAssociationResponse carrierErrorMessage */
    carrierErrorMessage?: (string|null);
}

/** Represents a VerifyAssociationResponse. */
export class VerifyAssociationResponse implements IVerifyAssociationResponse {

    /**
     * Constructs a new VerifyAssociationResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVerifyAssociationResponse);

    /** VerifyAssociationResponse status. */
    public status: number;

    /** VerifyAssociationResponse billingAddress. */
    public billingAddress?: (IAddress|null);

    /** VerifyAssociationResponse carrierTos. */
    public carrierTos?: (ICarrierTos|null);

    /** VerifyAssociationResponse carrierErrorMessage. */
    public carrierErrorMessage: string;

    /**
     * Creates a new VerifyAssociationResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VerifyAssociationResponse instance
     */
    public static create(properties?: IVerifyAssociationResponse): VerifyAssociationResponse;

    /**
     * Encodes the specified VerifyAssociationResponse message. Does not implicitly {@link VerifyAssociationResponse.verify|verify} messages.
     * @param message VerifyAssociationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVerifyAssociationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VerifyAssociationResponse message, length delimited. Does not implicitly {@link VerifyAssociationResponse.verify|verify} messages.
     * @param message VerifyAssociationResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVerifyAssociationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VerifyAssociationResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VerifyAssociationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VerifyAssociationResponse;

    /**
     * Decodes a VerifyAssociationResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VerifyAssociationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VerifyAssociationResponse;

    /**
     * Verifies a VerifyAssociationResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VerifyAssociationResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VerifyAssociationResponse
     */
    public static fromObject(object: { [k: string]: any }): VerifyAssociationResponse;

    /**
     * Creates a plain object from a VerifyAssociationResponse message. Also converts values to other types if specified.
     * @param message VerifyAssociationResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VerifyAssociationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VerifyAssociationResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AddressChallenge. */
export interface IAddressChallenge {

    /** AddressChallenge responseAddressParam */
    responseAddressParam?: (string|null);

    /** AddressChallenge responseCheckboxesParam */
    responseCheckboxesParam?: (string|null);

    /** AddressChallenge title */
    title?: (string|null);

    /** AddressChallenge descriptionHtml */
    descriptionHtml?: (string|null);

    /** AddressChallenge checkbox */
    checkbox?: (IFormCheckbox[]|null);

    /** AddressChallenge address */
    address?: (IAddress|null);

    /** AddressChallenge errorInputField */
    errorInputField?: (IInputValidationError[]|null);

    /** AddressChallenge errorHtml */
    errorHtml?: (string|null);

    /** AddressChallenge requiredField */
    requiredField?: (number[]|null);

    /** AddressChallenge supportedCountry */
    supportedCountry?: (ICountry[]|null);
}

/** Represents an AddressChallenge. */
export class AddressChallenge implements IAddressChallenge {

    /**
     * Constructs a new AddressChallenge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAddressChallenge);

    /** AddressChallenge responseAddressParam. */
    public responseAddressParam: string;

    /** AddressChallenge responseCheckboxesParam. */
    public responseCheckboxesParam: string;

    /** AddressChallenge title. */
    public title: string;

    /** AddressChallenge descriptionHtml. */
    public descriptionHtml: string;

    /** AddressChallenge checkbox. */
    public checkbox: IFormCheckbox[];

    /** AddressChallenge address. */
    public address?: (IAddress|null);

    /** AddressChallenge errorInputField. */
    public errorInputField: IInputValidationError[];

    /** AddressChallenge errorHtml. */
    public errorHtml: string;

    /** AddressChallenge requiredField. */
    public requiredField: number[];

    /** AddressChallenge supportedCountry. */
    public supportedCountry: ICountry[];

    /**
     * Creates a new AddressChallenge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AddressChallenge instance
     */
    public static create(properties?: IAddressChallenge): AddressChallenge;

    /**
     * Encodes the specified AddressChallenge message. Does not implicitly {@link AddressChallenge.verify|verify} messages.
     * @param message AddressChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAddressChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AddressChallenge message, length delimited. Does not implicitly {@link AddressChallenge.verify|verify} messages.
     * @param message AddressChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAddressChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AddressChallenge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AddressChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AddressChallenge;

    /**
     * Decodes an AddressChallenge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AddressChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AddressChallenge;

    /**
     * Verifies an AddressChallenge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AddressChallenge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AddressChallenge
     */
    public static fromObject(object: { [k: string]: any }): AddressChallenge;

    /**
     * Creates a plain object from an AddressChallenge message. Also converts values to other types if specified.
     * @param message AddressChallenge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AddressChallenge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AddressChallenge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AuthenticationChallenge. */
export interface IAuthenticationChallenge {

    /** AuthenticationChallenge authenticationType */
    authenticationType?: (number|null);

    /** AuthenticationChallenge responseAuthenticationTypeParam */
    responseAuthenticationTypeParam?: (string|null);

    /** AuthenticationChallenge responseRetryCountParam */
    responseRetryCountParam?: (string|null);

    /** AuthenticationChallenge pinHeaderText */
    pinHeaderText?: (string|null);

    /** AuthenticationChallenge pinDescriptionTextHtml */
    pinDescriptionTextHtml?: (string|null);

    /** AuthenticationChallenge gaiaHeaderText */
    gaiaHeaderText?: (string|null);

    /** AuthenticationChallenge gaiaDescriptionTextHtml */
    gaiaDescriptionTextHtml?: (string|null);

    /** AuthenticationChallenge gaiaFooterTextHtml */
    gaiaFooterTextHtml?: (string|null);

    /** AuthenticationChallenge gaiaOptOutCheckbox */
    gaiaOptOutCheckbox?: (IFormCheckbox|null);

    /** AuthenticationChallenge gaiaOptOutDescriptionTextHtml */
    gaiaOptOutDescriptionTextHtml?: (string|null);
}

/** Represents an AuthenticationChallenge. */
export class AuthenticationChallenge implements IAuthenticationChallenge {

    /**
     * Constructs a new AuthenticationChallenge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAuthenticationChallenge);

    /** AuthenticationChallenge authenticationType. */
    public authenticationType: number;

    /** AuthenticationChallenge responseAuthenticationTypeParam. */
    public responseAuthenticationTypeParam: string;

    /** AuthenticationChallenge responseRetryCountParam. */
    public responseRetryCountParam: string;

    /** AuthenticationChallenge pinHeaderText. */
    public pinHeaderText: string;

    /** AuthenticationChallenge pinDescriptionTextHtml. */
    public pinDescriptionTextHtml: string;

    /** AuthenticationChallenge gaiaHeaderText. */
    public gaiaHeaderText: string;

    /** AuthenticationChallenge gaiaDescriptionTextHtml. */
    public gaiaDescriptionTextHtml: string;

    /** AuthenticationChallenge gaiaFooterTextHtml. */
    public gaiaFooterTextHtml: string;

    /** AuthenticationChallenge gaiaOptOutCheckbox. */
    public gaiaOptOutCheckbox?: (IFormCheckbox|null);

    /** AuthenticationChallenge gaiaOptOutDescriptionTextHtml. */
    public gaiaOptOutDescriptionTextHtml: string;

    /**
     * Creates a new AuthenticationChallenge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AuthenticationChallenge instance
     */
    public static create(properties?: IAuthenticationChallenge): AuthenticationChallenge;

    /**
     * Encodes the specified AuthenticationChallenge message. Does not implicitly {@link AuthenticationChallenge.verify|verify} messages.
     * @param message AuthenticationChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAuthenticationChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AuthenticationChallenge message, length delimited. Does not implicitly {@link AuthenticationChallenge.verify|verify} messages.
     * @param message AuthenticationChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAuthenticationChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AuthenticationChallenge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AuthenticationChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AuthenticationChallenge;

    /**
     * Decodes an AuthenticationChallenge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AuthenticationChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AuthenticationChallenge;

    /**
     * Verifies an AuthenticationChallenge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AuthenticationChallenge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AuthenticationChallenge
     */
    public static fromObject(object: { [k: string]: any }): AuthenticationChallenge;

    /**
     * Creates a plain object from an AuthenticationChallenge message. Also converts values to other types if specified.
     * @param message AuthenticationChallenge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AuthenticationChallenge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AuthenticationChallenge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Challenge. */
export interface IChallenge {

    /** Challenge addressChallenge */
    addressChallenge?: (IAddressChallenge|null);

    /** Challenge authenticationChallenge */
    authenticationChallenge?: (IAuthenticationChallenge|null);

    /** Challenge webViewChallenge */
    webViewChallenge?: (IWebViewChallenge|null);
}

/** Represents a Challenge. */
export class Challenge implements IChallenge {

    /**
     * Constructs a new Challenge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChallenge);

    /** Challenge addressChallenge. */
    public addressChallenge?: (IAddressChallenge|null);

    /** Challenge authenticationChallenge. */
    public authenticationChallenge?: (IAuthenticationChallenge|null);

    /** Challenge webViewChallenge. */
    public webViewChallenge?: (IWebViewChallenge|null);

    /**
     * Creates a new Challenge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Challenge instance
     */
    public static create(properties?: IChallenge): Challenge;

    /**
     * Encodes the specified Challenge message. Does not implicitly {@link Challenge.verify|verify} messages.
     * @param message Challenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Challenge message, length delimited. Does not implicitly {@link Challenge.verify|verify} messages.
     * @param message Challenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Challenge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Challenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Challenge;

    /**
     * Decodes a Challenge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Challenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Challenge;

    /**
     * Verifies a Challenge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Challenge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Challenge
     */
    public static fromObject(object: { [k: string]: any }): Challenge;

    /**
     * Creates a plain object from a Challenge message. Also converts values to other types if specified.
     * @param message Challenge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Challenge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Challenge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Country. */
export interface ICountry {

    /** Country regionCode */
    regionCode?: (string|null);

    /** Country displayName */
    displayName?: (string|null);
}

/** Represents a Country. */
export class Country implements ICountry {

    /**
     * Constructs a new Country.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICountry);

    /** Country regionCode. */
    public regionCode: string;

    /** Country displayName. */
    public displayName: string;

    /**
     * Creates a new Country instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Country instance
     */
    public static create(properties?: ICountry): Country;

    /**
     * Encodes the specified Country message. Does not implicitly {@link Country.verify|verify} messages.
     * @param message Country message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICountry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Country message, length delimited. Does not implicitly {@link Country.verify|verify} messages.
     * @param message Country message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICountry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Country message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Country
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Country;

    /**
     * Decodes a Country message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Country
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Country;

    /**
     * Verifies a Country message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Country message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Country
     */
    public static fromObject(object: { [k: string]: any }): Country;

    /**
     * Creates a plain object from a Country message. Also converts values to other types if specified.
     * @param message Country
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Country, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Country to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a FormCheckbox. */
export interface IFormCheckbox {

    /** FormCheckbox description */
    description?: (string|null);

    /** FormCheckbox checked */
    checked?: (boolean|null);

    /** FormCheckbox required */
    required?: (boolean|null);

    /** FormCheckbox id */
    id?: (string|null);
}

/** Represents a FormCheckbox. */
export class FormCheckbox implements IFormCheckbox {

    /**
     * Constructs a new FormCheckbox.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFormCheckbox);

    /** FormCheckbox description. */
    public description: string;

    /** FormCheckbox checked. */
    public checked: boolean;

    /** FormCheckbox required. */
    public required: boolean;

    /** FormCheckbox id. */
    public id: string;

    /**
     * Creates a new FormCheckbox instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FormCheckbox instance
     */
    public static create(properties?: IFormCheckbox): FormCheckbox;

    /**
     * Encodes the specified FormCheckbox message. Does not implicitly {@link FormCheckbox.verify|verify} messages.
     * @param message FormCheckbox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFormCheckbox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FormCheckbox message, length delimited. Does not implicitly {@link FormCheckbox.verify|verify} messages.
     * @param message FormCheckbox message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFormCheckbox, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FormCheckbox message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FormCheckbox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FormCheckbox;

    /**
     * Decodes a FormCheckbox message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FormCheckbox
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FormCheckbox;

    /**
     * Verifies a FormCheckbox message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FormCheckbox message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FormCheckbox
     */
    public static fromObject(object: { [k: string]: any }): FormCheckbox;

    /**
     * Creates a plain object from a FormCheckbox message. Also converts values to other types if specified.
     * @param message FormCheckbox
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FormCheckbox, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FormCheckbox to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an InputValidationError. */
export interface IInputValidationError {

    /** InputValidationError inputField */
    inputField?: (number|null);

    /** InputValidationError errorMessage */
    errorMessage?: (string|null);
}

/** Represents an InputValidationError. */
export class InputValidationError implements IInputValidationError {

    /**
     * Constructs a new InputValidationError.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInputValidationError);

    /** InputValidationError inputField. */
    public inputField: number;

    /** InputValidationError errorMessage. */
    public errorMessage: string;

    /**
     * Creates a new InputValidationError instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InputValidationError instance
     */
    public static create(properties?: IInputValidationError): InputValidationError;

    /**
     * Encodes the specified InputValidationError message. Does not implicitly {@link InputValidationError.verify|verify} messages.
     * @param message InputValidationError message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInputValidationError, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InputValidationError message, length delimited. Does not implicitly {@link InputValidationError.verify|verify} messages.
     * @param message InputValidationError message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInputValidationError, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InputValidationError message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InputValidationError
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InputValidationError;

    /**
     * Decodes an InputValidationError message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InputValidationError
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InputValidationError;

    /**
     * Verifies an InputValidationError message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InputValidationError message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InputValidationError
     */
    public static fromObject(object: { [k: string]: any }): InputValidationError;

    /**
     * Creates a plain object from an InputValidationError message. Also converts values to other types if specified.
     * @param message InputValidationError
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InputValidationError, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InputValidationError to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a WebViewChallenge. */
export interface IWebViewChallenge {

    /** WebViewChallenge startUrl */
    startUrl?: (string|null);

    /** WebViewChallenge targetUrlRegexp */
    targetUrlRegexp?: (string|null);

    /** WebViewChallenge cancelButtonDisplayLabel */
    cancelButtonDisplayLabel?: (string|null);

    /** WebViewChallenge responseTargetUrlParam */
    responseTargetUrlParam?: (string|null);

    /** WebViewChallenge cancelUrlRegexp */
    cancelUrlRegexp?: (string|null);

    /** WebViewChallenge title */
    title?: (string|null);
}

/** Represents a WebViewChallenge. */
export class WebViewChallenge implements IWebViewChallenge {

    /**
     * Constructs a new WebViewChallenge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWebViewChallenge);

    /** WebViewChallenge startUrl. */
    public startUrl: string;

    /** WebViewChallenge targetUrlRegexp. */
    public targetUrlRegexp: string;

    /** WebViewChallenge cancelButtonDisplayLabel. */
    public cancelButtonDisplayLabel: string;

    /** WebViewChallenge responseTargetUrlParam. */
    public responseTargetUrlParam: string;

    /** WebViewChallenge cancelUrlRegexp. */
    public cancelUrlRegexp: string;

    /** WebViewChallenge title. */
    public title: string;

    /**
     * Creates a new WebViewChallenge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WebViewChallenge instance
     */
    public static create(properties?: IWebViewChallenge): WebViewChallenge;

    /**
     * Encodes the specified WebViewChallenge message. Does not implicitly {@link WebViewChallenge.verify|verify} messages.
     * @param message WebViewChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWebViewChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified WebViewChallenge message, length delimited. Does not implicitly {@link WebViewChallenge.verify|verify} messages.
     * @param message WebViewChallenge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWebViewChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a WebViewChallenge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WebViewChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): WebViewChallenge;

    /**
     * Decodes a WebViewChallenge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WebViewChallenge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): WebViewChallenge;

    /**
     * Verifies a WebViewChallenge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WebViewChallenge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WebViewChallenge
     */
    public static fromObject(object: { [k: string]: any }): WebViewChallenge;

    /**
     * Creates a plain object from a WebViewChallenge message. Also converts values to other types if specified.
     * @param message WebViewChallenge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WebViewChallenge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WebViewChallenge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AddCreditCardPromoOffer. */
export interface IAddCreditCardPromoOffer {

    /** AddCreditCardPromoOffer headerText */
    headerText?: (string|null);

    /** AddCreditCardPromoOffer descriptionHtml */
    descriptionHtml?: (string|null);

    /** AddCreditCardPromoOffer image */
    image?: (IImage|null);

    /** AddCreditCardPromoOffer introductoryTextHtml */
    introductoryTextHtml?: (string|null);

    /** AddCreditCardPromoOffer offerTitle */
    offerTitle?: (string|null);

    /** AddCreditCardPromoOffer noActionDescription */
    noActionDescription?: (string|null);

    /** AddCreditCardPromoOffer termsAndConditionsHtml */
    termsAndConditionsHtml?: (string|null);
}

/** Represents an AddCreditCardPromoOffer. */
export class AddCreditCardPromoOffer implements IAddCreditCardPromoOffer {

    /**
     * Constructs a new AddCreditCardPromoOffer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAddCreditCardPromoOffer);

    /** AddCreditCardPromoOffer headerText. */
    public headerText: string;

    /** AddCreditCardPromoOffer descriptionHtml. */
    public descriptionHtml: string;

    /** AddCreditCardPromoOffer image. */
    public image?: (IImage|null);

    /** AddCreditCardPromoOffer introductoryTextHtml. */
    public introductoryTextHtml: string;

    /** AddCreditCardPromoOffer offerTitle. */
    public offerTitle: string;

    /** AddCreditCardPromoOffer noActionDescription. */
    public noActionDescription: string;

    /** AddCreditCardPromoOffer termsAndConditionsHtml. */
    public termsAndConditionsHtml: string;

    /**
     * Creates a new AddCreditCardPromoOffer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AddCreditCardPromoOffer instance
     */
    public static create(properties?: IAddCreditCardPromoOffer): AddCreditCardPromoOffer;

    /**
     * Encodes the specified AddCreditCardPromoOffer message. Does not implicitly {@link AddCreditCardPromoOffer.verify|verify} messages.
     * @param message AddCreditCardPromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAddCreditCardPromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AddCreditCardPromoOffer message, length delimited. Does not implicitly {@link AddCreditCardPromoOffer.verify|verify} messages.
     * @param message AddCreditCardPromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAddCreditCardPromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AddCreditCardPromoOffer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AddCreditCardPromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AddCreditCardPromoOffer;

    /**
     * Decodes an AddCreditCardPromoOffer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AddCreditCardPromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AddCreditCardPromoOffer;

    /**
     * Verifies an AddCreditCardPromoOffer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AddCreditCardPromoOffer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AddCreditCardPromoOffer
     */
    public static fromObject(object: { [k: string]: any }): AddCreditCardPromoOffer;

    /**
     * Creates a plain object from an AddCreditCardPromoOffer message. Also converts values to other types if specified.
     * @param message AddCreditCardPromoOffer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AddCreditCardPromoOffer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AddCreditCardPromoOffer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AvailablePromoOffer. */
export interface IAvailablePromoOffer {

    /** AvailablePromoOffer addCreditCardOffer */
    addCreditCardOffer?: (IAddCreditCardPromoOffer|null);
}

/** Represents an AvailablePromoOffer. */
export class AvailablePromoOffer implements IAvailablePromoOffer {

    /**
     * Constructs a new AvailablePromoOffer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAvailablePromoOffer);

    /** AvailablePromoOffer addCreditCardOffer. */
    public addCreditCardOffer?: (IAddCreditCardPromoOffer|null);

    /**
     * Creates a new AvailablePromoOffer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AvailablePromoOffer instance
     */
    public static create(properties?: IAvailablePromoOffer): AvailablePromoOffer;

    /**
     * Encodes the specified AvailablePromoOffer message. Does not implicitly {@link AvailablePromoOffer.verify|verify} messages.
     * @param message AvailablePromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAvailablePromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AvailablePromoOffer message, length delimited. Does not implicitly {@link AvailablePromoOffer.verify|verify} messages.
     * @param message AvailablePromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAvailablePromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AvailablePromoOffer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AvailablePromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AvailablePromoOffer;

    /**
     * Decodes an AvailablePromoOffer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AvailablePromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AvailablePromoOffer;

    /**
     * Verifies an AvailablePromoOffer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AvailablePromoOffer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AvailablePromoOffer
     */
    public static fromObject(object: { [k: string]: any }): AvailablePromoOffer;

    /**
     * Creates a plain object from an AvailablePromoOffer message. Also converts values to other types if specified.
     * @param message AvailablePromoOffer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AvailablePromoOffer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AvailablePromoOffer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CheckPromoOfferResponse. */
export interface ICheckPromoOfferResponse {

    /** CheckPromoOfferResponse availableOffer */
    availableOffer?: (IAvailablePromoOffer[]|null);

    /** CheckPromoOfferResponse redeemedOffer */
    redeemedOffer?: (IRedeemedPromoOffer|null);

    /** CheckPromoOfferResponse checkoutTokenRequired */
    checkoutTokenRequired?: (boolean|null);
}

/** Represents a CheckPromoOfferResponse. */
export class CheckPromoOfferResponse implements ICheckPromoOfferResponse {

    /**
     * Constructs a new CheckPromoOfferResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICheckPromoOfferResponse);

    /** CheckPromoOfferResponse availableOffer. */
    public availableOffer: IAvailablePromoOffer[];

    /** CheckPromoOfferResponse redeemedOffer. */
    public redeemedOffer?: (IRedeemedPromoOffer|null);

    /** CheckPromoOfferResponse checkoutTokenRequired. */
    public checkoutTokenRequired: boolean;

    /**
     * Creates a new CheckPromoOfferResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CheckPromoOfferResponse instance
     */
    public static create(properties?: ICheckPromoOfferResponse): CheckPromoOfferResponse;

    /**
     * Encodes the specified CheckPromoOfferResponse message. Does not implicitly {@link CheckPromoOfferResponse.verify|verify} messages.
     * @param message CheckPromoOfferResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICheckPromoOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CheckPromoOfferResponse message, length delimited. Does not implicitly {@link CheckPromoOfferResponse.verify|verify} messages.
     * @param message CheckPromoOfferResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICheckPromoOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CheckPromoOfferResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CheckPromoOfferResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CheckPromoOfferResponse;

    /**
     * Decodes a CheckPromoOfferResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CheckPromoOfferResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CheckPromoOfferResponse;

    /**
     * Verifies a CheckPromoOfferResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CheckPromoOfferResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CheckPromoOfferResponse
     */
    public static fromObject(object: { [k: string]: any }): CheckPromoOfferResponse;

    /**
     * Creates a plain object from a CheckPromoOfferResponse message. Also converts values to other types if specified.
     * @param message CheckPromoOfferResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CheckPromoOfferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CheckPromoOfferResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RedeemedPromoOffer. */
export interface IRedeemedPromoOffer {

    /** RedeemedPromoOffer headerText */
    headerText?: (string|null);

    /** RedeemedPromoOffer descriptionHtml */
    descriptionHtml?: (string|null);

    /** RedeemedPromoOffer image */
    image?: (IImage|null);
}

/** Represents a RedeemedPromoOffer. */
export class RedeemedPromoOffer implements IRedeemedPromoOffer {

    /**
     * Constructs a new RedeemedPromoOffer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRedeemedPromoOffer);

    /** RedeemedPromoOffer headerText. */
    public headerText: string;

    /** RedeemedPromoOffer descriptionHtml. */
    public descriptionHtml: string;

    /** RedeemedPromoOffer image. */
    public image?: (IImage|null);

    /**
     * Creates a new RedeemedPromoOffer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RedeemedPromoOffer instance
     */
    public static create(properties?: IRedeemedPromoOffer): RedeemedPromoOffer;

    /**
     * Encodes the specified RedeemedPromoOffer message. Does not implicitly {@link RedeemedPromoOffer.verify|verify} messages.
     * @param message RedeemedPromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRedeemedPromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RedeemedPromoOffer message, length delimited. Does not implicitly {@link RedeemedPromoOffer.verify|verify} messages.
     * @param message RedeemedPromoOffer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRedeemedPromoOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RedeemedPromoOffer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RedeemedPromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RedeemedPromoOffer;

    /**
     * Decodes a RedeemedPromoOffer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RedeemedPromoOffer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RedeemedPromoOffer;

    /**
     * Verifies a RedeemedPromoOffer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RedeemedPromoOffer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RedeemedPromoOffer
     */
    public static fromObject(object: { [k: string]: any }): RedeemedPromoOffer;

    /**
     * Creates a plain object from a RedeemedPromoOffer message. Also converts values to other types if specified.
     * @param message RedeemedPromoOffer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RedeemedPromoOffer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RedeemedPromoOffer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DocId. */
export interface IDocId {

    /** DocId backendDocId */
    backendDocId?: (string|null);

    /** DocId type */
    type?: (number|null);

    /** DocId backend */
    backend?: (number|null);
}

/** Represents a DocId. */
export class DocId implements IDocId {

    /**
     * Constructs a new DocId.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDocId);

    /** DocId backendDocId. */
    public backendDocId: string;

    /** DocId type. */
    public type: number;

    /** DocId backend. */
    public backend: number;

    /**
     * Creates a new DocId instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DocId instance
     */
    public static create(properties?: IDocId): DocId;

    /**
     * Encodes the specified DocId message. Does not implicitly {@link DocId.verify|verify} messages.
     * @param message DocId message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDocId, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DocId message, length delimited. Does not implicitly {@link DocId.verify|verify} messages.
     * @param message DocId message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDocId, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DocId message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DocId
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DocId;

    /**
     * Decodes a DocId message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DocId
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DocId;

    /**
     * Verifies a DocId message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DocId message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DocId
     */
    public static fromObject(object: { [k: string]: any }): DocId;

    /**
     * Creates a plain object from a DocId message. Also converts values to other types if specified.
     * @param message DocId
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DocId, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DocId to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Install. */
export interface IInstall {

    /** Install androidId */
    androidId?: (number|Long|null);

    /** Install version */
    version?: (number|null);

    /** Install bundled */
    bundled?: (boolean|null);

    /** Install pending */
    pending?: (boolean|null);

    /** Install lastUpdated */
    lastUpdated?: (number|Long|null);
}

/** Represents an Install. */
export class Install implements IInstall {

    /**
     * Constructs a new Install.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInstall);

    /** Install androidId. */
    public androidId: (number|Long);

    /** Install version. */
    public version: number;

    /** Install bundled. */
    public bundled: boolean;

    /** Install pending. */
    public pending: boolean;

    /** Install lastUpdated. */
    public lastUpdated: (number|Long);

    /**
     * Creates a new Install instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Install instance
     */
    public static create(properties?: IInstall): Install;

    /**
     * Encodes the specified Install message. Does not implicitly {@link Install.verify|verify} messages.
     * @param message Install message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInstall, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Install message, length delimited. Does not implicitly {@link Install.verify|verify} messages.
     * @param message Install message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInstall, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Install message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Install
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Install;

    /**
     * Decodes an Install message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Install
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Install;

    /**
     * Verifies an Install message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Install message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Install
     */
    public static fromObject(object: { [k: string]: any }): Install;

    /**
     * Creates a plain object from an Install message. Also converts values to other types if specified.
     * @param message Install
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Install, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Install to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GroupLicenseKey. */
export interface IGroupLicenseKey {

    /** GroupLicenseKey dasherCustomerId */
    dasherCustomerId?: (number|Long|null);

    /** GroupLicenseKey docId */
    docId?: (IDocId|null);

    /** GroupLicenseKey licensedOfferType */
    licensedOfferType?: (number|null);

    /** GroupLicenseKey type */
    type?: (number|null);

    /** GroupLicenseKey rentalPeriodDays */
    rentalPeriodDays?: (number|null);
}

/** Represents a GroupLicenseKey. */
export class GroupLicenseKey implements IGroupLicenseKey {

    /**
     * Constructs a new GroupLicenseKey.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGroupLicenseKey);

    /** GroupLicenseKey dasherCustomerId. */
    public dasherCustomerId: (number|Long);

    /** GroupLicenseKey docId. */
    public docId?: (IDocId|null);

    /** GroupLicenseKey licensedOfferType. */
    public licensedOfferType: number;

    /** GroupLicenseKey type. */
    public type: number;

    /** GroupLicenseKey rentalPeriodDays. */
    public rentalPeriodDays: number;

    /**
     * Creates a new GroupLicenseKey instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GroupLicenseKey instance
     */
    public static create(properties?: IGroupLicenseKey): GroupLicenseKey;

    /**
     * Encodes the specified GroupLicenseKey message. Does not implicitly {@link GroupLicenseKey.verify|verify} messages.
     * @param message GroupLicenseKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGroupLicenseKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GroupLicenseKey message, length delimited. Does not implicitly {@link GroupLicenseKey.verify|verify} messages.
     * @param message GroupLicenseKey message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGroupLicenseKey, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GroupLicenseKey message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GroupLicenseKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GroupLicenseKey;

    /**
     * Decodes a GroupLicenseKey message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GroupLicenseKey
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GroupLicenseKey;

    /**
     * Verifies a GroupLicenseKey message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GroupLicenseKey message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GroupLicenseKey
     */
    public static fromObject(object: { [k: string]: any }): GroupLicenseKey;

    /**
     * Creates a plain object from a GroupLicenseKey message. Also converts values to other types if specified.
     * @param message GroupLicenseKey
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GroupLicenseKey, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GroupLicenseKey to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LicenseTerms. */
export interface ILicenseTerms {

    /** LicenseTerms groupLicenseKey */
    groupLicenseKey?: (IGroupLicenseKey|null);
}

/** Represents a LicenseTerms. */
export class LicenseTerms implements ILicenseTerms {

    /**
     * Constructs a new LicenseTerms.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILicenseTerms);

    /** LicenseTerms groupLicenseKey. */
    public groupLicenseKey?: (IGroupLicenseKey|null);

    /**
     * Creates a new LicenseTerms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LicenseTerms instance
     */
    public static create(properties?: ILicenseTerms): LicenseTerms;

    /**
     * Encodes the specified LicenseTerms message. Does not implicitly {@link LicenseTerms.verify|verify} messages.
     * @param message LicenseTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILicenseTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LicenseTerms message, length delimited. Does not implicitly {@link LicenseTerms.verify|verify} messages.
     * @param message LicenseTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILicenseTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LicenseTerms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LicenseTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LicenseTerms;

    /**
     * Decodes a LicenseTerms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LicenseTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LicenseTerms;

    /**
     * Verifies a LicenseTerms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LicenseTerms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LicenseTerms
     */
    public static fromObject(object: { [k: string]: any }): LicenseTerms;

    /**
     * Creates a plain object from a LicenseTerms message. Also converts values to other types if specified.
     * @param message LicenseTerms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LicenseTerms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LicenseTerms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Offer. */
export interface IOffer {

    /** Offer micros */
    micros?: (number|Long|null);

    /** Offer currencyCode */
    currencyCode?: (string|null);

    /** Offer formattedAmount */
    formattedAmount?: (string|null);

    /** Offer convertedPrice */
    convertedPrice?: (IOffer[]|null);

    /** Offer checkoutFlowRequired */
    checkoutFlowRequired?: (boolean|null);

    /** Offer fullPriceMicros */
    fullPriceMicros?: (number|Long|null);

    /** Offer formattedFullAmount */
    formattedFullAmount?: (string|null);

    /** Offer offerType */
    offerType?: (number|null);

    /** Offer rentalTerms */
    rentalTerms?: (IRentalTerms|null);

    /** Offer onSaleDate */
    onSaleDate?: (number|Long|null);

    /** Offer promotionLabel */
    promotionLabel?: (string[]|null);

    /** Offer subscriptionTerms */
    subscriptionTerms?: (ISubscriptionTerms|null);

    /** Offer formattedName */
    formattedName?: (string|null);

    /** Offer formattedDescription */
    formattedDescription?: (string|null);

    /** Offer preorder */
    preorder?: (boolean|null);

    /** Offer onSaleDateDisplayTimeZoneOffsetMillis */
    onSaleDateDisplayTimeZoneOffsetMillis?: (number|null);

    /** Offer licensedOfferType */
    licensedOfferType?: (number|null);

    /** Offer subscriptionContentTerms */
    subscriptionContentTerms?: (ISubscriptionContentTerms|null);

    /** Offer offerId */
    offerId?: (string|null);

    /** Offer preorderFulfillmentDisplayDate */
    preorderFulfillmentDisplayDate?: (number|Long|null);

    /** Offer licenseTerms */
    licenseTerms?: (ILicenseTerms|null);

    /** Offer sale */
    sale?: (boolean|null);

    /** Offer voucherTerms */
    voucherTerms?: (IVoucherTerms|null);

    /** Offer offerPayment */
    offerPayment?: (IOfferPayment[]|null);

    /** Offer repeatLastPayment */
    repeatLastPayment?: (boolean|null);

    /** Offer buyButtonLabel */
    buyButtonLabel?: (string|null);

    /** Offer instantPurchaseEnabled */
    instantPurchaseEnabled?: (boolean|null);

    /** Offer saleEndTimestamp */
    saleEndTimestamp?: (number|Long|null);

    /** Offer saleMessage */
    saleMessage?: (string|null);
}

/** Represents an Offer. */
export class Offer implements IOffer {

    /**
     * Constructs a new Offer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOffer);

    /** Offer micros. */
    public micros: (number|Long);

    /** Offer currencyCode. */
    public currencyCode: string;

    /** Offer formattedAmount. */
    public formattedAmount: string;

    /** Offer convertedPrice. */
    public convertedPrice: IOffer[];

    /** Offer checkoutFlowRequired. */
    public checkoutFlowRequired: boolean;

    /** Offer fullPriceMicros. */
    public fullPriceMicros: (number|Long);

    /** Offer formattedFullAmount. */
    public formattedFullAmount: string;

    /** Offer offerType. */
    public offerType: number;

    /** Offer rentalTerms. */
    public rentalTerms?: (IRentalTerms|null);

    /** Offer onSaleDate. */
    public onSaleDate: (number|Long);

    /** Offer promotionLabel. */
    public promotionLabel: string[];

    /** Offer subscriptionTerms. */
    public subscriptionTerms?: (ISubscriptionTerms|null);

    /** Offer formattedName. */
    public formattedName: string;

    /** Offer formattedDescription. */
    public formattedDescription: string;

    /** Offer preorder. */
    public preorder: boolean;

    /** Offer onSaleDateDisplayTimeZoneOffsetMillis. */
    public onSaleDateDisplayTimeZoneOffsetMillis: number;

    /** Offer licensedOfferType. */
    public licensedOfferType: number;

    /** Offer subscriptionContentTerms. */
    public subscriptionContentTerms?: (ISubscriptionContentTerms|null);

    /** Offer offerId. */
    public offerId: string;

    /** Offer preorderFulfillmentDisplayDate. */
    public preorderFulfillmentDisplayDate: (number|Long);

    /** Offer licenseTerms. */
    public licenseTerms?: (ILicenseTerms|null);

    /** Offer sale. */
    public sale: boolean;

    /** Offer voucherTerms. */
    public voucherTerms?: (IVoucherTerms|null);

    /** Offer offerPayment. */
    public offerPayment: IOfferPayment[];

    /** Offer repeatLastPayment. */
    public repeatLastPayment: boolean;

    /** Offer buyButtonLabel. */
    public buyButtonLabel: string;

    /** Offer instantPurchaseEnabled. */
    public instantPurchaseEnabled: boolean;

    /** Offer saleEndTimestamp. */
    public saleEndTimestamp: (number|Long);

    /** Offer saleMessage. */
    public saleMessage: string;

    /**
     * Creates a new Offer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Offer instance
     */
    public static create(properties?: IOffer): Offer;

    /**
     * Encodes the specified Offer message. Does not implicitly {@link Offer.verify|verify} messages.
     * @param message Offer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Offer message, length delimited. Does not implicitly {@link Offer.verify|verify} messages.
     * @param message Offer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOffer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Offer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Offer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Offer;

    /**
     * Decodes an Offer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Offer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Offer;

    /**
     * Verifies an Offer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Offer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Offer
     */
    public static fromObject(object: { [k: string]: any }): Offer;

    /**
     * Creates a plain object from an Offer message. Also converts values to other types if specified.
     * @param message Offer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Offer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Offer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MonthAndDay. */
export interface IMonthAndDay {

    /** MonthAndDay month */
    month?: (number|null);

    /** MonthAndDay day */
    day?: (number|null);
}

/** Represents a MonthAndDay. */
export class MonthAndDay implements IMonthAndDay {

    /**
     * Constructs a new MonthAndDay.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMonthAndDay);

    /** MonthAndDay month. */
    public month: number;

    /** MonthAndDay day. */
    public day: number;

    /**
     * Creates a new MonthAndDay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MonthAndDay instance
     */
    public static create(properties?: IMonthAndDay): MonthAndDay;

    /**
     * Encodes the specified MonthAndDay message. Does not implicitly {@link MonthAndDay.verify|verify} messages.
     * @param message MonthAndDay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMonthAndDay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MonthAndDay message, length delimited. Does not implicitly {@link MonthAndDay.verify|verify} messages.
     * @param message MonthAndDay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMonthAndDay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MonthAndDay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MonthAndDay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MonthAndDay;

    /**
     * Decodes a MonthAndDay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MonthAndDay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MonthAndDay;

    /**
     * Verifies a MonthAndDay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MonthAndDay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MonthAndDay
     */
    public static fromObject(object: { [k: string]: any }): MonthAndDay;

    /**
     * Creates a plain object from a MonthAndDay message. Also converts values to other types if specified.
     * @param message MonthAndDay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MonthAndDay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MonthAndDay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OfferPaymentPeriod. */
export interface IOfferPaymentPeriod {

    /** OfferPaymentPeriod duration */
    duration?: (ITimePeriod|null);

    /** OfferPaymentPeriod start */
    start?: (IMonthAndDay|null);

    /** OfferPaymentPeriod end */
    end?: (IMonthAndDay|null);
}

/** Represents an OfferPaymentPeriod. */
export class OfferPaymentPeriod implements IOfferPaymentPeriod {

    /**
     * Constructs a new OfferPaymentPeriod.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOfferPaymentPeriod);

    /** OfferPaymentPeriod duration. */
    public duration?: (ITimePeriod|null);

    /** OfferPaymentPeriod start. */
    public start?: (IMonthAndDay|null);

    /** OfferPaymentPeriod end. */
    public end?: (IMonthAndDay|null);

    /**
     * Creates a new OfferPaymentPeriod instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OfferPaymentPeriod instance
     */
    public static create(properties?: IOfferPaymentPeriod): OfferPaymentPeriod;

    /**
     * Encodes the specified OfferPaymentPeriod message. Does not implicitly {@link OfferPaymentPeriod.verify|verify} messages.
     * @param message OfferPaymentPeriod message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOfferPaymentPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OfferPaymentPeriod message, length delimited. Does not implicitly {@link OfferPaymentPeriod.verify|verify} messages.
     * @param message OfferPaymentPeriod message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOfferPaymentPeriod, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OfferPaymentPeriod message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OfferPaymentPeriod
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OfferPaymentPeriod;

    /**
     * Decodes an OfferPaymentPeriod message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OfferPaymentPeriod
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OfferPaymentPeriod;

    /**
     * Verifies an OfferPaymentPeriod message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OfferPaymentPeriod message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OfferPaymentPeriod
     */
    public static fromObject(object: { [k: string]: any }): OfferPaymentPeriod;

    /**
     * Creates a plain object from an OfferPaymentPeriod message. Also converts values to other types if specified.
     * @param message OfferPaymentPeriod
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OfferPaymentPeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OfferPaymentPeriod to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OfferPaymentOverride. */
export interface IOfferPaymentOverride {

    /** OfferPaymentOverride micros */
    micros?: (number|Long|null);

    /** OfferPaymentOverride start */
    start?: (IMonthAndDay|null);

    /** OfferPaymentOverride end */
    end?: (IMonthAndDay|null);
}

/** Represents an OfferPaymentOverride. */
export class OfferPaymentOverride implements IOfferPaymentOverride {

    /**
     * Constructs a new OfferPaymentOverride.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOfferPaymentOverride);

    /** OfferPaymentOverride micros. */
    public micros: (number|Long);

    /** OfferPaymentOverride start. */
    public start?: (IMonthAndDay|null);

    /** OfferPaymentOverride end. */
    public end?: (IMonthAndDay|null);

    /**
     * Creates a new OfferPaymentOverride instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OfferPaymentOverride instance
     */
    public static create(properties?: IOfferPaymentOverride): OfferPaymentOverride;

    /**
     * Encodes the specified OfferPaymentOverride message. Does not implicitly {@link OfferPaymentOverride.verify|verify} messages.
     * @param message OfferPaymentOverride message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOfferPaymentOverride, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OfferPaymentOverride message, length delimited. Does not implicitly {@link OfferPaymentOverride.verify|verify} messages.
     * @param message OfferPaymentOverride message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOfferPaymentOverride, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OfferPaymentOverride message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OfferPaymentOverride
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OfferPaymentOverride;

    /**
     * Decodes an OfferPaymentOverride message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OfferPaymentOverride
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OfferPaymentOverride;

    /**
     * Verifies an OfferPaymentOverride message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OfferPaymentOverride message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OfferPaymentOverride
     */
    public static fromObject(object: { [k: string]: any }): OfferPaymentOverride;

    /**
     * Creates a plain object from an OfferPaymentOverride message. Also converts values to other types if specified.
     * @param message OfferPaymentOverride
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OfferPaymentOverride, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OfferPaymentOverride to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OfferPayment. */
export interface IOfferPayment {

    /** OfferPayment micros */
    micros?: (number|Long|null);

    /** OfferPayment currencyCode */
    currencyCode?: (string|null);

    /** OfferPayment offerPaymentPeriod */
    offerPaymentPeriod?: (IOfferPaymentPeriod|null);

    /** OfferPayment offerPaymentOverride */
    offerPaymentOverride?: (IOfferPaymentOverride[]|null);
}

/** Represents an OfferPayment. */
export class OfferPayment implements IOfferPayment {

    /**
     * Constructs a new OfferPayment.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOfferPayment);

    /** OfferPayment micros. */
    public micros: (number|Long);

    /** OfferPayment currencyCode. */
    public currencyCode: string;

    /** OfferPayment offerPaymentPeriod. */
    public offerPaymentPeriod?: (IOfferPaymentPeriod|null);

    /** OfferPayment offerPaymentOverride. */
    public offerPaymentOverride: IOfferPaymentOverride[];

    /**
     * Creates a new OfferPayment instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OfferPayment instance
     */
    public static create(properties?: IOfferPayment): OfferPayment;

    /**
     * Encodes the specified OfferPayment message. Does not implicitly {@link OfferPayment.verify|verify} messages.
     * @param message OfferPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOfferPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OfferPayment message, length delimited. Does not implicitly {@link OfferPayment.verify|verify} messages.
     * @param message OfferPayment message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOfferPayment, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OfferPayment message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OfferPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OfferPayment;

    /**
     * Decodes an OfferPayment message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OfferPayment
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OfferPayment;

    /**
     * Verifies an OfferPayment message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OfferPayment message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OfferPayment
     */
    public static fromObject(object: { [k: string]: any }): OfferPayment;

    /**
     * Creates a plain object from an OfferPayment message. Also converts values to other types if specified.
     * @param message OfferPayment
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OfferPayment, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OfferPayment to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a VoucherTerms. */
export interface IVoucherTerms {
}

/** Represents a VoucherTerms. */
export class VoucherTerms implements IVoucherTerms {

    /**
     * Constructs a new VoucherTerms.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVoucherTerms);

    /**
     * Creates a new VoucherTerms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VoucherTerms instance
     */
    public static create(properties?: IVoucherTerms): VoucherTerms;

    /**
     * Encodes the specified VoucherTerms message. Does not implicitly {@link VoucherTerms.verify|verify} messages.
     * @param message VoucherTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVoucherTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VoucherTerms message, length delimited. Does not implicitly {@link VoucherTerms.verify|verify} messages.
     * @param message VoucherTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVoucherTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VoucherTerms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VoucherTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VoucherTerms;

    /**
     * Decodes a VoucherTerms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VoucherTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VoucherTerms;

    /**
     * Verifies a VoucherTerms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VoucherTerms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VoucherTerms
     */
    public static fromObject(object: { [k: string]: any }): VoucherTerms;

    /**
     * Creates a plain object from a VoucherTerms message. Also converts values to other types if specified.
     * @param message VoucherTerms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VoucherTerms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VoucherTerms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RentalTerms. */
export interface IRentalTerms {

    /** RentalTerms dEPRECATEDGrantPeriodSeconds */
    dEPRECATEDGrantPeriodSeconds?: (number|null);

    /** RentalTerms dEPRECATEDActivatePeriodSeconds */
    dEPRECATEDActivatePeriodSeconds?: (number|null);

    /** RentalTerms grantPeriod */
    grantPeriod?: (ITimePeriod|null);

    /** RentalTerms activatePeriod */
    activatePeriod?: (ITimePeriod|null);
}

/** Represents a RentalTerms. */
export class RentalTerms implements IRentalTerms {

    /**
     * Constructs a new RentalTerms.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRentalTerms);

    /** RentalTerms dEPRECATEDGrantPeriodSeconds. */
    public dEPRECATEDGrantPeriodSeconds: number;

    /** RentalTerms dEPRECATEDActivatePeriodSeconds. */
    public dEPRECATEDActivatePeriodSeconds: number;

    /** RentalTerms grantPeriod. */
    public grantPeriod?: (ITimePeriod|null);

    /** RentalTerms activatePeriod. */
    public activatePeriod?: (ITimePeriod|null);

    /**
     * Creates a new RentalTerms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RentalTerms instance
     */
    public static create(properties?: IRentalTerms): RentalTerms;

    /**
     * Encodes the specified RentalTerms message. Does not implicitly {@link RentalTerms.verify|verify} messages.
     * @param message RentalTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRentalTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RentalTerms message, length delimited. Does not implicitly {@link RentalTerms.verify|verify} messages.
     * @param message RentalTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRentalTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RentalTerms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RentalTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RentalTerms;

    /**
     * Decodes a RentalTerms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RentalTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RentalTerms;

    /**
     * Verifies a RentalTerms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RentalTerms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RentalTerms
     */
    public static fromObject(object: { [k: string]: any }): RentalTerms;

    /**
     * Creates a plain object from a RentalTerms message. Also converts values to other types if specified.
     * @param message RentalTerms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RentalTerms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RentalTerms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SignedData. */
export interface ISignedData {

    /** SignedData signedData */
    signedData?: (string|null);

    /** SignedData signature */
    signature?: (string|null);
}

/** Represents a SignedData. */
export class SignedData implements ISignedData {

    /**
     * Constructs a new SignedData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISignedData);

    /** SignedData signedData. */
    public signedData: string;

    /** SignedData signature. */
    public signature: string;

    /**
     * Creates a new SignedData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SignedData instance
     */
    public static create(properties?: ISignedData): SignedData;

    /**
     * Encodes the specified SignedData message. Does not implicitly {@link SignedData.verify|verify} messages.
     * @param message SignedData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISignedData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SignedData message, length delimited. Does not implicitly {@link SignedData.verify|verify} messages.
     * @param message SignedData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISignedData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SignedData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SignedData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SignedData;

    /**
     * Decodes a SignedData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SignedData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SignedData;

    /**
     * Verifies a SignedData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SignedData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SignedData
     */
    public static fromObject(object: { [k: string]: any }): SignedData;

    /**
     * Creates a plain object from a SignedData message. Also converts values to other types if specified.
     * @param message SignedData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SignedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SignedData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SubscriptionContentTerms. */
export interface ISubscriptionContentTerms {

    /** SubscriptionContentTerms requiredSubscription */
    requiredSubscription?: (IDocId|null);
}

/** Represents a SubscriptionContentTerms. */
export class SubscriptionContentTerms implements ISubscriptionContentTerms {

    /**
     * Constructs a new SubscriptionContentTerms.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISubscriptionContentTerms);

    /** SubscriptionContentTerms requiredSubscription. */
    public requiredSubscription?: (IDocId|null);

    /**
     * Creates a new SubscriptionContentTerms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SubscriptionContentTerms instance
     */
    public static create(properties?: ISubscriptionContentTerms): SubscriptionContentTerms;

    /**
     * Encodes the specified SubscriptionContentTerms message. Does not implicitly {@link SubscriptionContentTerms.verify|verify} messages.
     * @param message SubscriptionContentTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISubscriptionContentTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SubscriptionContentTerms message, length delimited. Does not implicitly {@link SubscriptionContentTerms.verify|verify} messages.
     * @param message SubscriptionContentTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISubscriptionContentTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SubscriptionContentTerms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SubscriptionContentTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SubscriptionContentTerms;

    /**
     * Decodes a SubscriptionContentTerms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SubscriptionContentTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SubscriptionContentTerms;

    /**
     * Verifies a SubscriptionContentTerms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SubscriptionContentTerms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SubscriptionContentTerms
     */
    public static fromObject(object: { [k: string]: any }): SubscriptionContentTerms;

    /**
     * Creates a plain object from a SubscriptionContentTerms message. Also converts values to other types if specified.
     * @param message SubscriptionContentTerms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SubscriptionContentTerms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SubscriptionContentTerms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GroupLicenseInfo. */
export interface IGroupLicenseInfo {

    /** GroupLicenseInfo licensedOfferType */
    licensedOfferType?: (number|null);

    /** GroupLicenseInfo gaiaGroupId */
    gaiaGroupId?: (number|Long|null);
}

/** Represents a GroupLicenseInfo. */
export class GroupLicenseInfo implements IGroupLicenseInfo {

    /**
     * Constructs a new GroupLicenseInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGroupLicenseInfo);

    /** GroupLicenseInfo licensedOfferType. */
    public licensedOfferType: number;

    /** GroupLicenseInfo gaiaGroupId. */
    public gaiaGroupId: (number|Long);

    /**
     * Creates a new GroupLicenseInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GroupLicenseInfo instance
     */
    public static create(properties?: IGroupLicenseInfo): GroupLicenseInfo;

    /**
     * Encodes the specified GroupLicenseInfo message. Does not implicitly {@link GroupLicenseInfo.verify|verify} messages.
     * @param message GroupLicenseInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGroupLicenseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GroupLicenseInfo message, length delimited. Does not implicitly {@link GroupLicenseInfo.verify|verify} messages.
     * @param message GroupLicenseInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGroupLicenseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GroupLicenseInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GroupLicenseInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GroupLicenseInfo;

    /**
     * Decodes a GroupLicenseInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GroupLicenseInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GroupLicenseInfo;

    /**
     * Verifies a GroupLicenseInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GroupLicenseInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GroupLicenseInfo
     */
    public static fromObject(object: { [k: string]: any }): GroupLicenseInfo;

    /**
     * Creates a plain object from a GroupLicenseInfo message. Also converts values to other types if specified.
     * @param message GroupLicenseInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GroupLicenseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GroupLicenseInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LicensedDocumentInfo. */
export interface ILicensedDocumentInfo {

    /** LicensedDocumentInfo gaiaGroupId */
    gaiaGroupId?: ((number|Long)[]|null);
}

/** Represents a LicensedDocumentInfo. */
export class LicensedDocumentInfo implements ILicensedDocumentInfo {

    /**
     * Constructs a new LicensedDocumentInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILicensedDocumentInfo);

    /** LicensedDocumentInfo gaiaGroupId. */
    public gaiaGroupId: (number|Long)[];

    /**
     * Creates a new LicensedDocumentInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LicensedDocumentInfo instance
     */
    public static create(properties?: ILicensedDocumentInfo): LicensedDocumentInfo;

    /**
     * Encodes the specified LicensedDocumentInfo message. Does not implicitly {@link LicensedDocumentInfo.verify|verify} messages.
     * @param message LicensedDocumentInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILicensedDocumentInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LicensedDocumentInfo message, length delimited. Does not implicitly {@link LicensedDocumentInfo.verify|verify} messages.
     * @param message LicensedDocumentInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILicensedDocumentInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LicensedDocumentInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LicensedDocumentInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LicensedDocumentInfo;

    /**
     * Decodes a LicensedDocumentInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LicensedDocumentInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LicensedDocumentInfo;

    /**
     * Verifies a LicensedDocumentInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LicensedDocumentInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LicensedDocumentInfo
     */
    public static fromObject(object: { [k: string]: any }): LicensedDocumentInfo;

    /**
     * Creates a plain object from a LicensedDocumentInfo message. Also converts values to other types if specified.
     * @param message LicensedDocumentInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LicensedDocumentInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LicensedDocumentInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OwnershipInfo. */
export interface IOwnershipInfo {

    /** OwnershipInfo initiationTimestamp */
    initiationTimestamp?: (number|Long|null);

    /** OwnershipInfo validUntilTimestamp */
    validUntilTimestamp?: (number|Long|null);

    /** OwnershipInfo autoRenewing */
    autoRenewing?: (boolean|null);

    /** OwnershipInfo refundTimeoutTimestamp */
    refundTimeoutTimestamp?: (number|Long|null);

    /** OwnershipInfo postDeliveryRefundWindowMillis */
    postDeliveryRefundWindowMillis?: (number|Long|null);

    /** OwnershipInfo developerPurchaseInfo */
    developerPurchaseInfo?: (ISignedData|null);

    /** OwnershipInfo preOrdered */
    preOrdered?: (boolean|null);

    /** OwnershipInfo hidden */
    hidden?: (boolean|null);

    /** OwnershipInfo rentalTerms */
    rentalTerms?: (IRentalTerms|null);

    /** OwnershipInfo groupLicenseInfo */
    groupLicenseInfo?: (IGroupLicenseInfo|null);

    /** OwnershipInfo licensedDocumentInfo */
    licensedDocumentInfo?: (ILicensedDocumentInfo|null);

    /** OwnershipInfo quantity */
    quantity?: (number|null);

    /** OwnershipInfo libraryExpirationTimestamp */
    libraryExpirationTimestamp?: (number|Long|null);
}

/** Represents an OwnershipInfo. */
export class OwnershipInfo implements IOwnershipInfo {

    /**
     * Constructs a new OwnershipInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOwnershipInfo);

    /** OwnershipInfo initiationTimestamp. */
    public initiationTimestamp: (number|Long);

    /** OwnershipInfo validUntilTimestamp. */
    public validUntilTimestamp: (number|Long);

    /** OwnershipInfo autoRenewing. */
    public autoRenewing: boolean;

    /** OwnershipInfo refundTimeoutTimestamp. */
    public refundTimeoutTimestamp: (number|Long);

    /** OwnershipInfo postDeliveryRefundWindowMillis. */
    public postDeliveryRefundWindowMillis: (number|Long);

    /** OwnershipInfo developerPurchaseInfo. */
    public developerPurchaseInfo?: (ISignedData|null);

    /** OwnershipInfo preOrdered. */
    public preOrdered: boolean;

    /** OwnershipInfo hidden. */
    public hidden: boolean;

    /** OwnershipInfo rentalTerms. */
    public rentalTerms?: (IRentalTerms|null);

    /** OwnershipInfo groupLicenseInfo. */
    public groupLicenseInfo?: (IGroupLicenseInfo|null);

    /** OwnershipInfo licensedDocumentInfo. */
    public licensedDocumentInfo?: (ILicensedDocumentInfo|null);

    /** OwnershipInfo quantity. */
    public quantity: number;

    /** OwnershipInfo libraryExpirationTimestamp. */
    public libraryExpirationTimestamp: (number|Long);

    /**
     * Creates a new OwnershipInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OwnershipInfo instance
     */
    public static create(properties?: IOwnershipInfo): OwnershipInfo;

    /**
     * Encodes the specified OwnershipInfo message. Does not implicitly {@link OwnershipInfo.verify|verify} messages.
     * @param message OwnershipInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOwnershipInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OwnershipInfo message, length delimited. Does not implicitly {@link OwnershipInfo.verify|verify} messages.
     * @param message OwnershipInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOwnershipInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OwnershipInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OwnershipInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OwnershipInfo;

    /**
     * Decodes an OwnershipInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OwnershipInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OwnershipInfo;

    /**
     * Verifies an OwnershipInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OwnershipInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OwnershipInfo
     */
    public static fromObject(object: { [k: string]: any }): OwnershipInfo;

    /**
     * Creates a plain object from an OwnershipInfo message. Also converts values to other types if specified.
     * @param message OwnershipInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OwnershipInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OwnershipInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SubscriptionTerms. */
export interface ISubscriptionTerms {

    /** SubscriptionTerms recurringPeriod */
    recurringPeriod?: (ITimePeriod|null);

    /** SubscriptionTerms trialPeriod */
    trialPeriod?: (ITimePeriod|null);
}

/** Represents a SubscriptionTerms. */
export class SubscriptionTerms implements ISubscriptionTerms {

    /**
     * Constructs a new SubscriptionTerms.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISubscriptionTerms);

    /** SubscriptionTerms recurringPeriod. */
    public recurringPeriod?: (ITimePeriod|null);

    /** SubscriptionTerms trialPeriod. */
    public trialPeriod?: (ITimePeriod|null);

    /**
     * Creates a new SubscriptionTerms instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SubscriptionTerms instance
     */
    public static create(properties?: ISubscriptionTerms): SubscriptionTerms;

    /**
     * Encodes the specified SubscriptionTerms message. Does not implicitly {@link SubscriptionTerms.verify|verify} messages.
     * @param message SubscriptionTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISubscriptionTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SubscriptionTerms message, length delimited. Does not implicitly {@link SubscriptionTerms.verify|verify} messages.
     * @param message SubscriptionTerms message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISubscriptionTerms, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SubscriptionTerms message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SubscriptionTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SubscriptionTerms;

    /**
     * Decodes a SubscriptionTerms message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SubscriptionTerms
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SubscriptionTerms;

    /**
     * Verifies a SubscriptionTerms message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SubscriptionTerms message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SubscriptionTerms
     */
    public static fromObject(object: { [k: string]: any }): SubscriptionTerms;

    /**
     * Creates a plain object from a SubscriptionTerms message. Also converts values to other types if specified.
     * @param message SubscriptionTerms
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SubscriptionTerms, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SubscriptionTerms to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TimePeriod. */
export interface ITimePeriod {

    /** TimePeriod unit */
    unit?: (number|null);

    /** TimePeriod count */
    count?: (number|null);
}

/** Represents a TimePeriod. */
export class TimePeriod implements ITimePeriod {

    /**
     * Constructs a new TimePeriod.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITimePeriod);

    /** TimePeriod unit. */
    public unit: number;

    /** TimePeriod count. */
    public count: number;

    /**
     * Creates a new TimePeriod instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TimePeriod instance
     */
    public static create(properties?: ITimePeriod): TimePeriod;

    /**
     * Encodes the specified TimePeriod message. Does not implicitly {@link TimePeriod.verify|verify} messages.
     * @param message TimePeriod message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITimePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TimePeriod message, length delimited. Does not implicitly {@link TimePeriod.verify|verify} messages.
     * @param message TimePeriod message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITimePeriod, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TimePeriod message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TimePeriod
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TimePeriod;

    /**
     * Decodes a TimePeriod message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TimePeriod
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TimePeriod;

    /**
     * Verifies a TimePeriod message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TimePeriod message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TimePeriod
     */
    public static fromObject(object: { [k: string]: any }): TimePeriod;

    /**
     * Creates a plain object from a TimePeriod message. Also converts values to other types if specified.
     * @param message TimePeriod
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TimePeriod, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TimePeriod to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BillingAddressSpec. */
export interface IBillingAddressSpec {

    /** BillingAddressSpec billingAddressType */
    billingAddressType?: (number|null);

    /** BillingAddressSpec requiredField */
    requiredField?: (number[]|null);
}

/** Represents a BillingAddressSpec. */
export class BillingAddressSpec implements IBillingAddressSpec {

    /**
     * Constructs a new BillingAddressSpec.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBillingAddressSpec);

    /** BillingAddressSpec billingAddressType. */
    public billingAddressType: number;

    /** BillingAddressSpec requiredField. */
    public requiredField: number[];

    /**
     * Creates a new BillingAddressSpec instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BillingAddressSpec instance
     */
    public static create(properties?: IBillingAddressSpec): BillingAddressSpec;

    /**
     * Encodes the specified BillingAddressSpec message. Does not implicitly {@link BillingAddressSpec.verify|verify} messages.
     * @param message BillingAddressSpec message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBillingAddressSpec, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BillingAddressSpec message, length delimited. Does not implicitly {@link BillingAddressSpec.verify|verify} messages.
     * @param message BillingAddressSpec message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBillingAddressSpec, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BillingAddressSpec message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BillingAddressSpec
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BillingAddressSpec;

    /**
     * Decodes a BillingAddressSpec message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BillingAddressSpec
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BillingAddressSpec;

    /**
     * Verifies a BillingAddressSpec message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BillingAddressSpec message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BillingAddressSpec
     */
    public static fromObject(object: { [k: string]: any }): BillingAddressSpec;

    /**
     * Creates a plain object from a BillingAddressSpec message. Also converts values to other types if specified.
     * @param message BillingAddressSpec
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BillingAddressSpec, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BillingAddressSpec to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BillingProfile. */
export interface IBillingProfile {

    /** BillingProfile instrument */
    instrument?: (IInstrument[]|null);

    /** BillingProfile selectedExternalInstrumentId */
    selectedExternalInstrumentId?: (string|null);

    /** BillingProfile billingProfileOption */
    billingProfileOption?: (IBillingProfileOption[]|null);
}

/** Represents a BillingProfile. */
export class BillingProfile implements IBillingProfile {

    /**
     * Constructs a new BillingProfile.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBillingProfile);

    /** BillingProfile instrument. */
    public instrument: IInstrument[];

    /** BillingProfile selectedExternalInstrumentId. */
    public selectedExternalInstrumentId: string;

    /** BillingProfile billingProfileOption. */
    public billingProfileOption: IBillingProfileOption[];

    /**
     * Creates a new BillingProfile instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BillingProfile instance
     */
    public static create(properties?: IBillingProfile): BillingProfile;

    /**
     * Encodes the specified BillingProfile message. Does not implicitly {@link BillingProfile.verify|verify} messages.
     * @param message BillingProfile message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBillingProfile, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BillingProfile message, length delimited. Does not implicitly {@link BillingProfile.verify|verify} messages.
     * @param message BillingProfile message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBillingProfile, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BillingProfile message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BillingProfile
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BillingProfile;

    /**
     * Decodes a BillingProfile message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BillingProfile
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BillingProfile;

    /**
     * Verifies a BillingProfile message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BillingProfile message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BillingProfile
     */
    public static fromObject(object: { [k: string]: any }): BillingProfile;

    /**
     * Creates a plain object from a BillingProfile message. Also converts values to other types if specified.
     * @param message BillingProfile
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BillingProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BillingProfile to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BillingProfileOption. */
export interface IBillingProfileOption {

    /** BillingProfileOption type */
    type?: (number|null);

    /** BillingProfileOption displayTitle */
    displayTitle?: (string|null);

    /** BillingProfileOption externalInstrumentId */
    externalInstrumentId?: (string|null);

    /** BillingProfileOption topupInfo */
    topupInfo?: (ITopupInfo|null);

    /** BillingProfileOption carrierBillingInstrumentStatus */
    carrierBillingInstrumentStatus?: (ICarrierBillingInstrumentStatus|null);
}

/** Represents a BillingProfileOption. */
export class BillingProfileOption implements IBillingProfileOption {

    /**
     * Constructs a new BillingProfileOption.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBillingProfileOption);

    /** BillingProfileOption type. */
    public type: number;

    /** BillingProfileOption displayTitle. */
    public displayTitle: string;

    /** BillingProfileOption externalInstrumentId. */
    public externalInstrumentId: string;

    /** BillingProfileOption topupInfo. */
    public topupInfo?: (ITopupInfo|null);

    /** BillingProfileOption carrierBillingInstrumentStatus. */
    public carrierBillingInstrumentStatus?: (ICarrierBillingInstrumentStatus|null);

    /**
     * Creates a new BillingProfileOption instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BillingProfileOption instance
     */
    public static create(properties?: IBillingProfileOption): BillingProfileOption;

    /**
     * Encodes the specified BillingProfileOption message. Does not implicitly {@link BillingProfileOption.verify|verify} messages.
     * @param message BillingProfileOption message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBillingProfileOption, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BillingProfileOption message, length delimited. Does not implicitly {@link BillingProfileOption.verify|verify} messages.
     * @param message BillingProfileOption message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBillingProfileOption, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BillingProfileOption message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BillingProfileOption
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BillingProfileOption;

    /**
     * Decodes a BillingProfileOption message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BillingProfileOption
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BillingProfileOption;

    /**
     * Verifies a BillingProfileOption message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BillingProfileOption message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BillingProfileOption
     */
    public static fromObject(object: { [k: string]: any }): BillingProfileOption;

    /**
     * Creates a plain object from a BillingProfileOption message. Also converts values to other types if specified.
     * @param message BillingProfileOption
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BillingProfileOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BillingProfileOption to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierBillingCredentials. */
export interface ICarrierBillingCredentials {

    /** CarrierBillingCredentials value */
    value?: (string|null);

    /** CarrierBillingCredentials expiration */
    expiration?: (number|Long|null);
}

/** Represents a CarrierBillingCredentials. */
export class CarrierBillingCredentials implements ICarrierBillingCredentials {

    /**
     * Constructs a new CarrierBillingCredentials.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierBillingCredentials);

    /** CarrierBillingCredentials value. */
    public value: string;

    /** CarrierBillingCredentials expiration. */
    public expiration: (number|Long);

    /**
     * Creates a new CarrierBillingCredentials instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierBillingCredentials instance
     */
    public static create(properties?: ICarrierBillingCredentials): CarrierBillingCredentials;

    /**
     * Encodes the specified CarrierBillingCredentials message. Does not implicitly {@link CarrierBillingCredentials.verify|verify} messages.
     * @param message CarrierBillingCredentials message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierBillingCredentials, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierBillingCredentials message, length delimited. Does not implicitly {@link CarrierBillingCredentials.verify|verify} messages.
     * @param message CarrierBillingCredentials message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierBillingCredentials, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierBillingCredentials message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierBillingCredentials
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierBillingCredentials;

    /**
     * Decodes a CarrierBillingCredentials message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierBillingCredentials
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierBillingCredentials;

    /**
     * Verifies a CarrierBillingCredentials message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierBillingCredentials message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierBillingCredentials
     */
    public static fromObject(object: { [k: string]: any }): CarrierBillingCredentials;

    /**
     * Creates a plain object from a CarrierBillingCredentials message. Also converts values to other types if specified.
     * @param message CarrierBillingCredentials
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierBillingCredentials, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierBillingCredentials to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierBillingInstrument. */
export interface ICarrierBillingInstrument {

    /** CarrierBillingInstrument instrumentKey */
    instrumentKey?: (string|null);

    /** CarrierBillingInstrument accountType */
    accountType?: (string|null);

    /** CarrierBillingInstrument currencyCode */
    currencyCode?: (string|null);

    /** CarrierBillingInstrument transactionLimit */
    transactionLimit?: (number|Long|null);

    /** CarrierBillingInstrument subscriberIdentifier */
    subscriberIdentifier?: (string|null);

    /** CarrierBillingInstrument encryptedSubscriberInfo */
    encryptedSubscriberInfo?: (IEncryptedSubscriberInfo|null);

    /** CarrierBillingInstrument credentials */
    credentials?: (ICarrierBillingCredentials|null);

    /** CarrierBillingInstrument acceptedCarrierTos */
    acceptedCarrierTos?: (ICarrierTos|null);
}

/** Represents a CarrierBillingInstrument. */
export class CarrierBillingInstrument implements ICarrierBillingInstrument {

    /**
     * Constructs a new CarrierBillingInstrument.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierBillingInstrument);

    /** CarrierBillingInstrument instrumentKey. */
    public instrumentKey: string;

    /** CarrierBillingInstrument accountType. */
    public accountType: string;

    /** CarrierBillingInstrument currencyCode. */
    public currencyCode: string;

    /** CarrierBillingInstrument transactionLimit. */
    public transactionLimit: (number|Long);

    /** CarrierBillingInstrument subscriberIdentifier. */
    public subscriberIdentifier: string;

    /** CarrierBillingInstrument encryptedSubscriberInfo. */
    public encryptedSubscriberInfo?: (IEncryptedSubscriberInfo|null);

    /** CarrierBillingInstrument credentials. */
    public credentials?: (ICarrierBillingCredentials|null);

    /** CarrierBillingInstrument acceptedCarrierTos. */
    public acceptedCarrierTos?: (ICarrierTos|null);

    /**
     * Creates a new CarrierBillingInstrument instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierBillingInstrument instance
     */
    public static create(properties?: ICarrierBillingInstrument): CarrierBillingInstrument;

    /**
     * Encodes the specified CarrierBillingInstrument message. Does not implicitly {@link CarrierBillingInstrument.verify|verify} messages.
     * @param message CarrierBillingInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierBillingInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierBillingInstrument message, length delimited. Does not implicitly {@link CarrierBillingInstrument.verify|verify} messages.
     * @param message CarrierBillingInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierBillingInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierBillingInstrument message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierBillingInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierBillingInstrument;

    /**
     * Decodes a CarrierBillingInstrument message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierBillingInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierBillingInstrument;

    /**
     * Verifies a CarrierBillingInstrument message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierBillingInstrument message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierBillingInstrument
     */
    public static fromObject(object: { [k: string]: any }): CarrierBillingInstrument;

    /**
     * Creates a plain object from a CarrierBillingInstrument message. Also converts values to other types if specified.
     * @param message CarrierBillingInstrument
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierBillingInstrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierBillingInstrument to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierBillingInstrumentStatus. */
export interface ICarrierBillingInstrumentStatus {

    /** CarrierBillingInstrumentStatus carrierTos */
    carrierTos?: (ICarrierTos|null);

    /** CarrierBillingInstrumentStatus associationRequired */
    associationRequired?: (boolean|null);

    /** CarrierBillingInstrumentStatus passwordRequired */
    passwordRequired?: (boolean|null);

    /** CarrierBillingInstrumentStatus carrierPasswordPrompt */
    carrierPasswordPrompt?: (IPasswordPrompt|null);

    /** CarrierBillingInstrumentStatus apiVersion */
    apiVersion?: (number|null);

    /** CarrierBillingInstrumentStatus name */
    name?: (string|null);

    /** CarrierBillingInstrumentStatus deviceAssociation */
    deviceAssociation?: (IDeviceAssociation|null);

    /** CarrierBillingInstrumentStatus carrierSupportPhoneNumber */
    carrierSupportPhoneNumber?: (string|null);
}

/** Represents a CarrierBillingInstrumentStatus. */
export class CarrierBillingInstrumentStatus implements ICarrierBillingInstrumentStatus {

    /**
     * Constructs a new CarrierBillingInstrumentStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierBillingInstrumentStatus);

    /** CarrierBillingInstrumentStatus carrierTos. */
    public carrierTos?: (ICarrierTos|null);

    /** CarrierBillingInstrumentStatus associationRequired. */
    public associationRequired: boolean;

    /** CarrierBillingInstrumentStatus passwordRequired. */
    public passwordRequired: boolean;

    /** CarrierBillingInstrumentStatus carrierPasswordPrompt. */
    public carrierPasswordPrompt?: (IPasswordPrompt|null);

    /** CarrierBillingInstrumentStatus apiVersion. */
    public apiVersion: number;

    /** CarrierBillingInstrumentStatus name. */
    public name: string;

    /** CarrierBillingInstrumentStatus deviceAssociation. */
    public deviceAssociation?: (IDeviceAssociation|null);

    /** CarrierBillingInstrumentStatus carrierSupportPhoneNumber. */
    public carrierSupportPhoneNumber: string;

    /**
     * Creates a new CarrierBillingInstrumentStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierBillingInstrumentStatus instance
     */
    public static create(properties?: ICarrierBillingInstrumentStatus): CarrierBillingInstrumentStatus;

    /**
     * Encodes the specified CarrierBillingInstrumentStatus message. Does not implicitly {@link CarrierBillingInstrumentStatus.verify|verify} messages.
     * @param message CarrierBillingInstrumentStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierBillingInstrumentStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierBillingInstrumentStatus message, length delimited. Does not implicitly {@link CarrierBillingInstrumentStatus.verify|verify} messages.
     * @param message CarrierBillingInstrumentStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierBillingInstrumentStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierBillingInstrumentStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierBillingInstrumentStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierBillingInstrumentStatus;

    /**
     * Decodes a CarrierBillingInstrumentStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierBillingInstrumentStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierBillingInstrumentStatus;

    /**
     * Verifies a CarrierBillingInstrumentStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierBillingInstrumentStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierBillingInstrumentStatus
     */
    public static fromObject(object: { [k: string]: any }): CarrierBillingInstrumentStatus;

    /**
     * Creates a plain object from a CarrierBillingInstrumentStatus message. Also converts values to other types if specified.
     * @param message CarrierBillingInstrumentStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierBillingInstrumentStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierBillingInstrumentStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierTos. */
export interface ICarrierTos {

    /** CarrierTos dcbTos */
    dcbTos?: (ICarrierTosEntry|null);

    /** CarrierTos piiTos */
    piiTos?: (ICarrierTosEntry|null);

    /** CarrierTos needsDcbTosAcceptance */
    needsDcbTosAcceptance?: (boolean|null);

    /** CarrierTos needsPiiTosAcceptance */
    needsPiiTosAcceptance?: (boolean|null);
}

/** Represents a CarrierTos. */
export class CarrierTos implements ICarrierTos {

    /**
     * Constructs a new CarrierTos.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierTos);

    /** CarrierTos dcbTos. */
    public dcbTos?: (ICarrierTosEntry|null);

    /** CarrierTos piiTos. */
    public piiTos?: (ICarrierTosEntry|null);

    /** CarrierTos needsDcbTosAcceptance. */
    public needsDcbTosAcceptance: boolean;

    /** CarrierTos needsPiiTosAcceptance. */
    public needsPiiTosAcceptance: boolean;

    /**
     * Creates a new CarrierTos instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierTos instance
     */
    public static create(properties?: ICarrierTos): CarrierTos;

    /**
     * Encodes the specified CarrierTos message. Does not implicitly {@link CarrierTos.verify|verify} messages.
     * @param message CarrierTos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierTos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierTos message, length delimited. Does not implicitly {@link CarrierTos.verify|verify} messages.
     * @param message CarrierTos message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierTos, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierTos message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierTos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierTos;

    /**
     * Decodes a CarrierTos message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierTos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierTos;

    /**
     * Verifies a CarrierTos message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierTos message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierTos
     */
    public static fromObject(object: { [k: string]: any }): CarrierTos;

    /**
     * Creates a plain object from a CarrierTos message. Also converts values to other types if specified.
     * @param message CarrierTos
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierTos, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierTos to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierTosEntry. */
export interface ICarrierTosEntry {

    /** CarrierTosEntry url */
    url?: (string|null);

    /** CarrierTosEntry version */
    version?: (string|null);
}

/** Represents a CarrierTosEntry. */
export class CarrierTosEntry implements ICarrierTosEntry {

    /**
     * Constructs a new CarrierTosEntry.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierTosEntry);

    /** CarrierTosEntry url. */
    public url: string;

    /** CarrierTosEntry version. */
    public version: string;

    /**
     * Creates a new CarrierTosEntry instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierTosEntry instance
     */
    public static create(properties?: ICarrierTosEntry): CarrierTosEntry;

    /**
     * Encodes the specified CarrierTosEntry message. Does not implicitly {@link CarrierTosEntry.verify|verify} messages.
     * @param message CarrierTosEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierTosEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierTosEntry message, length delimited. Does not implicitly {@link CarrierTosEntry.verify|verify} messages.
     * @param message CarrierTosEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierTosEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierTosEntry message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierTosEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierTosEntry;

    /**
     * Decodes a CarrierTosEntry message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierTosEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierTosEntry;

    /**
     * Verifies a CarrierTosEntry message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierTosEntry message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierTosEntry
     */
    public static fromObject(object: { [k: string]: any }): CarrierTosEntry;

    /**
     * Creates a plain object from a CarrierTosEntry message. Also converts values to other types if specified.
     * @param message CarrierTosEntry
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierTosEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierTosEntry to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CreditCardInstrument. */
export interface ICreditCardInstrument {

    /** CreditCardInstrument type */
    type?: (number|null);

    /** CreditCardInstrument escrowHandle */
    escrowHandle?: (string|null);

    /** CreditCardInstrument lastDigits */
    lastDigits?: (string|null);

    /** CreditCardInstrument expirationMonth */
    expirationMonth?: (number|null);

    /** CreditCardInstrument expirationYear */
    expirationYear?: (number|null);

    /** CreditCardInstrument escrowEfeParam */
    escrowEfeParam?: (IEfeParam[]|null);
}

/** Represents a CreditCardInstrument. */
export class CreditCardInstrument implements ICreditCardInstrument {

    /**
     * Constructs a new CreditCardInstrument.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICreditCardInstrument);

    /** CreditCardInstrument type. */
    public type: number;

    /** CreditCardInstrument escrowHandle. */
    public escrowHandle: string;

    /** CreditCardInstrument lastDigits. */
    public lastDigits: string;

    /** CreditCardInstrument expirationMonth. */
    public expirationMonth: number;

    /** CreditCardInstrument expirationYear. */
    public expirationYear: number;

    /** CreditCardInstrument escrowEfeParam. */
    public escrowEfeParam: IEfeParam[];

    /**
     * Creates a new CreditCardInstrument instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CreditCardInstrument instance
     */
    public static create(properties?: ICreditCardInstrument): CreditCardInstrument;

    /**
     * Encodes the specified CreditCardInstrument message. Does not implicitly {@link CreditCardInstrument.verify|verify} messages.
     * @param message CreditCardInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICreditCardInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CreditCardInstrument message, length delimited. Does not implicitly {@link CreditCardInstrument.verify|verify} messages.
     * @param message CreditCardInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICreditCardInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CreditCardInstrument message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CreditCardInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CreditCardInstrument;

    /**
     * Decodes a CreditCardInstrument message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CreditCardInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CreditCardInstrument;

    /**
     * Verifies a CreditCardInstrument message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CreditCardInstrument message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CreditCardInstrument
     */
    public static fromObject(object: { [k: string]: any }): CreditCardInstrument;

    /**
     * Creates a plain object from a CreditCardInstrument message. Also converts values to other types if specified.
     * @param message CreditCardInstrument
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CreditCardInstrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CreditCardInstrument to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DeviceAssociation. */
export interface IDeviceAssociation {

    /** DeviceAssociation userTokenRequestMessage */
    userTokenRequestMessage?: (string|null);

    /** DeviceAssociation userTokenRequestAddress */
    userTokenRequestAddress?: (string|null);
}

/** Represents a DeviceAssociation. */
export class DeviceAssociation implements IDeviceAssociation {

    /**
     * Constructs a new DeviceAssociation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDeviceAssociation);

    /** DeviceAssociation userTokenRequestMessage. */
    public userTokenRequestMessage: string;

    /** DeviceAssociation userTokenRequestAddress. */
    public userTokenRequestAddress: string;

    /**
     * Creates a new DeviceAssociation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DeviceAssociation instance
     */
    public static create(properties?: IDeviceAssociation): DeviceAssociation;

    /**
     * Encodes the specified DeviceAssociation message. Does not implicitly {@link DeviceAssociation.verify|verify} messages.
     * @param message DeviceAssociation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDeviceAssociation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DeviceAssociation message, length delimited. Does not implicitly {@link DeviceAssociation.verify|verify} messages.
     * @param message DeviceAssociation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDeviceAssociation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DeviceAssociation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DeviceAssociation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DeviceAssociation;

    /**
     * Decodes a DeviceAssociation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DeviceAssociation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DeviceAssociation;

    /**
     * Verifies a DeviceAssociation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DeviceAssociation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DeviceAssociation
     */
    public static fromObject(object: { [k: string]: any }): DeviceAssociation;

    /**
     * Creates a plain object from a DeviceAssociation message. Also converts values to other types if specified.
     * @param message DeviceAssociation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DeviceAssociation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DeviceAssociation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DisabledInfo. */
export interface IDisabledInfo {

    /** DisabledInfo disabledReason */
    disabledReason?: (number|null);

    /** DisabledInfo disabledMessageHtml */
    disabledMessageHtml?: (string|null);

    /** DisabledInfo errorMessage */
    errorMessage?: (string|null);
}

/** Represents a DisabledInfo. */
export class DisabledInfo implements IDisabledInfo {

    /**
     * Constructs a new DisabledInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDisabledInfo);

    /** DisabledInfo disabledReason. */
    public disabledReason: number;

    /** DisabledInfo disabledMessageHtml. */
    public disabledMessageHtml: string;

    /** DisabledInfo errorMessage. */
    public errorMessage: string;

    /**
     * Creates a new DisabledInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DisabledInfo instance
     */
    public static create(properties?: IDisabledInfo): DisabledInfo;

    /**
     * Encodes the specified DisabledInfo message. Does not implicitly {@link DisabledInfo.verify|verify} messages.
     * @param message DisabledInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDisabledInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DisabledInfo message, length delimited. Does not implicitly {@link DisabledInfo.verify|verify} messages.
     * @param message DisabledInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDisabledInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DisabledInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DisabledInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DisabledInfo;

    /**
     * Decodes a DisabledInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DisabledInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DisabledInfo;

    /**
     * Verifies a DisabledInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DisabledInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DisabledInfo
     */
    public static fromObject(object: { [k: string]: any }): DisabledInfo;

    /**
     * Creates a plain object from a DisabledInfo message. Also converts values to other types if specified.
     * @param message DisabledInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DisabledInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DisabledInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EfeParam. */
export interface IEfeParam {

    /** EfeParam key */
    key?: (number|null);

    /** EfeParam value */
    value?: (string|null);
}

/** Represents an EfeParam. */
export class EfeParam implements IEfeParam {

    /**
     * Constructs a new EfeParam.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEfeParam);

    /** EfeParam key. */
    public key: number;

    /** EfeParam value. */
    public value: string;

    /**
     * Creates a new EfeParam instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EfeParam instance
     */
    public static create(properties?: IEfeParam): EfeParam;

    /**
     * Encodes the specified EfeParam message. Does not implicitly {@link EfeParam.verify|verify} messages.
     * @param message EfeParam message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEfeParam, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EfeParam message, length delimited. Does not implicitly {@link EfeParam.verify|verify} messages.
     * @param message EfeParam message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEfeParam, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EfeParam message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EfeParam
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EfeParam;

    /**
     * Decodes an EfeParam message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EfeParam
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EfeParam;

    /**
     * Verifies an EfeParam message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EfeParam message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EfeParam
     */
    public static fromObject(object: { [k: string]: any }): EfeParam;

    /**
     * Creates a plain object from an EfeParam message. Also converts values to other types if specified.
     * @param message EfeParam
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EfeParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EfeParam to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Instrument. */
export interface IInstrument {

    /** Instrument instrumentId */
    instrumentId?: (string|null);

    /** Instrument billingAddress */
    billingAddress?: (IAddress|null);

    /** Instrument creditCard */
    creditCard?: (ICreditCardInstrument|null);

    /** Instrument carrierBilling */
    carrierBilling?: (ICarrierBillingInstrument|null);

    /** Instrument billingAddressSpec */
    billingAddressSpec?: (IBillingAddressSpec|null);

    /** Instrument instrumentFamily */
    instrumentFamily?: (number|null);

    /** Instrument carrierBillingStatus */
    carrierBillingStatus?: (ICarrierBillingInstrumentStatus|null);

    /** Instrument displayTitle */
    displayTitle?: (string|null);

    /** Instrument topupInfoDeprecated */
    topupInfoDeprecated?: (ITopupInfo|null);

    /** Instrument version */
    version?: (number|null);

    /** Instrument storedValue */
    storedValue?: (IStoredValueInstrument|null);

    /** Instrument disabledInfo */
    disabledInfo?: (IDisabledInfo[]|null);
}

/** Represents an Instrument. */
export class Instrument implements IInstrument {

    /**
     * Constructs a new Instrument.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInstrument);

    /** Instrument instrumentId. */
    public instrumentId: string;

    /** Instrument billingAddress. */
    public billingAddress?: (IAddress|null);

    /** Instrument creditCard. */
    public creditCard?: (ICreditCardInstrument|null);

    /** Instrument carrierBilling. */
    public carrierBilling?: (ICarrierBillingInstrument|null);

    /** Instrument billingAddressSpec. */
    public billingAddressSpec?: (IBillingAddressSpec|null);

    /** Instrument instrumentFamily. */
    public instrumentFamily: number;

    /** Instrument carrierBillingStatus. */
    public carrierBillingStatus?: (ICarrierBillingInstrumentStatus|null);

    /** Instrument displayTitle. */
    public displayTitle: string;

    /** Instrument topupInfoDeprecated. */
    public topupInfoDeprecated?: (ITopupInfo|null);

    /** Instrument version. */
    public version: number;

    /** Instrument storedValue. */
    public storedValue?: (IStoredValueInstrument|null);

    /** Instrument disabledInfo. */
    public disabledInfo: IDisabledInfo[];

    /**
     * Creates a new Instrument instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Instrument instance
     */
    public static create(properties?: IInstrument): Instrument;

    /**
     * Encodes the specified Instrument message. Does not implicitly {@link Instrument.verify|verify} messages.
     * @param message Instrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Instrument message, length delimited. Does not implicitly {@link Instrument.verify|verify} messages.
     * @param message Instrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Instrument message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Instrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Instrument;

    /**
     * Decodes an Instrument message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Instrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Instrument;

    /**
     * Verifies an Instrument message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Instrument message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Instrument
     */
    public static fromObject(object: { [k: string]: any }): Instrument;

    /**
     * Creates a plain object from an Instrument message. Also converts values to other types if specified.
     * @param message Instrument
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Instrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Instrument to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an InstrumentSetupInfo. */
export interface IInstrumentSetupInfo {

    /** InstrumentSetupInfo instrumentFamily */
    instrumentFamily?: (number|null);

    /** InstrumentSetupInfo supported */
    supported?: (boolean|null);

    /** InstrumentSetupInfo addressChallenge */
    addressChallenge?: (IAddressChallenge|null);

    /** InstrumentSetupInfo balance */
    balance?: (IMoney|null);

    /** InstrumentSetupInfo footerHtml */
    footerHtml?: (string[]|null);
}

/** Represents an InstrumentSetupInfo. */
export class InstrumentSetupInfo implements IInstrumentSetupInfo {

    /**
     * Constructs a new InstrumentSetupInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInstrumentSetupInfo);

    /** InstrumentSetupInfo instrumentFamily. */
    public instrumentFamily: number;

    /** InstrumentSetupInfo supported. */
    public supported: boolean;

    /** InstrumentSetupInfo addressChallenge. */
    public addressChallenge?: (IAddressChallenge|null);

    /** InstrumentSetupInfo balance. */
    public balance?: (IMoney|null);

    /** InstrumentSetupInfo footerHtml. */
    public footerHtml: string[];

    /**
     * Creates a new InstrumentSetupInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InstrumentSetupInfo instance
     */
    public static create(properties?: IInstrumentSetupInfo): InstrumentSetupInfo;

    /**
     * Encodes the specified InstrumentSetupInfo message. Does not implicitly {@link InstrumentSetupInfo.verify|verify} messages.
     * @param message InstrumentSetupInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInstrumentSetupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InstrumentSetupInfo message, length delimited. Does not implicitly {@link InstrumentSetupInfo.verify|verify} messages.
     * @param message InstrumentSetupInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInstrumentSetupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InstrumentSetupInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InstrumentSetupInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InstrumentSetupInfo;

    /**
     * Decodes an InstrumentSetupInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InstrumentSetupInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InstrumentSetupInfo;

    /**
     * Verifies an InstrumentSetupInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InstrumentSetupInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InstrumentSetupInfo
     */
    public static fromObject(object: { [k: string]: any }): InstrumentSetupInfo;

    /**
     * Creates a plain object from an InstrumentSetupInfo message. Also converts values to other types if specified.
     * @param message InstrumentSetupInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InstrumentSetupInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InstrumentSetupInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PasswordPrompt. */
export interface IPasswordPrompt {

    /** PasswordPrompt prompt */
    prompt?: (string|null);

    /** PasswordPrompt forgotPasswordUrl */
    forgotPasswordUrl?: (string|null);
}

/** Represents a PasswordPrompt. */
export class PasswordPrompt implements IPasswordPrompt {

    /**
     * Constructs a new PasswordPrompt.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPasswordPrompt);

    /** PasswordPrompt prompt. */
    public prompt: string;

    /** PasswordPrompt forgotPasswordUrl. */
    public forgotPasswordUrl: string;

    /**
     * Creates a new PasswordPrompt instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PasswordPrompt instance
     */
    public static create(properties?: IPasswordPrompt): PasswordPrompt;

    /**
     * Encodes the specified PasswordPrompt message. Does not implicitly {@link PasswordPrompt.verify|verify} messages.
     * @param message PasswordPrompt message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPasswordPrompt, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PasswordPrompt message, length delimited. Does not implicitly {@link PasswordPrompt.verify|verify} messages.
     * @param message PasswordPrompt message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPasswordPrompt, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PasswordPrompt message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PasswordPrompt
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PasswordPrompt;

    /**
     * Decodes a PasswordPrompt message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PasswordPrompt
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PasswordPrompt;

    /**
     * Verifies a PasswordPrompt message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PasswordPrompt message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PasswordPrompt
     */
    public static fromObject(object: { [k: string]: any }): PasswordPrompt;

    /**
     * Creates a plain object from a PasswordPrompt message. Also converts values to other types if specified.
     * @param message PasswordPrompt
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PasswordPrompt, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PasswordPrompt to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a StoredValueInstrument. */
export interface IStoredValueInstrument {

    /** StoredValueInstrument type */
    type?: (number|null);

    /** StoredValueInstrument balance */
    balance?: (IMoney|null);

    /** StoredValueInstrument topupInfo */
    topupInfo?: (ITopupInfo|null);
}

/** Represents a StoredValueInstrument. */
export class StoredValueInstrument implements IStoredValueInstrument {

    /**
     * Constructs a new StoredValueInstrument.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStoredValueInstrument);

    /** StoredValueInstrument type. */
    public type: number;

    /** StoredValueInstrument balance. */
    public balance?: (IMoney|null);

    /** StoredValueInstrument topupInfo. */
    public topupInfo?: (ITopupInfo|null);

    /**
     * Creates a new StoredValueInstrument instance using the specified properties.
     * @param [properties] Properties to set
     * @returns StoredValueInstrument instance
     */
    public static create(properties?: IStoredValueInstrument): StoredValueInstrument;

    /**
     * Encodes the specified StoredValueInstrument message. Does not implicitly {@link StoredValueInstrument.verify|verify} messages.
     * @param message StoredValueInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStoredValueInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified StoredValueInstrument message, length delimited. Does not implicitly {@link StoredValueInstrument.verify|verify} messages.
     * @param message StoredValueInstrument message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStoredValueInstrument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a StoredValueInstrument message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns StoredValueInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): StoredValueInstrument;

    /**
     * Decodes a StoredValueInstrument message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns StoredValueInstrument
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): StoredValueInstrument;

    /**
     * Verifies a StoredValueInstrument message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a StoredValueInstrument message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns StoredValueInstrument
     */
    public static fromObject(object: { [k: string]: any }): StoredValueInstrument;

    /**
     * Creates a plain object from a StoredValueInstrument message. Also converts values to other types if specified.
     * @param message StoredValueInstrument
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: StoredValueInstrument, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this StoredValueInstrument to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TopupInfo. */
export interface ITopupInfo {

    /** TopupInfo optionsContainerDocIdDeprecated */
    optionsContainerDocIdDeprecated?: (string|null);

    /** TopupInfo optionsListUrl */
    optionsListUrl?: (string|null);

    /** TopupInfo subtitle */
    subtitle?: (string|null);

    /** TopupInfo optionsContainerDocId */
    optionsContainerDocId?: (IDocId|null);
}

/** Represents a TopupInfo. */
export class TopupInfo implements ITopupInfo {

    /**
     * Constructs a new TopupInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITopupInfo);

    /** TopupInfo optionsContainerDocIdDeprecated. */
    public optionsContainerDocIdDeprecated: string;

    /** TopupInfo optionsListUrl. */
    public optionsListUrl: string;

    /** TopupInfo subtitle. */
    public subtitle: string;

    /** TopupInfo optionsContainerDocId. */
    public optionsContainerDocId?: (IDocId|null);

    /**
     * Creates a new TopupInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TopupInfo instance
     */
    public static create(properties?: ITopupInfo): TopupInfo;

    /**
     * Encodes the specified TopupInfo message. Does not implicitly {@link TopupInfo.verify|verify} messages.
     * @param message TopupInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITopupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TopupInfo message, length delimited. Does not implicitly {@link TopupInfo.verify|verify} messages.
     * @param message TopupInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITopupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TopupInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TopupInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TopupInfo;

    /**
     * Decodes a TopupInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TopupInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TopupInfo;

    /**
     * Verifies a TopupInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TopupInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TopupInfo
     */
    public static fromObject(object: { [k: string]: any }): TopupInfo;

    /**
     * Creates a plain object from a TopupInfo message. Also converts values to other types if specified.
     * @param message TopupInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TopupInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TopupInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ConsumePurchaseResponse. */
export interface IConsumePurchaseResponse {

    /** ConsumePurchaseResponse libraryUpdate */
    libraryUpdate?: (ILibraryUpdate|null);

    /** ConsumePurchaseResponse status */
    status?: (number|null);
}

/** Represents a ConsumePurchaseResponse. */
export class ConsumePurchaseResponse implements IConsumePurchaseResponse {

    /**
     * Constructs a new ConsumePurchaseResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IConsumePurchaseResponse);

    /** ConsumePurchaseResponse libraryUpdate. */
    public libraryUpdate?: (ILibraryUpdate|null);

    /** ConsumePurchaseResponse status. */
    public status: number;

    /**
     * Creates a new ConsumePurchaseResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ConsumePurchaseResponse instance
     */
    public static create(properties?: IConsumePurchaseResponse): ConsumePurchaseResponse;

    /**
     * Encodes the specified ConsumePurchaseResponse message. Does not implicitly {@link ConsumePurchaseResponse.verify|verify} messages.
     * @param message ConsumePurchaseResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IConsumePurchaseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ConsumePurchaseResponse message, length delimited. Does not implicitly {@link ConsumePurchaseResponse.verify|verify} messages.
     * @param message ConsumePurchaseResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IConsumePurchaseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ConsumePurchaseResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ConsumePurchaseResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ConsumePurchaseResponse;

    /**
     * Decodes a ConsumePurchaseResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ConsumePurchaseResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ConsumePurchaseResponse;

    /**
     * Verifies a ConsumePurchaseResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ConsumePurchaseResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ConsumePurchaseResponse
     */
    public static fromObject(object: { [k: string]: any }): ConsumePurchaseResponse;

    /**
     * Creates a plain object from a ConsumePurchaseResponse message. Also converts values to other types if specified.
     * @param message ConsumePurchaseResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ConsumePurchaseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ConsumePurchaseResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ContainerMetadata. */
export interface IContainerMetadata {

    /** ContainerMetadata browseUrl */
    browseUrl?: (string|null);

    /** ContainerMetadata nextPageUrl */
    nextPageUrl?: (string|null);

    /** ContainerMetadata relevance */
    relevance?: (number|null);

    /** ContainerMetadata estimatedResults */
    estimatedResults?: (number|Long|null);

    /** ContainerMetadata analyticsCookie */
    analyticsCookie?: (string|null);

    /** ContainerMetadata ordered */
    ordered?: (boolean|null);

    /** ContainerMetadata containerView */
    containerView?: (IContainerView[]|null);

    /** ContainerMetadata leftIcon */
    leftIcon?: (IImage|null);
}

/** Represents a ContainerMetadata. */
export class ContainerMetadata implements IContainerMetadata {

    /**
     * Constructs a new ContainerMetadata.
     * @param [properties] Properties to set
     */
    constructor(properties?: IContainerMetadata);

    /** ContainerMetadata browseUrl. */
    public browseUrl: string;

    /** ContainerMetadata nextPageUrl. */
    public nextPageUrl: string;

    /** ContainerMetadata relevance. */
    public relevance: number;

    /** ContainerMetadata estimatedResults. */
    public estimatedResults: (number|Long);

    /** ContainerMetadata analyticsCookie. */
    public analyticsCookie: string;

    /** ContainerMetadata ordered. */
    public ordered: boolean;

    /** ContainerMetadata containerView. */
    public containerView: IContainerView[];

    /** ContainerMetadata leftIcon. */
    public leftIcon?: (IImage|null);

    /**
     * Creates a new ContainerMetadata instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ContainerMetadata instance
     */
    public static create(properties?: IContainerMetadata): ContainerMetadata;

    /**
     * Encodes the specified ContainerMetadata message. Does not implicitly {@link ContainerMetadata.verify|verify} messages.
     * @param message ContainerMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IContainerMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ContainerMetadata message, length delimited. Does not implicitly {@link ContainerMetadata.verify|verify} messages.
     * @param message ContainerMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IContainerMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ContainerMetadata message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ContainerMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ContainerMetadata;

    /**
     * Decodes a ContainerMetadata message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ContainerMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ContainerMetadata;

    /**
     * Verifies a ContainerMetadata message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ContainerMetadata message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ContainerMetadata
     */
    public static fromObject(object: { [k: string]: any }): ContainerMetadata;

    /**
     * Creates a plain object from a ContainerMetadata message. Also converts values to other types if specified.
     * @param message ContainerMetadata
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ContainerMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ContainerMetadata to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ContainerView. */
export interface IContainerView {

    /** ContainerView selected */
    selected?: (boolean|null);

    /** ContainerView title */
    title?: (string|null);

    /** ContainerView listUrl */
    listUrl?: (string|null);

    /** ContainerView serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);
}

/** Represents a ContainerView. */
export class ContainerView implements IContainerView {

    /**
     * Constructs a new ContainerView.
     * @param [properties] Properties to set
     */
    constructor(properties?: IContainerView);

    /** ContainerView selected. */
    public selected: boolean;

    /** ContainerView title. */
    public title: string;

    /** ContainerView listUrl. */
    public listUrl: string;

    /** ContainerView serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /**
     * Creates a new ContainerView instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ContainerView instance
     */
    public static create(properties?: IContainerView): ContainerView;

    /**
     * Encodes the specified ContainerView message. Does not implicitly {@link ContainerView.verify|verify} messages.
     * @param message ContainerView message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IContainerView, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ContainerView message, length delimited. Does not implicitly {@link ContainerView.verify|verify} messages.
     * @param message ContainerView message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IContainerView, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ContainerView message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ContainerView
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ContainerView;

    /**
     * Decodes a ContainerView message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ContainerView
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ContainerView;

    /**
     * Verifies a ContainerView message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ContainerView message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ContainerView
     */
    public static fromObject(object: { [k: string]: any }): ContainerView;

    /**
     * Creates a plain object from a ContainerView message. Also converts values to other types if specified.
     * @param message ContainerView
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ContainerView, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ContainerView to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a FlagContentResponse. */
export interface IFlagContentResponse {
}

/** Represents a FlagContentResponse. */
export class FlagContentResponse implements IFlagContentResponse {

    /**
     * Constructs a new FlagContentResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFlagContentResponse);

    /**
     * Creates a new FlagContentResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FlagContentResponse instance
     */
    public static create(properties?: IFlagContentResponse): FlagContentResponse;

    /**
     * Encodes the specified FlagContentResponse message. Does not implicitly {@link FlagContentResponse.verify|verify} messages.
     * @param message FlagContentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFlagContentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FlagContentResponse message, length delimited. Does not implicitly {@link FlagContentResponse.verify|verify} messages.
     * @param message FlagContentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFlagContentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FlagContentResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FlagContentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FlagContentResponse;

    /**
     * Decodes a FlagContentResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FlagContentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FlagContentResponse;

    /**
     * Verifies a FlagContentResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FlagContentResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FlagContentResponse
     */
    public static fromObject(object: { [k: string]: any }): FlagContentResponse;

    /**
     * Creates a plain object from a FlagContentResponse message. Also converts values to other types if specified.
     * @param message FlagContentResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FlagContentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FlagContentResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ClientDownloadRequest. */
export interface IClientDownloadRequest {

    /** ClientDownloadRequest url */
    url?: (string|null);

    /** ClientDownloadRequest digests */
    digests?: (ClientDownloadRequest.IDigests|null);

    /** ClientDownloadRequest length */
    length?: (number|Long|null);

    /** ClientDownloadRequest resources */
    resources?: (ClientDownloadRequest.IResource[]|null);

    /** ClientDownloadRequest signature */
    signature?: (ClientDownloadRequest.ISignatureInfo|null);

    /** ClientDownloadRequest userInitiated */
    userInitiated?: (boolean|null);

    /** ClientDownloadRequest clientAsn */
    clientAsn?: (string[]|null);

    /** ClientDownloadRequest fileBasename */
    fileBasename?: (string|null);

    /** ClientDownloadRequest downloadType */
    downloadType?: (number|null);

    /** ClientDownloadRequest locale */
    locale?: (string|null);

    /** ClientDownloadRequest apkInfo */
    apkInfo?: (ClientDownloadRequest.IApkInfo|null);

    /** ClientDownloadRequest androidId */
    androidId?: (number|Long|null);

    /** ClientDownloadRequest originatingPackages */
    originatingPackages?: (string[]|null);

    /** ClientDownloadRequest originatingSignature */
    originatingSignature?: (ClientDownloadRequest.ISignatureInfo|null);
}

/** Represents a ClientDownloadRequest. */
export class ClientDownloadRequest implements IClientDownloadRequest {

    /**
     * Constructs a new ClientDownloadRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IClientDownloadRequest);

    /** ClientDownloadRequest url. */
    public url: string;

    /** ClientDownloadRequest digests. */
    public digests?: (ClientDownloadRequest.IDigests|null);

    /** ClientDownloadRequest length. */
    public length: (number|Long);

    /** ClientDownloadRequest resources. */
    public resources: ClientDownloadRequest.IResource[];

    /** ClientDownloadRequest signature. */
    public signature?: (ClientDownloadRequest.ISignatureInfo|null);

    /** ClientDownloadRequest userInitiated. */
    public userInitiated: boolean;

    /** ClientDownloadRequest clientAsn. */
    public clientAsn: string[];

    /** ClientDownloadRequest fileBasename. */
    public fileBasename: string;

    /** ClientDownloadRequest downloadType. */
    public downloadType: number;

    /** ClientDownloadRequest locale. */
    public locale: string;

    /** ClientDownloadRequest apkInfo. */
    public apkInfo?: (ClientDownloadRequest.IApkInfo|null);

    /** ClientDownloadRequest androidId. */
    public androidId: (number|Long);

    /** ClientDownloadRequest originatingPackages. */
    public originatingPackages: string[];

    /** ClientDownloadRequest originatingSignature. */
    public originatingSignature?: (ClientDownloadRequest.ISignatureInfo|null);

    /**
     * Creates a new ClientDownloadRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ClientDownloadRequest instance
     */
    public static create(properties?: IClientDownloadRequest): ClientDownloadRequest;

    /**
     * Encodes the specified ClientDownloadRequest message. Does not implicitly {@link ClientDownloadRequest.verify|verify} messages.
     * @param message ClientDownloadRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IClientDownloadRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ClientDownloadRequest message, length delimited. Does not implicitly {@link ClientDownloadRequest.verify|verify} messages.
     * @param message ClientDownloadRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IClientDownloadRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ClientDownloadRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ClientDownloadRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest;

    /**
     * Decodes a ClientDownloadRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ClientDownloadRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest;

    /**
     * Verifies a ClientDownloadRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ClientDownloadRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ClientDownloadRequest
     */
    public static fromObject(object: { [k: string]: any }): ClientDownloadRequest;

    /**
     * Creates a plain object from a ClientDownloadRequest message. Also converts values to other types if specified.
     * @param message ClientDownloadRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ClientDownloadRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ClientDownloadRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace ClientDownloadRequest {

    /** Properties of an ApkInfo. */
    interface IApkInfo {

        /** ApkInfo packageName */
        packageName?: (string|null);

        /** ApkInfo versionCode */
        versionCode?: (number|null);
    }

    /** Represents an ApkInfo. */
    class ApkInfo implements IApkInfo {

        /**
         * Constructs a new ApkInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadRequest.IApkInfo);

        /** ApkInfo packageName. */
        public packageName: string;

        /** ApkInfo versionCode. */
        public versionCode: number;

        /**
         * Creates a new ApkInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ApkInfo instance
         */
        public static create(properties?: ClientDownloadRequest.IApkInfo): ClientDownloadRequest.ApkInfo;

        /**
         * Encodes the specified ApkInfo message. Does not implicitly {@link ClientDownloadRequest.ApkInfo.verify|verify} messages.
         * @param message ApkInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadRequest.IApkInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ApkInfo message, length delimited. Does not implicitly {@link ClientDownloadRequest.ApkInfo.verify|verify} messages.
         * @param message ApkInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadRequest.IApkInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ApkInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ApkInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.ApkInfo;

        /**
         * Decodes an ApkInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ApkInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.ApkInfo;

        /**
         * Verifies an ApkInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ApkInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ApkInfo
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.ApkInfo;

        /**
         * Creates a plain object from an ApkInfo message. Also converts values to other types if specified.
         * @param message ApkInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadRequest.ApkInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ApkInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CertificateChain. */
    interface ICertificateChain {

        /** CertificateChain element */
        element?: (ClientDownloadRequest.CertificateChain.IElement[]|null);
    }

    /** Represents a CertificateChain. */
    class CertificateChain implements ICertificateChain {

        /**
         * Constructs a new CertificateChain.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadRequest.ICertificateChain);

        /** CertificateChain element. */
        public element: ClientDownloadRequest.CertificateChain.IElement[];

        /**
         * Creates a new CertificateChain instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CertificateChain instance
         */
        public static create(properties?: ClientDownloadRequest.ICertificateChain): ClientDownloadRequest.CertificateChain;

        /**
         * Encodes the specified CertificateChain message. Does not implicitly {@link ClientDownloadRequest.CertificateChain.verify|verify} messages.
         * @param message CertificateChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadRequest.ICertificateChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CertificateChain message, length delimited. Does not implicitly {@link ClientDownloadRequest.CertificateChain.verify|verify} messages.
         * @param message CertificateChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadRequest.ICertificateChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CertificateChain message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CertificateChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.CertificateChain;

        /**
         * Decodes a CertificateChain message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CertificateChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.CertificateChain;

        /**
         * Verifies a CertificateChain message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CertificateChain message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CertificateChain
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.CertificateChain;

        /**
         * Creates a plain object from a CertificateChain message. Also converts values to other types if specified.
         * @param message CertificateChain
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadRequest.CertificateChain, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CertificateChain to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace CertificateChain {

        /** Properties of an Element. */
        interface IElement {

            /** Element certificate */
            certificate?: (Uint8Array|null);

            /** Element parsedSuccessfully */
            parsedSuccessfully?: (boolean|null);

            /** Element subject */
            subject?: (Uint8Array|null);

            /** Element issuer */
            issuer?: (Uint8Array|null);

            /** Element fingerprint */
            fingerprint?: (Uint8Array|null);

            /** Element expiryTime */
            expiryTime?: (number|Long|null);

            /** Element startTime */
            startTime?: (number|Long|null);
        }

        /** Represents an Element. */
        class Element implements IElement {

            /**
             * Constructs a new Element.
             * @param [properties] Properties to set
             */
            constructor(properties?: ClientDownloadRequest.CertificateChain.IElement);

            /** Element certificate. */
            public certificate: Uint8Array;

            /** Element parsedSuccessfully. */
            public parsedSuccessfully: boolean;

            /** Element subject. */
            public subject: Uint8Array;

            /** Element issuer. */
            public issuer: Uint8Array;

            /** Element fingerprint. */
            public fingerprint: Uint8Array;

            /** Element expiryTime. */
            public expiryTime: (number|Long);

            /** Element startTime. */
            public startTime: (number|Long);

            /**
             * Creates a new Element instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Element instance
             */
            public static create(properties?: ClientDownloadRequest.CertificateChain.IElement): ClientDownloadRequest.CertificateChain.Element;

            /**
             * Encodes the specified Element message. Does not implicitly {@link ClientDownloadRequest.CertificateChain.Element.verify|verify} messages.
             * @param message Element message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: ClientDownloadRequest.CertificateChain.IElement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Element message, length delimited. Does not implicitly {@link ClientDownloadRequest.CertificateChain.Element.verify|verify} messages.
             * @param message Element message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: ClientDownloadRequest.CertificateChain.IElement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Element message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Element
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.CertificateChain.Element;

            /**
             * Decodes an Element message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Element
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.CertificateChain.Element;

            /**
             * Verifies an Element message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Element message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Element
             */
            public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.CertificateChain.Element;

            /**
             * Creates a plain object from an Element message. Also converts values to other types if specified.
             * @param message Element
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: ClientDownloadRequest.CertificateChain.Element, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Element to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a Digests. */
    interface IDigests {

        /** Digests sha256 */
        sha256?: (Uint8Array|null);

        /** Digests sha1 */
        sha1?: (Uint8Array|null);

        /** Digests md5 */
        md5?: (Uint8Array|null);
    }

    /** Represents a Digests. */
    class Digests implements IDigests {

        /**
         * Constructs a new Digests.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadRequest.IDigests);

        /** Digests sha256. */
        public sha256: Uint8Array;

        /** Digests sha1. */
        public sha1: Uint8Array;

        /** Digests md5. */
        public md5: Uint8Array;

        /**
         * Creates a new Digests instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Digests instance
         */
        public static create(properties?: ClientDownloadRequest.IDigests): ClientDownloadRequest.Digests;

        /**
         * Encodes the specified Digests message. Does not implicitly {@link ClientDownloadRequest.Digests.verify|verify} messages.
         * @param message Digests message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadRequest.IDigests, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Digests message, length delimited. Does not implicitly {@link ClientDownloadRequest.Digests.verify|verify} messages.
         * @param message Digests message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadRequest.IDigests, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Digests message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Digests
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.Digests;

        /**
         * Decodes a Digests message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Digests
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.Digests;

        /**
         * Verifies a Digests message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Digests message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Digests
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.Digests;

        /**
         * Creates a plain object from a Digests message. Also converts values to other types if specified.
         * @param message Digests
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadRequest.Digests, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Digests to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Resource. */
    interface IResource {

        /** Resource url */
        url?: (string|null);

        /** Resource type */
        type?: (number|null);

        /** Resource remoteIp */
        remoteIp?: (Uint8Array|null);

        /** Resource referrer */
        referrer?: (string|null);
    }

    /** Represents a Resource. */
    class Resource implements IResource {

        /**
         * Constructs a new Resource.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadRequest.IResource);

        /** Resource url. */
        public url: string;

        /** Resource type. */
        public type: number;

        /** Resource remoteIp. */
        public remoteIp: Uint8Array;

        /** Resource referrer. */
        public referrer: string;

        /**
         * Creates a new Resource instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Resource instance
         */
        public static create(properties?: ClientDownloadRequest.IResource): ClientDownloadRequest.Resource;

        /**
         * Encodes the specified Resource message. Does not implicitly {@link ClientDownloadRequest.Resource.verify|verify} messages.
         * @param message Resource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadRequest.IResource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Resource message, length delimited. Does not implicitly {@link ClientDownloadRequest.Resource.verify|verify} messages.
         * @param message Resource message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadRequest.IResource, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Resource message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Resource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.Resource;

        /**
         * Decodes a Resource message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Resource
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.Resource;

        /**
         * Verifies a Resource message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Resource message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Resource
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.Resource;

        /**
         * Creates a plain object from a Resource message. Also converts values to other types if specified.
         * @param message Resource
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadRequest.Resource, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Resource to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SignatureInfo. */
    interface ISignatureInfo {

        /** SignatureInfo certificateChain */
        certificateChain?: (ClientDownloadRequest.ICertificateChain[]|null);

        /** SignatureInfo trusted */
        trusted?: (boolean|null);
    }

    /** Represents a SignatureInfo. */
    class SignatureInfo implements ISignatureInfo {

        /**
         * Constructs a new SignatureInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadRequest.ISignatureInfo);

        /** SignatureInfo certificateChain. */
        public certificateChain: ClientDownloadRequest.ICertificateChain[];

        /** SignatureInfo trusted. */
        public trusted: boolean;

        /**
         * Creates a new SignatureInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SignatureInfo instance
         */
        public static create(properties?: ClientDownloadRequest.ISignatureInfo): ClientDownloadRequest.SignatureInfo;

        /**
         * Encodes the specified SignatureInfo message. Does not implicitly {@link ClientDownloadRequest.SignatureInfo.verify|verify} messages.
         * @param message SignatureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadRequest.ISignatureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SignatureInfo message, length delimited. Does not implicitly {@link ClientDownloadRequest.SignatureInfo.verify|verify} messages.
         * @param message SignatureInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadRequest.ISignatureInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SignatureInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SignatureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadRequest.SignatureInfo;

        /**
         * Decodes a SignatureInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SignatureInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadRequest.SignatureInfo;

        /**
         * Verifies a SignatureInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SignatureInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SignatureInfo
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadRequest.SignatureInfo;

        /**
         * Creates a plain object from a SignatureInfo message. Also converts values to other types if specified.
         * @param message SignatureInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadRequest.SignatureInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SignatureInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a ClientDownloadResponse. */
export interface IClientDownloadResponse {

    /** ClientDownloadResponse verdict */
    verdict?: (number|null);

    /** ClientDownloadResponse moreInfo */
    moreInfo?: (ClientDownloadResponse.IMoreInfo|null);

    /** ClientDownloadResponse token */
    token?: (Uint8Array|null);
}

/** Represents a ClientDownloadResponse. */
export class ClientDownloadResponse implements IClientDownloadResponse {

    /**
     * Constructs a new ClientDownloadResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IClientDownloadResponse);

    /** ClientDownloadResponse verdict. */
    public verdict: number;

    /** ClientDownloadResponse moreInfo. */
    public moreInfo?: (ClientDownloadResponse.IMoreInfo|null);

    /** ClientDownloadResponse token. */
    public token: Uint8Array;

    /**
     * Creates a new ClientDownloadResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ClientDownloadResponse instance
     */
    public static create(properties?: IClientDownloadResponse): ClientDownloadResponse;

    /**
     * Encodes the specified ClientDownloadResponse message. Does not implicitly {@link ClientDownloadResponse.verify|verify} messages.
     * @param message ClientDownloadResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IClientDownloadResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ClientDownloadResponse message, length delimited. Does not implicitly {@link ClientDownloadResponse.verify|verify} messages.
     * @param message ClientDownloadResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IClientDownloadResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ClientDownloadResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ClientDownloadResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadResponse;

    /**
     * Decodes a ClientDownloadResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ClientDownloadResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadResponse;

    /**
     * Verifies a ClientDownloadResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ClientDownloadResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ClientDownloadResponse
     */
    public static fromObject(object: { [k: string]: any }): ClientDownloadResponse;

    /**
     * Creates a plain object from a ClientDownloadResponse message. Also converts values to other types if specified.
     * @param message ClientDownloadResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ClientDownloadResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ClientDownloadResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace ClientDownloadResponse {

    /** Properties of a MoreInfo. */
    interface IMoreInfo {

        /** MoreInfo description */
        description?: (string|null);

        /** MoreInfo url */
        url?: (string|null);
    }

    /** Represents a MoreInfo. */
    class MoreInfo implements IMoreInfo {

        /**
         * Constructs a new MoreInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: ClientDownloadResponse.IMoreInfo);

        /** MoreInfo description. */
        public description: string;

        /** MoreInfo url. */
        public url: string;

        /**
         * Creates a new MoreInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoreInfo instance
         */
        public static create(properties?: ClientDownloadResponse.IMoreInfo): ClientDownloadResponse.MoreInfo;

        /**
         * Encodes the specified MoreInfo message. Does not implicitly {@link ClientDownloadResponse.MoreInfo.verify|verify} messages.
         * @param message MoreInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ClientDownloadResponse.IMoreInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MoreInfo message, length delimited. Does not implicitly {@link ClientDownloadResponse.MoreInfo.verify|verify} messages.
         * @param message MoreInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ClientDownloadResponse.IMoreInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MoreInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoreInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadResponse.MoreInfo;

        /**
         * Decodes a MoreInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoreInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadResponse.MoreInfo;

        /**
         * Verifies a MoreInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MoreInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MoreInfo
         */
        public static fromObject(object: { [k: string]: any }): ClientDownloadResponse.MoreInfo;

        /**
         * Creates a plain object from a MoreInfo message. Also converts values to other types if specified.
         * @param message MoreInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ClientDownloadResponse.MoreInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MoreInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a ClientDownloadStatsRequest. */
export interface IClientDownloadStatsRequest {

    /** ClientDownloadStatsRequest userDecision */
    userDecision?: (number|null);

    /** ClientDownloadStatsRequest token */
    token?: (Uint8Array|null);
}

/** Represents a ClientDownloadStatsRequest. */
export class ClientDownloadStatsRequest implements IClientDownloadStatsRequest {

    /**
     * Constructs a new ClientDownloadStatsRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IClientDownloadStatsRequest);

    /** ClientDownloadStatsRequest userDecision. */
    public userDecision: number;

    /** ClientDownloadStatsRequest token. */
    public token: Uint8Array;

    /**
     * Creates a new ClientDownloadStatsRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ClientDownloadStatsRequest instance
     */
    public static create(properties?: IClientDownloadStatsRequest): ClientDownloadStatsRequest;

    /**
     * Encodes the specified ClientDownloadStatsRequest message. Does not implicitly {@link ClientDownloadStatsRequest.verify|verify} messages.
     * @param message ClientDownloadStatsRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IClientDownloadStatsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ClientDownloadStatsRequest message, length delimited. Does not implicitly {@link ClientDownloadStatsRequest.verify|verify} messages.
     * @param message ClientDownloadStatsRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IClientDownloadStatsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ClientDownloadStatsRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ClientDownloadStatsRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientDownloadStatsRequest;

    /**
     * Decodes a ClientDownloadStatsRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ClientDownloadStatsRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientDownloadStatsRequest;

    /**
     * Verifies a ClientDownloadStatsRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ClientDownloadStatsRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ClientDownloadStatsRequest
     */
    public static fromObject(object: { [k: string]: any }): ClientDownloadStatsRequest;

    /**
     * Creates a plain object from a ClientDownloadStatsRequest message. Also converts values to other types if specified.
     * @param message ClientDownloadStatsRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ClientDownloadStatsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ClientDownloadStatsRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DebugInfo. */
export interface IDebugInfo {

    /** DebugInfo message */
    message?: (string[]|null);

    /** DebugInfo timing */
    timing?: (DebugInfo.ITiming[]|null);
}

/** Represents a DebugInfo. */
export class DebugInfo implements IDebugInfo {

    /**
     * Constructs a new DebugInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDebugInfo);

    /** DebugInfo message. */
    public message: string[];

    /** DebugInfo timing. */
    public timing: DebugInfo.ITiming[];

    /**
     * Creates a new DebugInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DebugInfo instance
     */
    public static create(properties?: IDebugInfo): DebugInfo;

    /**
     * Encodes the specified DebugInfo message. Does not implicitly {@link DebugInfo.verify|verify} messages.
     * @param message DebugInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDebugInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DebugInfo message, length delimited. Does not implicitly {@link DebugInfo.verify|verify} messages.
     * @param message DebugInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDebugInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DebugInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DebugInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DebugInfo;

    /**
     * Decodes a DebugInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DebugInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DebugInfo;

    /**
     * Verifies a DebugInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DebugInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DebugInfo
     */
    public static fromObject(object: { [k: string]: any }): DebugInfo;

    /**
     * Creates a plain object from a DebugInfo message. Also converts values to other types if specified.
     * @param message DebugInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DebugInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DebugInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace DebugInfo {

    /** Properties of a Timing. */
    interface ITiming {

        /** Timing name */
        name?: (string|null);

        /** Timing timeInMs */
        timeInMs?: (number|null);
    }

    /** Represents a Timing. */
    class Timing implements ITiming {

        /**
         * Constructs a new Timing.
         * @param [properties] Properties to set
         */
        constructor(properties?: DebugInfo.ITiming);

        /** Timing name. */
        public name: string;

        /** Timing timeInMs. */
        public timeInMs: number;

        /**
         * Creates a new Timing instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Timing instance
         */
        public static create(properties?: DebugInfo.ITiming): DebugInfo.Timing;

        /**
         * Encodes the specified Timing message. Does not implicitly {@link DebugInfo.Timing.verify|verify} messages.
         * @param message Timing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: DebugInfo.ITiming, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Timing message, length delimited. Does not implicitly {@link DebugInfo.Timing.verify|verify} messages.
         * @param message Timing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: DebugInfo.ITiming, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Timing message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Timing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DebugInfo.Timing;

        /**
         * Decodes a Timing message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Timing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DebugInfo.Timing;

        /**
         * Verifies a Timing message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Timing message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Timing
         */
        public static fromObject(object: { [k: string]: any }): DebugInfo.Timing;

        /**
         * Creates a plain object from a Timing message. Also converts values to other types if specified.
         * @param message Timing
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: DebugInfo.Timing, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Timing to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a DebugSettingsResponse. */
export interface IDebugSettingsResponse {

    /** DebugSettingsResponse playCountryOverride */
    playCountryOverride?: (string|null);

    /** DebugSettingsResponse playCountryDebugInfo */
    playCountryDebugInfo?: (string|null);
}

/** Represents a DebugSettingsResponse. */
export class DebugSettingsResponse implements IDebugSettingsResponse {

    /**
     * Constructs a new DebugSettingsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDebugSettingsResponse);

    /** DebugSettingsResponse playCountryOverride. */
    public playCountryOverride: string;

    /** DebugSettingsResponse playCountryDebugInfo. */
    public playCountryDebugInfo: string;

    /**
     * Creates a new DebugSettingsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DebugSettingsResponse instance
     */
    public static create(properties?: IDebugSettingsResponse): DebugSettingsResponse;

    /**
     * Encodes the specified DebugSettingsResponse message. Does not implicitly {@link DebugSettingsResponse.verify|verify} messages.
     * @param message DebugSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDebugSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DebugSettingsResponse message, length delimited. Does not implicitly {@link DebugSettingsResponse.verify|verify} messages.
     * @param message DebugSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDebugSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DebugSettingsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DebugSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DebugSettingsResponse;

    /**
     * Decodes a DebugSettingsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DebugSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DebugSettingsResponse;

    /**
     * Verifies a DebugSettingsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DebugSettingsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DebugSettingsResponse
     */
    public static fromObject(object: { [k: string]: any }): DebugSettingsResponse;

    /**
     * Creates a plain object from a DebugSettingsResponse message. Also converts values to other types if specified.
     * @param message DebugSettingsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DebugSettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DebugSettingsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DeliveryResponse. */
export interface IDeliveryResponse {

    /** DeliveryResponse status */
    status?: (number|null);

    /** DeliveryResponse appDeliveryData */
    appDeliveryData?: (IAndroidAppDeliveryData|null);
}

/** Represents a DeliveryResponse. */
export class DeliveryResponse implements IDeliveryResponse {

    /**
     * Constructs a new DeliveryResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDeliveryResponse);

    /** DeliveryResponse status. */
    public status: number;

    /** DeliveryResponse appDeliveryData. */
    public appDeliveryData?: (IAndroidAppDeliveryData|null);

    /**
     * Creates a new DeliveryResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DeliveryResponse instance
     */
    public static create(properties?: IDeliveryResponse): DeliveryResponse;

    /**
     * Encodes the specified DeliveryResponse message. Does not implicitly {@link DeliveryResponse.verify|verify} messages.
     * @param message DeliveryResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDeliveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DeliveryResponse message, length delimited. Does not implicitly {@link DeliveryResponse.verify|verify} messages.
     * @param message DeliveryResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDeliveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DeliveryResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DeliveryResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DeliveryResponse;

    /**
     * Decodes a DeliveryResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DeliveryResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DeliveryResponse;

    /**
     * Verifies a DeliveryResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DeliveryResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DeliveryResponse
     */
    public static fromObject(object: { [k: string]: any }): DeliveryResponse;

    /**
     * Creates a plain object from a DeliveryResponse message. Also converts values to other types if specified.
     * @param message DeliveryResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DeliveryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DeliveryResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BulkDetailsEntry. */
export interface IBulkDetailsEntry {

    /** BulkDetailsEntry item */
    item?: (IItem|null);
}

/** Represents a BulkDetailsEntry. */
export class BulkDetailsEntry implements IBulkDetailsEntry {

    /**
     * Constructs a new BulkDetailsEntry.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBulkDetailsEntry);

    /** BulkDetailsEntry item. */
    public item?: (IItem|null);

    /**
     * Creates a new BulkDetailsEntry instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BulkDetailsEntry instance
     */
    public static create(properties?: IBulkDetailsEntry): BulkDetailsEntry;

    /**
     * Encodes the specified BulkDetailsEntry message. Does not implicitly {@link BulkDetailsEntry.verify|verify} messages.
     * @param message BulkDetailsEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBulkDetailsEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BulkDetailsEntry message, length delimited. Does not implicitly {@link BulkDetailsEntry.verify|verify} messages.
     * @param message BulkDetailsEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBulkDetailsEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BulkDetailsEntry message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BulkDetailsEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BulkDetailsEntry;

    /**
     * Decodes a BulkDetailsEntry message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BulkDetailsEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BulkDetailsEntry;

    /**
     * Verifies a BulkDetailsEntry message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BulkDetailsEntry message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BulkDetailsEntry
     */
    public static fromObject(object: { [k: string]: any }): BulkDetailsEntry;

    /**
     * Creates a plain object from a BulkDetailsEntry message. Also converts values to other types if specified.
     * @param message BulkDetailsEntry
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BulkDetailsEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BulkDetailsEntry to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BulkDetailsRequest. */
export interface IBulkDetailsRequest {

    /** BulkDetailsRequest DocId */
    DocId?: (string[]|null);

    /** BulkDetailsRequest includeChildDocs */
    includeChildDocs?: (boolean|null);

    /** BulkDetailsRequest includeDetails */
    includeDetails?: (boolean|null);

    /** BulkDetailsRequest sourcePackageName */
    sourcePackageName?: (string|null);

    /** BulkDetailsRequest installedVersionCode */
    installedVersionCode?: (number[]|null);
}

/** Represents a BulkDetailsRequest. */
export class BulkDetailsRequest implements IBulkDetailsRequest {

    /**
     * Constructs a new BulkDetailsRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBulkDetailsRequest);

    /** BulkDetailsRequest DocId. */
    public DocId: string[];

    /** BulkDetailsRequest includeChildDocs. */
    public includeChildDocs: boolean;

    /** BulkDetailsRequest includeDetails. */
    public includeDetails: boolean;

    /** BulkDetailsRequest sourcePackageName. */
    public sourcePackageName: string;

    /** BulkDetailsRequest installedVersionCode. */
    public installedVersionCode: number[];

    /**
     * Creates a new BulkDetailsRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BulkDetailsRequest instance
     */
    public static create(properties?: IBulkDetailsRequest): BulkDetailsRequest;

    /**
     * Encodes the specified BulkDetailsRequest message. Does not implicitly {@link BulkDetailsRequest.verify|verify} messages.
     * @param message BulkDetailsRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBulkDetailsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BulkDetailsRequest message, length delimited. Does not implicitly {@link BulkDetailsRequest.verify|verify} messages.
     * @param message BulkDetailsRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBulkDetailsRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BulkDetailsRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BulkDetailsRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BulkDetailsRequest;

    /**
     * Decodes a BulkDetailsRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BulkDetailsRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BulkDetailsRequest;

    /**
     * Verifies a BulkDetailsRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BulkDetailsRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BulkDetailsRequest
     */
    public static fromObject(object: { [k: string]: any }): BulkDetailsRequest;

    /**
     * Creates a plain object from a BulkDetailsRequest message. Also converts values to other types if specified.
     * @param message BulkDetailsRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BulkDetailsRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BulkDetailsRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BulkDetailsResponse. */
export interface IBulkDetailsResponse {

    /** BulkDetailsResponse entry */
    entry?: (IBulkDetailsEntry[]|null);
}

/** Represents a BulkDetailsResponse. */
export class BulkDetailsResponse implements IBulkDetailsResponse {

    /**
     * Constructs a new BulkDetailsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBulkDetailsResponse);

    /** BulkDetailsResponse entry. */
    public entry: IBulkDetailsEntry[];

    /**
     * Creates a new BulkDetailsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BulkDetailsResponse instance
     */
    public static create(properties?: IBulkDetailsResponse): BulkDetailsResponse;

    /**
     * Encodes the specified BulkDetailsResponse message. Does not implicitly {@link BulkDetailsResponse.verify|verify} messages.
     * @param message BulkDetailsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBulkDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BulkDetailsResponse message, length delimited. Does not implicitly {@link BulkDetailsResponse.verify|verify} messages.
     * @param message BulkDetailsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBulkDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BulkDetailsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BulkDetailsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BulkDetailsResponse;

    /**
     * Decodes a BulkDetailsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BulkDetailsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BulkDetailsResponse;

    /**
     * Verifies a BulkDetailsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BulkDetailsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BulkDetailsResponse
     */
    public static fromObject(object: { [k: string]: any }): BulkDetailsResponse;

    /**
     * Creates a plain object from a BulkDetailsResponse message. Also converts values to other types if specified.
     * @param message BulkDetailsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BulkDetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BulkDetailsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DetailsResponse. */
export interface IDetailsResponse {

    /** DetailsResponse analyticsCookie */
    analyticsCookie?: (string|null);

    /** DetailsResponse userReview */
    userReview?: (IReview|null);

    /** DetailsResponse item */
    item?: (IItem|null);

    /** DetailsResponse footerHtml */
    footerHtml?: (string|null);

    /** DetailsResponse serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** DetailsResponse discoveryBadge */
    discoveryBadge?: (IDiscoveryBadge[]|null);

    /** DetailsResponse enableReviews */
    enableReviews?: (boolean|null);

    /** DetailsResponse features */
    features?: (IFeatures|null);

    /** DetailsResponse detailsStreamUrl */
    detailsStreamUrl?: (string|null);

    /** DetailsResponse userReviewUrl */
    userReviewUrl?: (string|null);

    /** DetailsResponse postAcquireDetailsStreamUrl */
    postAcquireDetailsStreamUrl?: (string|null);
}

/** Represents a DetailsResponse. */
export class DetailsResponse implements IDetailsResponse {

    /**
     * Constructs a new DetailsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDetailsResponse);

    /** DetailsResponse analyticsCookie. */
    public analyticsCookie: string;

    /** DetailsResponse userReview. */
    public userReview?: (IReview|null);

    /** DetailsResponse item. */
    public item?: (IItem|null);

    /** DetailsResponse footerHtml. */
    public footerHtml: string;

    /** DetailsResponse serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** DetailsResponse discoveryBadge. */
    public discoveryBadge: IDiscoveryBadge[];

    /** DetailsResponse enableReviews. */
    public enableReviews: boolean;

    /** DetailsResponse features. */
    public features?: (IFeatures|null);

    /** DetailsResponse detailsStreamUrl. */
    public detailsStreamUrl: string;

    /** DetailsResponse userReviewUrl. */
    public userReviewUrl: string;

    /** DetailsResponse postAcquireDetailsStreamUrl. */
    public postAcquireDetailsStreamUrl: string;

    /**
     * Creates a new DetailsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DetailsResponse instance
     */
    public static create(properties?: IDetailsResponse): DetailsResponse;

    /**
     * Encodes the specified DetailsResponse message. Does not implicitly {@link DetailsResponse.verify|verify} messages.
     * @param message DetailsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DetailsResponse message, length delimited. Does not implicitly {@link DetailsResponse.verify|verify} messages.
     * @param message DetailsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDetailsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DetailsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DetailsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DetailsResponse;

    /**
     * Decodes a DetailsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DetailsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DetailsResponse;

    /**
     * Verifies a DetailsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DetailsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DetailsResponse
     */
    public static fromObject(object: { [k: string]: any }): DetailsResponse;

    /**
     * Creates a plain object from a DetailsResponse message. Also converts values to other types if specified.
     * @param message DetailsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DetailsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DetailsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DiscoveryBadge. */
export interface IDiscoveryBadge {

    /** DiscoveryBadge label */
    label?: (string|null);

    /** DiscoveryBadge image */
    image?: (IImage|null);

    /** DiscoveryBadge backgroundColor */
    backgroundColor?: (number|null);

    /** DiscoveryBadge badgeContainer1 */
    badgeContainer1?: (IDiscoveryBadgeLink|null);

    /** DiscoveryBadge serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** DiscoveryBadge isPlusOne */
    isPlusOne?: (boolean|null);

    /** DiscoveryBadge aggregateRating */
    aggregateRating?: (number|null);

    /** DiscoveryBadge userStarRating */
    userStarRating?: (number|null);

    /** DiscoveryBadge downloadCount */
    downloadCount?: (string|null);

    /** DiscoveryBadge downloadUnits */
    downloadUnits?: (string|null);

    /** DiscoveryBadge contentDescription */
    contentDescription?: (string|null);

    /** DiscoveryBadge playerBadge */
    playerBadge?: (IPlayerBadge|null);

    /** DiscoveryBadge familyAgeRangeBadge */
    familyAgeRangeBadge?: (Uint8Array|null);

    /** DiscoveryBadge familyCategoryBadge */
    familyCategoryBadge?: (Uint8Array|null);
}

/** Represents a DiscoveryBadge. */
export class DiscoveryBadge implements IDiscoveryBadge {

    /**
     * Constructs a new DiscoveryBadge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDiscoveryBadge);

    /** DiscoveryBadge label. */
    public label: string;

    /** DiscoveryBadge image. */
    public image?: (IImage|null);

    /** DiscoveryBadge backgroundColor. */
    public backgroundColor: number;

    /** DiscoveryBadge badgeContainer1. */
    public badgeContainer1?: (IDiscoveryBadgeLink|null);

    /** DiscoveryBadge serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** DiscoveryBadge isPlusOne. */
    public isPlusOne: boolean;

    /** DiscoveryBadge aggregateRating. */
    public aggregateRating: number;

    /** DiscoveryBadge userStarRating. */
    public userStarRating: number;

    /** DiscoveryBadge downloadCount. */
    public downloadCount: string;

    /** DiscoveryBadge downloadUnits. */
    public downloadUnits: string;

    /** DiscoveryBadge contentDescription. */
    public contentDescription: string;

    /** DiscoveryBadge playerBadge. */
    public playerBadge?: (IPlayerBadge|null);

    /** DiscoveryBadge familyAgeRangeBadge. */
    public familyAgeRangeBadge: Uint8Array;

    /** DiscoveryBadge familyCategoryBadge. */
    public familyCategoryBadge: Uint8Array;

    /**
     * Creates a new DiscoveryBadge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DiscoveryBadge instance
     */
    public static create(properties?: IDiscoveryBadge): DiscoveryBadge;

    /**
     * Encodes the specified DiscoveryBadge message. Does not implicitly {@link DiscoveryBadge.verify|verify} messages.
     * @param message DiscoveryBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDiscoveryBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DiscoveryBadge message, length delimited. Does not implicitly {@link DiscoveryBadge.verify|verify} messages.
     * @param message DiscoveryBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDiscoveryBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DiscoveryBadge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DiscoveryBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DiscoveryBadge;

    /**
     * Decodes a DiscoveryBadge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DiscoveryBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DiscoveryBadge;

    /**
     * Verifies a DiscoveryBadge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DiscoveryBadge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DiscoveryBadge
     */
    public static fromObject(object: { [k: string]: any }): DiscoveryBadge;

    /**
     * Creates a plain object from a DiscoveryBadge message. Also converts values to other types if specified.
     * @param message DiscoveryBadge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DiscoveryBadge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DiscoveryBadge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlayerBadge. */
export interface IPlayerBadge {

    /** PlayerBadge overlayIcon */
    overlayIcon?: (IImage|null);
}

/** Represents a PlayerBadge. */
export class PlayerBadge implements IPlayerBadge {

    /**
     * Constructs a new PlayerBadge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlayerBadge);

    /** PlayerBadge overlayIcon. */
    public overlayIcon?: (IImage|null);

    /**
     * Creates a new PlayerBadge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlayerBadge instance
     */
    public static create(properties?: IPlayerBadge): PlayerBadge;

    /**
     * Encodes the specified PlayerBadge message. Does not implicitly {@link PlayerBadge.verify|verify} messages.
     * @param message PlayerBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlayerBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlayerBadge message, length delimited. Does not implicitly {@link PlayerBadge.verify|verify} messages.
     * @param message PlayerBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlayerBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlayerBadge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlayerBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlayerBadge;

    /**
     * Decodes a PlayerBadge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlayerBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlayerBadge;

    /**
     * Verifies a PlayerBadge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlayerBadge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlayerBadge
     */
    public static fromObject(object: { [k: string]: any }): PlayerBadge;

    /**
     * Creates a plain object from a PlayerBadge message. Also converts values to other types if specified.
     * @param message PlayerBadge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlayerBadge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlayerBadge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DiscoveryBadgeLink. */
export interface IDiscoveryBadgeLink {

    /** DiscoveryBadgeLink link */
    link?: (ILink|null);

    /** DiscoveryBadgeLink userReviewsUrl */
    userReviewsUrl?: (string|null);

    /** DiscoveryBadgeLink criticReviewsUrl */
    criticReviewsUrl?: (string|null);
}

/** Represents a DiscoveryBadgeLink. */
export class DiscoveryBadgeLink implements IDiscoveryBadgeLink {

    /**
     * Constructs a new DiscoveryBadgeLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDiscoveryBadgeLink);

    /** DiscoveryBadgeLink link. */
    public link?: (ILink|null);

    /** DiscoveryBadgeLink userReviewsUrl. */
    public userReviewsUrl: string;

    /** DiscoveryBadgeLink criticReviewsUrl. */
    public criticReviewsUrl: string;

    /**
     * Creates a new DiscoveryBadgeLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DiscoveryBadgeLink instance
     */
    public static create(properties?: IDiscoveryBadgeLink): DiscoveryBadgeLink;

    /**
     * Encodes the specified DiscoveryBadgeLink message. Does not implicitly {@link DiscoveryBadgeLink.verify|verify} messages.
     * @param message DiscoveryBadgeLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDiscoveryBadgeLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DiscoveryBadgeLink message, length delimited. Does not implicitly {@link DiscoveryBadgeLink.verify|verify} messages.
     * @param message DiscoveryBadgeLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDiscoveryBadgeLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DiscoveryBadgeLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DiscoveryBadgeLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DiscoveryBadgeLink;

    /**
     * Decodes a DiscoveryBadgeLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DiscoveryBadgeLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DiscoveryBadgeLink;

    /**
     * Verifies a DiscoveryBadgeLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DiscoveryBadgeLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DiscoveryBadgeLink
     */
    public static fromObject(object: { [k: string]: any }): DiscoveryBadgeLink;

    /**
     * Creates a plain object from a DiscoveryBadgeLink message. Also converts values to other types if specified.
     * @param message DiscoveryBadgeLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DiscoveryBadgeLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DiscoveryBadgeLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Features. */
export interface IFeatures {

    /** Features featurePresence */
    featurePresence?: (IFeature[]|null);

    /** Features featureRating */
    featureRating?: (IFeature[]|null);
}

/** Represents a Features. */
export class Features implements IFeatures {

    /**
     * Constructs a new Features.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFeatures);

    /** Features featurePresence. */
    public featurePresence: IFeature[];

    /** Features featureRating. */
    public featureRating: IFeature[];

    /**
     * Creates a new Features instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Features instance
     */
    public static create(properties?: IFeatures): Features;

    /**
     * Encodes the specified Features message. Does not implicitly {@link Features.verify|verify} messages.
     * @param message Features message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Features message, length delimited. Does not implicitly {@link Features.verify|verify} messages.
     * @param message Features message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Features message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Features
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Features;

    /**
     * Decodes a Features message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Features
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Features;

    /**
     * Verifies a Features message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Features message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Features
     */
    public static fromObject(object: { [k: string]: any }): Features;

    /**
     * Creates a plain object from a Features message. Also converts values to other types if specified.
     * @param message Features
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Features, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Features to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Feature. */
export interface IFeature {

    /** Feature label */
    label?: (string|null);

    /** Feature value */
    value?: (string|null);
}

/** Represents a Feature. */
export class Feature implements IFeature {

    /**
     * Constructs a new Feature.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFeature);

    /** Feature label. */
    public label: string;

    /** Feature value. */
    public value: string;

    /**
     * Creates a new Feature instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Feature instance
     */
    public static create(properties?: IFeature): Feature;

    /**
     * Encodes the specified Feature message. Does not implicitly {@link Feature.verify|verify} messages.
     * @param message Feature message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFeature, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Feature message, length delimited. Does not implicitly {@link Feature.verify|verify} messages.
     * @param message Feature message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFeature, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Feature message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Feature
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Feature;

    /**
     * Decodes a Feature message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Feature
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Feature;

    /**
     * Verifies a Feature message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Feature message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Feature
     */
    public static fromObject(object: { [k: string]: any }): Feature;

    /**
     * Creates a plain object from a Feature message. Also converts values to other types if specified.
     * @param message Feature
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Feature, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Feature to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DeviceConfigurationProto. */
export interface IDeviceConfigurationProto {

    /** DeviceConfigurationProto touchScreen */
    touchScreen?: (number|null);

    /** DeviceConfigurationProto keyboard */
    keyboard?: (number|null);

    /** DeviceConfigurationProto navigation */
    navigation?: (number|null);

    /** DeviceConfigurationProto screenLayout */
    screenLayout?: (number|null);

    /** DeviceConfigurationProto hasHardKeyboard */
    hasHardKeyboard?: (boolean|null);

    /** DeviceConfigurationProto hasFiveWayNavigation */
    hasFiveWayNavigation?: (boolean|null);

    /** DeviceConfigurationProto screenDensity */
    screenDensity?: (number|null);

    /** DeviceConfigurationProto glEsVersion */
    glEsVersion?: (number|null);

    /** DeviceConfigurationProto systemSharedLibrary */
    systemSharedLibrary?: (string[]|null);

    /** DeviceConfigurationProto systemAvailableFeature */
    systemAvailableFeature?: (string[]|null);

    /** DeviceConfigurationProto nativePlatform */
    nativePlatform?: (string[]|null);

    /** DeviceConfigurationProto screenWidth */
    screenWidth?: (number|null);

    /** DeviceConfigurationProto screenHeight */
    screenHeight?: (number|null);

    /** DeviceConfigurationProto systemSupportedLocale */
    systemSupportedLocale?: (string[]|null);

    /** DeviceConfigurationProto glExtension */
    glExtension?: (string[]|null);

    /** DeviceConfigurationProto deviceClass */
    deviceClass?: (number|null);

    /** DeviceConfigurationProto maxApkDownloadSizeMb */
    maxApkDownloadSizeMb?: (number|null);

    /** DeviceConfigurationProto smallestScreenWidthDP */
    smallestScreenWidthDP?: (number|null);

    /** DeviceConfigurationProto lowRamDevice */
    lowRamDevice?: (number|null);

    /** DeviceConfigurationProto totalMemoryBytes */
    totalMemoryBytes?: (number|Long|null);

    /** DeviceConfigurationProto maxNumOf_CPUCores */
    maxNumOf_CPUCores?: (number|null);

    /** DeviceConfigurationProto deviceFeature */
    deviceFeature?: (IDeviceFeature[]|null);

    /** DeviceConfigurationProto unknown28 */
    unknown28?: (number|null);

    /** DeviceConfigurationProto unknown30 */
    unknown30?: (number|null);
}

/** Represents a DeviceConfigurationProto. */
export class DeviceConfigurationProto implements IDeviceConfigurationProto {

    /**
     * Constructs a new DeviceConfigurationProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDeviceConfigurationProto);

    /** DeviceConfigurationProto touchScreen. */
    public touchScreen: number;

    /** DeviceConfigurationProto keyboard. */
    public keyboard: number;

    /** DeviceConfigurationProto navigation. */
    public navigation: number;

    /** DeviceConfigurationProto screenLayout. */
    public screenLayout: number;

    /** DeviceConfigurationProto hasHardKeyboard. */
    public hasHardKeyboard: boolean;

    /** DeviceConfigurationProto hasFiveWayNavigation. */
    public hasFiveWayNavigation: boolean;

    /** DeviceConfigurationProto screenDensity. */
    public screenDensity: number;

    /** DeviceConfigurationProto glEsVersion. */
    public glEsVersion: number;

    /** DeviceConfigurationProto systemSharedLibrary. */
    public systemSharedLibrary: string[];

    /** DeviceConfigurationProto systemAvailableFeature. */
    public systemAvailableFeature: string[];

    /** DeviceConfigurationProto nativePlatform. */
    public nativePlatform: string[];

    /** DeviceConfigurationProto screenWidth. */
    public screenWidth: number;

    /** DeviceConfigurationProto screenHeight. */
    public screenHeight: number;

    /** DeviceConfigurationProto systemSupportedLocale. */
    public systemSupportedLocale: string[];

    /** DeviceConfigurationProto glExtension. */
    public glExtension: string[];

    /** DeviceConfigurationProto deviceClass. */
    public deviceClass: number;

    /** DeviceConfigurationProto maxApkDownloadSizeMb. */
    public maxApkDownloadSizeMb: number;

    /** DeviceConfigurationProto smallestScreenWidthDP. */
    public smallestScreenWidthDP: number;

    /** DeviceConfigurationProto lowRamDevice. */
    public lowRamDevice: number;

    /** DeviceConfigurationProto totalMemoryBytes. */
    public totalMemoryBytes: (number|Long);

    /** DeviceConfigurationProto maxNumOf_CPUCores. */
    public maxNumOf_CPUCores: number;

    /** DeviceConfigurationProto deviceFeature. */
    public deviceFeature: IDeviceFeature[];

    /** DeviceConfigurationProto unknown28. */
    public unknown28: number;

    /** DeviceConfigurationProto unknown30. */
    public unknown30: number;

    /**
     * Creates a new DeviceConfigurationProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DeviceConfigurationProto instance
     */
    public static create(properties?: IDeviceConfigurationProto): DeviceConfigurationProto;

    /**
     * Encodes the specified DeviceConfigurationProto message. Does not implicitly {@link DeviceConfigurationProto.verify|verify} messages.
     * @param message DeviceConfigurationProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDeviceConfigurationProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DeviceConfigurationProto message, length delimited. Does not implicitly {@link DeviceConfigurationProto.verify|verify} messages.
     * @param message DeviceConfigurationProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDeviceConfigurationProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DeviceConfigurationProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DeviceConfigurationProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DeviceConfigurationProto;

    /**
     * Decodes a DeviceConfigurationProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DeviceConfigurationProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DeviceConfigurationProto;

    /**
     * Verifies a DeviceConfigurationProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DeviceConfigurationProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DeviceConfigurationProto
     */
    public static fromObject(object: { [k: string]: any }): DeviceConfigurationProto;

    /**
     * Creates a plain object from a DeviceConfigurationProto message. Also converts values to other types if specified.
     * @param message DeviceConfigurationProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DeviceConfigurationProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DeviceConfigurationProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DeviceFeature. */
export interface IDeviceFeature {

    /** DeviceFeature name */
    name?: (string|null);

    /** DeviceFeature value */
    value?: (number|null);
}

/** Represents a DeviceFeature. */
export class DeviceFeature implements IDeviceFeature {

    /**
     * Constructs a new DeviceFeature.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDeviceFeature);

    /** DeviceFeature name. */
    public name: string;

    /** DeviceFeature value. */
    public value: number;

    /**
     * Creates a new DeviceFeature instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DeviceFeature instance
     */
    public static create(properties?: IDeviceFeature): DeviceFeature;

    /**
     * Encodes the specified DeviceFeature message. Does not implicitly {@link DeviceFeature.verify|verify} messages.
     * @param message DeviceFeature message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDeviceFeature, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DeviceFeature message, length delimited. Does not implicitly {@link DeviceFeature.verify|verify} messages.
     * @param message DeviceFeature message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDeviceFeature, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DeviceFeature message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DeviceFeature
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DeviceFeature;

    /**
     * Decodes a DeviceFeature message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DeviceFeature
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DeviceFeature;

    /**
     * Verifies a DeviceFeature message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DeviceFeature message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DeviceFeature
     */
    public static fromObject(object: { [k: string]: any }): DeviceFeature;

    /**
     * Creates a plain object from a DeviceFeature message. Also converts values to other types if specified.
     * @param message DeviceFeature
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DeviceFeature, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DeviceFeature to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Document. */
export interface IDocument {

    /** Document DocId */
    DocId?: (IDocId|null);

    /** Document fetchDocId */
    fetchDocId?: (IDocId|null);

    /** Document sampleDocId */
    sampleDocId?: (IDocId|null);

    /** Document title */
    title?: (string|null);

    /** Document url */
    url?: (string|null);

    /** Document snippet */
    snippet?: (string[]|null);

    /** Document priceDeprecated */
    priceDeprecated?: (IOffer|null);

    /** Document availability */
    availability?: (IAvailability|null);

    /** Document image */
    image?: (IImage[]|null);

    /** Document child */
    child?: (IDocument[]|null);

    /** Document aggregateRating */
    aggregateRating?: (IAggregateRating|null);

    /** Document offer */
    offer?: (IOffer[]|null);

    /** Document translatedSnippet */
    translatedSnippet?: (ITranslatedText[]|null);

    /** Document documentVariant */
    documentVariant?: (IDocumentVariant[]|null);

    /** Document categoryId */
    categoryId?: (string[]|null);

    /** Document decoration */
    decoration?: (IDocument[]|null);

    /** Document parent */
    parent?: (IDocument[]|null);

    /** Document privacyPolicyUrl */
    privacyPolicyUrl?: (string|null);

    /** Document consumptionUrl */
    consumptionUrl?: (string|null);

    /** Document estimatedNumChildren */
    estimatedNumChildren?: (number|null);

    /** Document subtitle */
    subtitle?: (string|null);
}

/** Represents a Document. */
export class Document implements IDocument {

    /**
     * Constructs a new Document.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDocument);

    /** Document DocId. */
    public DocId?: (IDocId|null);

    /** Document fetchDocId. */
    public fetchDocId?: (IDocId|null);

    /** Document sampleDocId. */
    public sampleDocId?: (IDocId|null);

    /** Document title. */
    public title: string;

    /** Document url. */
    public url: string;

    /** Document snippet. */
    public snippet: string[];

    /** Document priceDeprecated. */
    public priceDeprecated?: (IOffer|null);

    /** Document availability. */
    public availability?: (IAvailability|null);

    /** Document image. */
    public image: IImage[];

    /** Document child. */
    public child: IDocument[];

    /** Document aggregateRating. */
    public aggregateRating?: (IAggregateRating|null);

    /** Document offer. */
    public offer: IOffer[];

    /** Document translatedSnippet. */
    public translatedSnippet: ITranslatedText[];

    /** Document documentVariant. */
    public documentVariant: IDocumentVariant[];

    /** Document categoryId. */
    public categoryId: string[];

    /** Document decoration. */
    public decoration: IDocument[];

    /** Document parent. */
    public parent: IDocument[];

    /** Document privacyPolicyUrl. */
    public privacyPolicyUrl: string;

    /** Document consumptionUrl. */
    public consumptionUrl: string;

    /** Document estimatedNumChildren. */
    public estimatedNumChildren: number;

    /** Document subtitle. */
    public subtitle: string;

    /**
     * Creates a new Document instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Document instance
     */
    public static create(properties?: IDocument): Document;

    /**
     * Encodes the specified Document message. Does not implicitly {@link Document.verify|verify} messages.
     * @param message Document message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDocument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Document message, length delimited. Does not implicitly {@link Document.verify|verify} messages.
     * @param message Document message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDocument, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Document message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Document
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Document;

    /**
     * Decodes a Document message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Document
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Document;

    /**
     * Verifies a Document message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Document message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Document
     */
    public static fromObject(object: { [k: string]: any }): Document;

    /**
     * Creates a plain object from a Document message. Also converts values to other types if specified.
     * @param message Document
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Document, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Document to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DocumentVariant. */
export interface IDocumentVariant {

    /** DocumentVariant variationType */
    variationType?: (number|null);

    /** DocumentVariant rule */
    rule?: (IRule|null);

    /** DocumentVariant title */
    title?: (string|null);

    /** DocumentVariant snippet */
    snippet?: (string[]|null);

    /** DocumentVariant recentChanges */
    recentChanges?: (string|null);

    /** DocumentVariant autoTranslation */
    autoTranslation?: (ITranslatedText[]|null);

    /** DocumentVariant offer */
    offer?: (IOffer[]|null);

    /** DocumentVariant channelId */
    channelId?: (number|Long|null);

    /** DocumentVariant child */
    child?: (IDocument[]|null);

    /** DocumentVariant decoration */
    decoration?: (IDocument[]|null);

    /** DocumentVariant image */
    image?: (IImage[]|null);

    /** DocumentVariant categoryId */
    categoryId?: (string[]|null);

    /** DocumentVariant subtitle */
    subtitle?: (string|null);
}

/** Represents a DocumentVariant. */
export class DocumentVariant implements IDocumentVariant {

    /**
     * Constructs a new DocumentVariant.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDocumentVariant);

    /** DocumentVariant variationType. */
    public variationType: number;

    /** DocumentVariant rule. */
    public rule?: (IRule|null);

    /** DocumentVariant title. */
    public title: string;

    /** DocumentVariant snippet. */
    public snippet: string[];

    /** DocumentVariant recentChanges. */
    public recentChanges: string;

    /** DocumentVariant autoTranslation. */
    public autoTranslation: ITranslatedText[];

    /** DocumentVariant offer. */
    public offer: IOffer[];

    /** DocumentVariant channelId. */
    public channelId: (number|Long);

    /** DocumentVariant child. */
    public child: IDocument[];

    /** DocumentVariant decoration. */
    public decoration: IDocument[];

    /** DocumentVariant image. */
    public image: IImage[];

    /** DocumentVariant categoryId. */
    public categoryId: string[];

    /** DocumentVariant subtitle. */
    public subtitle: string;

    /**
     * Creates a new DocumentVariant instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DocumentVariant instance
     */
    public static create(properties?: IDocumentVariant): DocumentVariant;

    /**
     * Encodes the specified DocumentVariant message. Does not implicitly {@link DocumentVariant.verify|verify} messages.
     * @param message DocumentVariant message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDocumentVariant, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DocumentVariant message, length delimited. Does not implicitly {@link DocumentVariant.verify|verify} messages.
     * @param message DocumentVariant message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDocumentVariant, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DocumentVariant message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DocumentVariant
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DocumentVariant;

    /**
     * Decodes a DocumentVariant message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DocumentVariant
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DocumentVariant;

    /**
     * Verifies a DocumentVariant message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DocumentVariant message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DocumentVariant
     */
    public static fromObject(object: { [k: string]: any }): DocumentVariant;

    /**
     * Creates a plain object from a DocumentVariant message. Also converts values to other types if specified.
     * @param message DocumentVariant
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DocumentVariant, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DocumentVariant to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SectionImage. */
export interface ISectionImage {

    /** SectionImage imageContainer */
    imageContainer?: (IImageContainer[]|null);
}

/** Represents a SectionImage. */
export class SectionImage implements ISectionImage {

    /**
     * Constructs a new SectionImage.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISectionImage);

    /** SectionImage imageContainer. */
    public imageContainer: IImageContainer[];

    /**
     * Creates a new SectionImage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SectionImage instance
     */
    public static create(properties?: ISectionImage): SectionImage;

    /**
     * Encodes the specified SectionImage message. Does not implicitly {@link SectionImage.verify|verify} messages.
     * @param message SectionImage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISectionImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SectionImage message, length delimited. Does not implicitly {@link SectionImage.verify|verify} messages.
     * @param message SectionImage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISectionImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SectionImage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SectionImage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SectionImage;

    /**
     * Decodes a SectionImage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SectionImage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SectionImage;

    /**
     * Verifies a SectionImage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SectionImage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SectionImage
     */
    public static fromObject(object: { [k: string]: any }): SectionImage;

    /**
     * Creates a plain object from a SectionImage message. Also converts values to other types if specified.
     * @param message SectionImage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SectionImage, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SectionImage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an ImageContainer. */
export interface IImageContainer {

    /** ImageContainer image */
    image?: (IImage|null);
}

/** Represents an ImageContainer. */
export class ImageContainer implements IImageContainer {

    /**
     * Constructs a new ImageContainer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IImageContainer);

    /** ImageContainer image. */
    public image?: (IImage|null);

    /**
     * Creates a new ImageContainer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ImageContainer instance
     */
    public static create(properties?: IImageContainer): ImageContainer;

    /**
     * Encodes the specified ImageContainer message. Does not implicitly {@link ImageContainer.verify|verify} messages.
     * @param message ImageContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IImageContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ImageContainer message, length delimited. Does not implicitly {@link ImageContainer.verify|verify} messages.
     * @param message ImageContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IImageContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ImageContainer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ImageContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ImageContainer;

    /**
     * Decodes an ImageContainer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ImageContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ImageContainer;

    /**
     * Verifies an ImageContainer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ImageContainer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ImageContainer
     */
    public static fromObject(object: { [k: string]: any }): ImageContainer;

    /**
     * Creates a plain object from an ImageContainer message. Also converts values to other types if specified.
     * @param message ImageContainer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ImageContainer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ImageContainer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Image. */
export interface IImage {

    /** Image imageType */
    imageType?: (number|null);

    /** Image dimension */
    dimension?: (Image.IDimension|null);

    /** Image imageUrl */
    imageUrl?: (string|null);

    /** Image altTextLocalized */
    altTextLocalized?: (string|null);

    /** Image secureUrl */
    secureUrl?: (string|null);

    /** Image positionInSequence */
    positionInSequence?: (number|null);

    /** Image supportsFifeUrlOptions */
    supportsFifeUrlOptions?: (boolean|null);

    /** Image citation */
    citation?: (Image.ICitation|null);

    /** Image durationSeconds */
    durationSeconds?: (number|null);

    /** Image fillColorRGB */
    fillColorRGB?: (string|null);

    /** Image autogen */
    autogen?: (boolean|null);

    /** Image attribution */
    attribution?: (IAttribution|null);

    /** Image backgroundColorRgb */
    backgroundColorRgb?: (string|null);

    /** Image palette */
    palette?: (IImagePalette|null);

    /** Image deviceClass */
    deviceClass?: (number|null);

    /** Image supportsFifeMonogramOption */
    supportsFifeMonogramOption?: (boolean|null);

    /** Image imageUrlAlt */
    imageUrlAlt?: (string|null);
}

/** Represents an Image. */
export class Image implements IImage {

    /**
     * Constructs a new Image.
     * @param [properties] Properties to set
     */
    constructor(properties?: IImage);

    /** Image imageType. */
    public imageType: number;

    /** Image dimension. */
    public dimension?: (Image.IDimension|null);

    /** Image imageUrl. */
    public imageUrl: string;

    /** Image altTextLocalized. */
    public altTextLocalized: string;

    /** Image secureUrl. */
    public secureUrl: string;

    /** Image positionInSequence. */
    public positionInSequence: number;

    /** Image supportsFifeUrlOptions. */
    public supportsFifeUrlOptions: boolean;

    /** Image citation. */
    public citation?: (Image.ICitation|null);

    /** Image durationSeconds. */
    public durationSeconds: number;

    /** Image fillColorRGB. */
    public fillColorRGB: string;

    /** Image autogen. */
    public autogen: boolean;

    /** Image attribution. */
    public attribution?: (IAttribution|null);

    /** Image backgroundColorRgb. */
    public backgroundColorRgb: string;

    /** Image palette. */
    public palette?: (IImagePalette|null);

    /** Image deviceClass. */
    public deviceClass: number;

    /** Image supportsFifeMonogramOption. */
    public supportsFifeMonogramOption: boolean;

    /** Image imageUrlAlt. */
    public imageUrlAlt: string;

    /**
     * Creates a new Image instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Image instance
     */
    public static create(properties?: IImage): Image;

    /**
     * Encodes the specified Image message. Does not implicitly {@link Image.verify|verify} messages.
     * @param message Image message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Image message, length delimited. Does not implicitly {@link Image.verify|verify} messages.
     * @param message Image message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Image message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Image
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Image;

    /**
     * Decodes an Image message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Image
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Image;

    /**
     * Verifies an Image message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Image message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Image
     */
    public static fromObject(object: { [k: string]: any }): Image;

    /**
     * Creates a plain object from an Image message. Also converts values to other types if specified.
     * @param message Image
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Image, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Image to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace Image {

    /** Properties of a Dimension. */
    interface IDimension {

        /** Dimension width */
        width?: (number|null);

        /** Dimension height */
        height?: (number|null);

        /** Dimension aspectRatio */
        aspectRatio?: (number|null);
    }

    /** Represents a Dimension. */
    class Dimension implements IDimension {

        /**
         * Constructs a new Dimension.
         * @param [properties] Properties to set
         */
        constructor(properties?: Image.IDimension);

        /** Dimension width. */
        public width: number;

        /** Dimension height. */
        public height: number;

        /** Dimension aspectRatio. */
        public aspectRatio: number;

        /**
         * Creates a new Dimension instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Dimension instance
         */
        public static create(properties?: Image.IDimension): Image.Dimension;

        /**
         * Encodes the specified Dimension message. Does not implicitly {@link Image.Dimension.verify|verify} messages.
         * @param message Dimension message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Image.IDimension, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Dimension message, length delimited. Does not implicitly {@link Image.Dimension.verify|verify} messages.
         * @param message Dimension message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Image.IDimension, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Dimension message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Dimension
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Image.Dimension;

        /**
         * Decodes a Dimension message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Dimension
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Image.Dimension;

        /**
         * Verifies a Dimension message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Dimension message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Dimension
         */
        public static fromObject(object: { [k: string]: any }): Image.Dimension;

        /**
         * Creates a plain object from a Dimension message. Also converts values to other types if specified.
         * @param message Dimension
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Image.Dimension, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Dimension to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Citation. */
    interface ICitation {

        /** Citation titleLocalized */
        titleLocalized?: (string|null);

        /** Citation url */
        url?: (string|null);
    }

    /** Represents a Citation. */
    class Citation implements ICitation {

        /**
         * Constructs a new Citation.
         * @param [properties] Properties to set
         */
        constructor(properties?: Image.ICitation);

        /** Citation titleLocalized. */
        public titleLocalized: string;

        /** Citation url. */
        public url: string;

        /**
         * Creates a new Citation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Citation instance
         */
        public static create(properties?: Image.ICitation): Image.Citation;

        /**
         * Encodes the specified Citation message. Does not implicitly {@link Image.Citation.verify|verify} messages.
         * @param message Citation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Image.ICitation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Citation message, length delimited. Does not implicitly {@link Image.Citation.verify|verify} messages.
         * @param message Citation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Image.ICitation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Citation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Citation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Image.Citation;

        /**
         * Decodes a Citation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Citation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Image.Citation;

        /**
         * Verifies a Citation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Citation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Citation
         */
        public static fromObject(object: { [k: string]: any }): Image.Citation;

        /**
         * Creates a plain object from a Citation message. Also converts values to other types if specified.
         * @param message Citation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Image.Citation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Citation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of an Attribution. */
export interface IAttribution {

    /** Attribution sourceTitle */
    sourceTitle?: (string|null);

    /** Attribution sourceUrl */
    sourceUrl?: (string|null);

    /** Attribution licenseTitle */
    licenseTitle?: (string|null);

    /** Attribution licenseUrl */
    licenseUrl?: (string|null);
}

/** Represents an Attribution. */
export class Attribution implements IAttribution {

    /**
     * Constructs a new Attribution.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAttribution);

    /** Attribution sourceTitle. */
    public sourceTitle: string;

    /** Attribution sourceUrl. */
    public sourceUrl: string;

    /** Attribution licenseTitle. */
    public licenseTitle: string;

    /** Attribution licenseUrl. */
    public licenseUrl: string;

    /**
     * Creates a new Attribution instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Attribution instance
     */
    public static create(properties?: IAttribution): Attribution;

    /**
     * Encodes the specified Attribution message. Does not implicitly {@link Attribution.verify|verify} messages.
     * @param message Attribution message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAttribution, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Attribution message, length delimited. Does not implicitly {@link Attribution.verify|verify} messages.
     * @param message Attribution message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAttribution, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Attribution message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Attribution
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Attribution;

    /**
     * Decodes an Attribution message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Attribution
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Attribution;

    /**
     * Verifies an Attribution message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Attribution message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Attribution
     */
    public static fromObject(object: { [k: string]: any }): Attribution;

    /**
     * Creates a plain object from an Attribution message. Also converts values to other types if specified.
     * @param message Attribution
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Attribution, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Attribution to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an ImagePalette. */
export interface IImagePalette {

    /** ImagePalette lightVibrantRGB */
    lightVibrantRGB?: (string|null);

    /** ImagePalette vibrantRGB */
    vibrantRGB?: (string|null);

    /** ImagePalette darkVibrantRGB */
    darkVibrantRGB?: (string|null);

    /** ImagePalette lightMutedRGB */
    lightMutedRGB?: (string|null);

    /** ImagePalette mutedRGB */
    mutedRGB?: (string|null);

    /** ImagePalette darkMutedRGB */
    darkMutedRGB?: (string|null);
}

/** Represents an ImagePalette. */
export class ImagePalette implements IImagePalette {

    /**
     * Constructs a new ImagePalette.
     * @param [properties] Properties to set
     */
    constructor(properties?: IImagePalette);

    /** ImagePalette lightVibrantRGB. */
    public lightVibrantRGB: string;

    /** ImagePalette vibrantRGB. */
    public vibrantRGB: string;

    /** ImagePalette darkVibrantRGB. */
    public darkVibrantRGB: string;

    /** ImagePalette lightMutedRGB. */
    public lightMutedRGB: string;

    /** ImagePalette mutedRGB. */
    public mutedRGB: string;

    /** ImagePalette darkMutedRGB. */
    public darkMutedRGB: string;

    /**
     * Creates a new ImagePalette instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ImagePalette instance
     */
    public static create(properties?: IImagePalette): ImagePalette;

    /**
     * Encodes the specified ImagePalette message. Does not implicitly {@link ImagePalette.verify|verify} messages.
     * @param message ImagePalette message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IImagePalette, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ImagePalette message, length delimited. Does not implicitly {@link ImagePalette.verify|verify} messages.
     * @param message ImagePalette message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IImagePalette, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ImagePalette message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ImagePalette
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ImagePalette;

    /**
     * Decodes an ImagePalette message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ImagePalette
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ImagePalette;

    /**
     * Verifies an ImagePalette message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ImagePalette message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ImagePalette
     */
    public static fromObject(object: { [k: string]: any }): ImagePalette;

    /**
     * Creates a plain object from an ImagePalette message. Also converts values to other types if specified.
     * @param message ImagePalette
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ImagePalette, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ImagePalette to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TranslatedText. */
export interface ITranslatedText {

    /** TranslatedText text */
    text?: (string|null);

    /** TranslatedText sourceLocale */
    sourceLocale?: (string|null);

    /** TranslatedText targetLocale */
    targetLocale?: (string|null);
}

/** Represents a TranslatedText. */
export class TranslatedText implements ITranslatedText {

    /**
     * Constructs a new TranslatedText.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITranslatedText);

    /** TranslatedText text. */
    public text: string;

    /** TranslatedText sourceLocale. */
    public sourceLocale: string;

    /** TranslatedText targetLocale. */
    public targetLocale: string;

    /**
     * Creates a new TranslatedText instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TranslatedText instance
     */
    public static create(properties?: ITranslatedText): TranslatedText;

    /**
     * Encodes the specified TranslatedText message. Does not implicitly {@link TranslatedText.verify|verify} messages.
     * @param message TranslatedText message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITranslatedText, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TranslatedText message, length delimited. Does not implicitly {@link TranslatedText.verify|verify} messages.
     * @param message TranslatedText message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITranslatedText, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TranslatedText message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TranslatedText
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TranslatedText;

    /**
     * Decodes a TranslatedText message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TranslatedText
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TranslatedText;

    /**
     * Verifies a TranslatedText message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TranslatedText message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TranslatedText
     */
    public static fromObject(object: { [k: string]: any }): TranslatedText;

    /**
     * Creates a plain object from a TranslatedText message. Also converts values to other types if specified.
     * @param message TranslatedText
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TranslatedText, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TranslatedText to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlusOneData. */
export interface IPlusOneData {

    /** PlusOneData setByUser */
    setByUser?: (boolean|null);

    /** PlusOneData total */
    total?: (number|Long|null);

    /** PlusOneData circlesTotal */
    circlesTotal?: (number|Long|null);

    /** PlusOneData circlesPeople */
    circlesPeople?: (IPlusPerson[]|null);
}

/** Represents a PlusOneData. */
export class PlusOneData implements IPlusOneData {

    /**
     * Constructs a new PlusOneData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlusOneData);

    /** PlusOneData setByUser. */
    public setByUser: boolean;

    /** PlusOneData total. */
    public total: (number|Long);

    /** PlusOneData circlesTotal. */
    public circlesTotal: (number|Long);

    /** PlusOneData circlesPeople. */
    public circlesPeople: IPlusPerson[];

    /**
     * Creates a new PlusOneData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlusOneData instance
     */
    public static create(properties?: IPlusOneData): PlusOneData;

    /**
     * Encodes the specified PlusOneData message. Does not implicitly {@link PlusOneData.verify|verify} messages.
     * @param message PlusOneData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlusOneData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlusOneData message, length delimited. Does not implicitly {@link PlusOneData.verify|verify} messages.
     * @param message PlusOneData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlusOneData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlusOneData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlusOneData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlusOneData;

    /**
     * Decodes a PlusOneData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlusOneData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlusOneData;

    /**
     * Verifies a PlusOneData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlusOneData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlusOneData
     */
    public static fromObject(object: { [k: string]: any }): PlusOneData;

    /**
     * Creates a plain object from a PlusOneData message. Also converts values to other types if specified.
     * @param message PlusOneData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlusOneData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlusOneData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PlusPerson. */
export interface IPlusPerson {

    /** PlusPerson displayName */
    displayName?: (string|null);

    /** PlusPerson profileImageUrl */
    profileImageUrl?: (string|null);
}

/** Represents a PlusPerson. */
export class PlusPerson implements IPlusPerson {

    /**
     * Constructs a new PlusPerson.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPlusPerson);

    /** PlusPerson displayName. */
    public displayName: string;

    /** PlusPerson profileImageUrl. */
    public profileImageUrl: string;

    /**
     * Creates a new PlusPerson instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PlusPerson instance
     */
    public static create(properties?: IPlusPerson): PlusPerson;

    /**
     * Encodes the specified PlusPerson message. Does not implicitly {@link PlusPerson.verify|verify} messages.
     * @param message PlusPerson message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPlusPerson, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PlusPerson message, length delimited. Does not implicitly {@link PlusPerson.verify|verify} messages.
     * @param message PlusPerson message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPlusPerson, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PlusPerson message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PlusPerson
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PlusPerson;

    /**
     * Decodes a PlusPerson message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PlusPerson
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PlusPerson;

    /**
     * Verifies a PlusPerson message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PlusPerson message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PlusPerson
     */
    public static fromObject(object: { [k: string]: any }): PlusPerson;

    /**
     * Creates a plain object from a PlusPerson message. Also converts values to other types if specified.
     * @param message PlusPerson
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PlusPerson, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PlusPerson to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppDetails. */
export interface IAppDetails {

    /** AppDetails developerName */
    developerName?: (string|null);

    /** AppDetails majorVersionNumber */
    majorVersionNumber?: (number|null);

    /** AppDetails versionCode */
    versionCode?: (number|null);

    /** AppDetails versionString */
    versionString?: (string|null);

    /** AppDetails title */
    title?: (string|null);

    /** AppDetails appCategory */
    appCategory?: (string[]|null);

    /** AppDetails contentRating */
    contentRating?: (number|null);

    /** AppDetails infoDownloadSize */
    infoDownloadSize?: (number|Long|null);

    /** AppDetails permission */
    permission?: (string[]|null);

    /** AppDetails developerEmail */
    developerEmail?: (string|null);

    /** AppDetails developerWebsite */
    developerWebsite?: (string|null);

    /** AppDetails infoDownload */
    infoDownload?: (string|null);

    /** AppDetails packageName */
    packageName?: (string|null);

    /** AppDetails recentChangesHtml */
    recentChangesHtml?: (string|null);

    /** AppDetails infoUpdatedOn */
    infoUpdatedOn?: (string|null);

    /** AppDetails file */
    file?: (IFileMetadata[]|null);

    /** AppDetails appType */
    appType?: (string|null);

    /** AppDetails certificateHash */
    certificateHash?: (string[]|null);

    /** AppDetails variesWithDevice */
    variesWithDevice?: (boolean|null);

    /** AppDetails certificateSet */
    certificateSet?: (ICertificateSet[]|null);

    /** AppDetails autoAcquireFreeAppIfHigherVersionAvailableTag */
    autoAcquireFreeAppIfHigherVersionAvailableTag?: (string[]|null);

    /** AppDetails hasInstantLink2 */
    hasInstantLink2?: (boolean|null);

    /** AppDetails splitId */
    splitId?: (string[]|null);

    /** AppDetails gamepadRequired */
    gamepadRequired?: (boolean|null);

    /** AppDetails externallyHosted */
    externallyHosted?: (boolean|null);

    /** AppDetails everExternallyHosted */
    everExternallyHosted?: (boolean|null);

    /** AppDetails installNotes */
    installNotes?: (string|null);

    /** AppDetails installLocation */
    installLocation?: (number|null);

    /** AppDetails targetSdkVersion */
    targetSdkVersion?: (number|null);

    /** AppDetails hasPreregistrationPromoCode */
    hasPreregistrationPromoCode?: (string|null);

    /** AppDetails dependencies */
    dependencies?: (IDependencies|null);

    /** AppDetails testingProgramInfo */
    testingProgramInfo?: (ITestingProgramInfo|null);

    /** AppDetails earlyAccessInfo */
    earlyAccessInfo?: (IEarlyAccessInfo|null);

    /** AppDetails editorChoice */
    editorChoice?: (IEditorChoice|null);

    /** AppDetails instantLink */
    instantLink?: (string|null);

    /** AppDetails developerAddress */
    developerAddress?: (string|null);

    /** AppDetails publisher */
    publisher?: (IPublisher|null);

    /** AppDetails categoryName */
    categoryName?: (string|null);

    /** AppDetails downloadCount */
    downloadCount?: (number|Long|null);

    /** AppDetails downloadLabelDisplay */
    downloadLabelDisplay?: (string|null);

    /** AppDetails inAppProduct */
    inAppProduct?: (string|null);

    /** AppDetails downloadLabelAbbreviated */
    downloadLabelAbbreviated?: (string|null);

    /** AppDetails downloadLabel */
    downloadLabel?: (string|null);
}

/** Represents an AppDetails. */
export class AppDetails implements IAppDetails {

    /**
     * Constructs a new AppDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppDetails);

    /** AppDetails developerName. */
    public developerName: string;

    /** AppDetails majorVersionNumber. */
    public majorVersionNumber: number;

    /** AppDetails versionCode. */
    public versionCode: number;

    /** AppDetails versionString. */
    public versionString: string;

    /** AppDetails title. */
    public title: string;

    /** AppDetails appCategory. */
    public appCategory: string[];

    /** AppDetails contentRating. */
    public contentRating: number;

    /** AppDetails infoDownloadSize. */
    public infoDownloadSize: (number|Long);

    /** AppDetails permission. */
    public permission: string[];

    /** AppDetails developerEmail. */
    public developerEmail: string;

    /** AppDetails developerWebsite. */
    public developerWebsite: string;

    /** AppDetails infoDownload. */
    public infoDownload: string;

    /** AppDetails packageName. */
    public packageName: string;

    /** AppDetails recentChangesHtml. */
    public recentChangesHtml: string;

    /** AppDetails infoUpdatedOn. */
    public infoUpdatedOn: string;

    /** AppDetails file. */
    public file: IFileMetadata[];

    /** AppDetails appType. */
    public appType: string;

    /** AppDetails certificateHash. */
    public certificateHash: string[];

    /** AppDetails variesWithDevice. */
    public variesWithDevice: boolean;

    /** AppDetails certificateSet. */
    public certificateSet: ICertificateSet[];

    /** AppDetails autoAcquireFreeAppIfHigherVersionAvailableTag. */
    public autoAcquireFreeAppIfHigherVersionAvailableTag: string[];

    /** AppDetails hasInstantLink2. */
    public hasInstantLink2: boolean;

    /** AppDetails splitId. */
    public splitId: string[];

    /** AppDetails gamepadRequired. */
    public gamepadRequired: boolean;

    /** AppDetails externallyHosted. */
    public externallyHosted: boolean;

    /** AppDetails everExternallyHosted. */
    public everExternallyHosted: boolean;

    /** AppDetails installNotes. */
    public installNotes: string;

    /** AppDetails installLocation. */
    public installLocation: number;

    /** AppDetails targetSdkVersion. */
    public targetSdkVersion: number;

    /** AppDetails hasPreregistrationPromoCode. */
    public hasPreregistrationPromoCode: string;

    /** AppDetails dependencies. */
    public dependencies?: (IDependencies|null);

    /** AppDetails testingProgramInfo. */
    public testingProgramInfo?: (ITestingProgramInfo|null);

    /** AppDetails earlyAccessInfo. */
    public earlyAccessInfo?: (IEarlyAccessInfo|null);

    /** AppDetails editorChoice. */
    public editorChoice?: (IEditorChoice|null);

    /** AppDetails instantLink. */
    public instantLink: string;

    /** AppDetails developerAddress. */
    public developerAddress: string;

    /** AppDetails publisher. */
    public publisher?: (IPublisher|null);

    /** AppDetails categoryName. */
    public categoryName: string;

    /** AppDetails downloadCount. */
    public downloadCount: (number|Long);

    /** AppDetails downloadLabelDisplay. */
    public downloadLabelDisplay: string;

    /** AppDetails inAppProduct. */
    public inAppProduct: string;

    /** AppDetails downloadLabelAbbreviated. */
    public downloadLabelAbbreviated: string;

    /** AppDetails downloadLabel. */
    public downloadLabel: string;

    /**
     * Creates a new AppDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppDetails instance
     */
    public static create(properties?: IAppDetails): AppDetails;

    /**
     * Encodes the specified AppDetails message. Does not implicitly {@link AppDetails.verify|verify} messages.
     * @param message AppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppDetails message, length delimited. Does not implicitly {@link AppDetails.verify|verify} messages.
     * @param message AppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppDetails;

    /**
     * Decodes an AppDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppDetails;

    /**
     * Verifies an AppDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppDetails
     */
    public static fromObject(object: { [k: string]: any }): AppDetails;

    /**
     * Creates a plain object from an AppDetails message. Also converts values to other types if specified.
     * @param message AppDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ModifyLibrary. */
export interface IModifyLibrary {

    /** ModifyLibrary id */
    id?: (string|null);

    /** ModifyLibrary packageToAdd */
    packageToAdd?: (string|null);

    /** ModifyLibrary packageToRemove */
    packageToRemove?: (string|null);
}

/** Represents a ModifyLibrary. */
export class ModifyLibrary implements IModifyLibrary {

    /**
     * Constructs a new ModifyLibrary.
     * @param [properties] Properties to set
     */
    constructor(properties?: IModifyLibrary);

    /** ModifyLibrary id. */
    public id: string;

    /** ModifyLibrary packageToAdd. */
    public packageToAdd: string;

    /** ModifyLibrary packageToRemove. */
    public packageToRemove: string;

    /**
     * Creates a new ModifyLibrary instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ModifyLibrary instance
     */
    public static create(properties?: IModifyLibrary): ModifyLibrary;

    /**
     * Encodes the specified ModifyLibrary message. Does not implicitly {@link ModifyLibrary.verify|verify} messages.
     * @param message ModifyLibrary message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IModifyLibrary, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ModifyLibrary message, length delimited. Does not implicitly {@link ModifyLibrary.verify|verify} messages.
     * @param message ModifyLibrary message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IModifyLibrary, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ModifyLibrary message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ModifyLibrary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ModifyLibrary;

    /**
     * Decodes a ModifyLibrary message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ModifyLibrary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ModifyLibrary;

    /**
     * Verifies a ModifyLibrary message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ModifyLibrary message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ModifyLibrary
     */
    public static fromObject(object: { [k: string]: any }): ModifyLibrary;

    /**
     * Creates a plain object from a ModifyLibrary message. Also converts values to other types if specified.
     * @param message ModifyLibrary
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ModifyLibrary, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ModifyLibrary to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Publisher. */
export interface IPublisher {

    /** Publisher publisherStream */
    publisherStream?: (IPublisherStream|null);
}

/** Represents a Publisher. */
export class Publisher implements IPublisher {

    /**
     * Constructs a new Publisher.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPublisher);

    /** Publisher publisherStream. */
    public publisherStream?: (IPublisherStream|null);

    /**
     * Creates a new Publisher instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Publisher instance
     */
    public static create(properties?: IPublisher): Publisher;

    /**
     * Encodes the specified Publisher message. Does not implicitly {@link Publisher.verify|verify} messages.
     * @param message Publisher message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPublisher, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Publisher message, length delimited. Does not implicitly {@link Publisher.verify|verify} messages.
     * @param message Publisher message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPublisher, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Publisher message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Publisher
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Publisher;

    /**
     * Decodes a Publisher message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Publisher
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Publisher;

    /**
     * Verifies a Publisher message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Publisher message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Publisher
     */
    public static fromObject(object: { [k: string]: any }): Publisher;

    /**
     * Creates a plain object from a Publisher message. Also converts values to other types if specified.
     * @param message Publisher
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Publisher, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Publisher to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PublisherStream. */
export interface IPublisherStream {

    /** PublisherStream moreUrl */
    moreUrl?: (string|null);

    /** PublisherStream query */
    query?: (string|null);
}

/** Represents a PublisherStream. */
export class PublisherStream implements IPublisherStream {

    /**
     * Constructs a new PublisherStream.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPublisherStream);

    /** PublisherStream moreUrl. */
    public moreUrl: string;

    /** PublisherStream query. */
    public query: string;

    /**
     * Creates a new PublisherStream instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PublisherStream instance
     */
    public static create(properties?: IPublisherStream): PublisherStream;

    /**
     * Encodes the specified PublisherStream message. Does not implicitly {@link PublisherStream.verify|verify} messages.
     * @param message PublisherStream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPublisherStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PublisherStream message, length delimited. Does not implicitly {@link PublisherStream.verify|verify} messages.
     * @param message PublisherStream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPublisherStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PublisherStream message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PublisherStream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PublisherStream;

    /**
     * Decodes a PublisherStream message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PublisherStream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PublisherStream;

    /**
     * Verifies a PublisherStream message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PublisherStream message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PublisherStream
     */
    public static fromObject(object: { [k: string]: any }): PublisherStream;

    /**
     * Creates a plain object from a PublisherStream message. Also converts values to other types if specified.
     * @param message PublisherStream
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PublisherStream, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PublisherStream to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EditorChoice. */
export interface IEditorChoice {

    /** EditorChoice bulletins */
    bulletins?: (string[]|null);

    /** EditorChoice description */
    description?: (string|null);

    /** EditorChoice stream */
    stream?: (ISubStream|null);

    /** EditorChoice title */
    title?: (string|null);

    /** EditorChoice subtitle */
    subtitle?: (string|null);
}

/** Represents an EditorChoice. */
export class EditorChoice implements IEditorChoice {

    /**
     * Constructs a new EditorChoice.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEditorChoice);

    /** EditorChoice bulletins. */
    public bulletins: string[];

    /** EditorChoice description. */
    public description: string;

    /** EditorChoice stream. */
    public stream?: (ISubStream|null);

    /** EditorChoice title. */
    public title: string;

    /** EditorChoice subtitle. */
    public subtitle: string;

    /**
     * Creates a new EditorChoice instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EditorChoice instance
     */
    public static create(properties?: IEditorChoice): EditorChoice;

    /**
     * Encodes the specified EditorChoice message. Does not implicitly {@link EditorChoice.verify|verify} messages.
     * @param message EditorChoice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEditorChoice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EditorChoice message, length delimited. Does not implicitly {@link EditorChoice.verify|verify} messages.
     * @param message EditorChoice message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEditorChoice, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EditorChoice message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EditorChoice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EditorChoice;

    /**
     * Decodes an EditorChoice message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EditorChoice
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EditorChoice;

    /**
     * Verifies an EditorChoice message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EditorChoice message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EditorChoice
     */
    public static fromObject(object: { [k: string]: any }): EditorChoice;

    /**
     * Creates a plain object from an EditorChoice message. Also converts values to other types if specified.
     * @param message EditorChoice
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EditorChoice, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EditorChoice to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CertificateSet. */
export interface ICertificateSet {

    /** CertificateSet certificateHash */
    certificateHash?: (string[]|null);

    /** CertificateSet sha256 */
    sha256?: (string[]|null);
}

/** Represents a CertificateSet. */
export class CertificateSet implements ICertificateSet {

    /**
     * Constructs a new CertificateSet.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICertificateSet);

    /** CertificateSet certificateHash. */
    public certificateHash: string[];

    /** CertificateSet sha256. */
    public sha256: string[];

    /**
     * Creates a new CertificateSet instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CertificateSet instance
     */
    public static create(properties?: ICertificateSet): CertificateSet;

    /**
     * Encodes the specified CertificateSet message. Does not implicitly {@link CertificateSet.verify|verify} messages.
     * @param message CertificateSet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICertificateSet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CertificateSet message, length delimited. Does not implicitly {@link CertificateSet.verify|verify} messages.
     * @param message CertificateSet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICertificateSet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CertificateSet message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CertificateSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CertificateSet;

    /**
     * Decodes a CertificateSet message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CertificateSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CertificateSet;

    /**
     * Verifies a CertificateSet message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CertificateSet message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CertificateSet
     */
    public static fromObject(object: { [k: string]: any }): CertificateSet;

    /**
     * Creates a plain object from a CertificateSet message. Also converts values to other types if specified.
     * @param message CertificateSet
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CertificateSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CertificateSet to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Dependencies. */
export interface IDependencies {

    /** Dependencies unknown */
    unknown?: (number|null);

    /** Dependencies size */
    size?: (number|Long|null);

    /** Dependencies dependency */
    dependency?: (IDependency[]|null);

    /** Dependencies targetSdk */
    targetSdk?: (number|null);

    /** Dependencies unknown2 */
    unknown2?: (number|null);

    /** Dependencies splitApks */
    splitApks?: (string[]|null);
}

/** Represents a Dependencies. */
export class Dependencies implements IDependencies {

    /**
     * Constructs a new Dependencies.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDependencies);

    /** Dependencies unknown. */
    public unknown: number;

    /** Dependencies size. */
    public size: (number|Long);

    /** Dependencies dependency. */
    public dependency: IDependency[];

    /** Dependencies targetSdk. */
    public targetSdk: number;

    /** Dependencies unknown2. */
    public unknown2: number;

    /** Dependencies splitApks. */
    public splitApks: string[];

    /**
     * Creates a new Dependencies instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Dependencies instance
     */
    public static create(properties?: IDependencies): Dependencies;

    /**
     * Encodes the specified Dependencies message. Does not implicitly {@link Dependencies.verify|verify} messages.
     * @param message Dependencies message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDependencies, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Dependencies message, length delimited. Does not implicitly {@link Dependencies.verify|verify} messages.
     * @param message Dependencies message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDependencies, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Dependencies message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Dependencies
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Dependencies;

    /**
     * Decodes a Dependencies message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Dependencies
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Dependencies;

    /**
     * Verifies a Dependencies message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Dependencies message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Dependencies
     */
    public static fromObject(object: { [k: string]: any }): Dependencies;

    /**
     * Creates a plain object from a Dependencies message. Also converts values to other types if specified.
     * @param message Dependencies
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Dependencies, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Dependencies to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Dependency. */
export interface IDependency {

    /** Dependency packageName */
    packageName?: (string|null);

    /** Dependency version */
    version?: (number|null);

    /** Dependency unknown4 */
    unknown4?: (number|null);
}

/** Represents a Dependency. */
export class Dependency implements IDependency {

    /**
     * Constructs a new Dependency.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDependency);

    /** Dependency packageName. */
    public packageName: string;

    /** Dependency version. */
    public version: number;

    /** Dependency unknown4. */
    public unknown4: number;

    /**
     * Creates a new Dependency instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Dependency instance
     */
    public static create(properties?: IDependency): Dependency;

    /**
     * Encodes the specified Dependency message. Does not implicitly {@link Dependency.verify|verify} messages.
     * @param message Dependency message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDependency, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Dependency message, length delimited. Does not implicitly {@link Dependency.verify|verify} messages.
     * @param message Dependency message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDependency, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Dependency message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Dependency
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Dependency;

    /**
     * Decodes a Dependency message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Dependency
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Dependency;

    /**
     * Verifies a Dependency message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Dependency message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Dependency
     */
    public static fromObject(object: { [k: string]: any }): Dependency;

    /**
     * Creates a plain object from a Dependency message. Also converts values to other types if specified.
     * @param message Dependency
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Dependency, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Dependency to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TestingProgramInfo. */
export interface ITestingProgramInfo {

    /** TestingProgramInfo subscribed */
    subscribed?: (boolean|null);

    /** TestingProgramInfo subscribedAndInstalled */
    subscribedAndInstalled?: (boolean|null);

    /** TestingProgramInfo email */
    email?: (string|null);

    /** TestingProgramInfo displayName */
    displayName?: (string|null);

    /** TestingProgramInfo image */
    image?: (IImage|null);
}

/** Represents a TestingProgramInfo. */
export class TestingProgramInfo implements ITestingProgramInfo {

    /**
     * Constructs a new TestingProgramInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITestingProgramInfo);

    /** TestingProgramInfo subscribed. */
    public subscribed: boolean;

    /** TestingProgramInfo subscribedAndInstalled. */
    public subscribedAndInstalled: boolean;

    /** TestingProgramInfo email. */
    public email: string;

    /** TestingProgramInfo displayName. */
    public displayName: string;

    /** TestingProgramInfo image. */
    public image?: (IImage|null);

    /**
     * Creates a new TestingProgramInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TestingProgramInfo instance
     */
    public static create(properties?: ITestingProgramInfo): TestingProgramInfo;

    /**
     * Encodes the specified TestingProgramInfo message. Does not implicitly {@link TestingProgramInfo.verify|verify} messages.
     * @param message TestingProgramInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITestingProgramInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TestingProgramInfo message, length delimited. Does not implicitly {@link TestingProgramInfo.verify|verify} messages.
     * @param message TestingProgramInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITestingProgramInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TestingProgramInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TestingProgramInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestingProgramInfo;

    /**
     * Decodes a TestingProgramInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TestingProgramInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestingProgramInfo;

    /**
     * Verifies a TestingProgramInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TestingProgramInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TestingProgramInfo
     */
    public static fromObject(object: { [k: string]: any }): TestingProgramInfo;

    /**
     * Creates a plain object from a TestingProgramInfo message. Also converts values to other types if specified.
     * @param message TestingProgramInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TestingProgramInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TestingProgramInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EarlyAccessInfo. */
export interface IEarlyAccessInfo {

    /** EarlyAccessInfo email */
    email?: (string|null);
}

/** Represents an EarlyAccessInfo. */
export class EarlyAccessInfo implements IEarlyAccessInfo {

    /**
     * Constructs a new EarlyAccessInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEarlyAccessInfo);

    /** EarlyAccessInfo email. */
    public email: string;

    /**
     * Creates a new EarlyAccessInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EarlyAccessInfo instance
     */
    public static create(properties?: IEarlyAccessInfo): EarlyAccessInfo;

    /**
     * Encodes the specified EarlyAccessInfo message. Does not implicitly {@link EarlyAccessInfo.verify|verify} messages.
     * @param message EarlyAccessInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEarlyAccessInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EarlyAccessInfo message, length delimited. Does not implicitly {@link EarlyAccessInfo.verify|verify} messages.
     * @param message EarlyAccessInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEarlyAccessInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EarlyAccessInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EarlyAccessInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EarlyAccessInfo;

    /**
     * Decodes an EarlyAccessInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EarlyAccessInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EarlyAccessInfo;

    /**
     * Verifies an EarlyAccessInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EarlyAccessInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EarlyAccessInfo
     */
    public static fromObject(object: { [k: string]: any }): EarlyAccessInfo;

    /**
     * Creates a plain object from an EarlyAccessInfo message. Also converts values to other types if specified.
     * @param message EarlyAccessInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EarlyAccessInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EarlyAccessInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DocumentDetails. */
export interface IDocumentDetails {

    /** DocumentDetails appDetails */
    appDetails?: (IAppDetails|null);

    /** DocumentDetails subscriptionDetails */
    subscriptionDetails?: (ISubscriptionDetails|null);
}

/** Represents a DocumentDetails. */
export class DocumentDetails implements IDocumentDetails {

    /**
     * Constructs a new DocumentDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDocumentDetails);

    /** DocumentDetails appDetails. */
    public appDetails?: (IAppDetails|null);

    /** DocumentDetails subscriptionDetails. */
    public subscriptionDetails?: (ISubscriptionDetails|null);

    /**
     * Creates a new DocumentDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DocumentDetails instance
     */
    public static create(properties?: IDocumentDetails): DocumentDetails;

    /**
     * Encodes the specified DocumentDetails message. Does not implicitly {@link DocumentDetails.verify|verify} messages.
     * @param message DocumentDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDocumentDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DocumentDetails message, length delimited. Does not implicitly {@link DocumentDetails.verify|verify} messages.
     * @param message DocumentDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDocumentDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DocumentDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DocumentDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DocumentDetails;

    /**
     * Decodes a DocumentDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DocumentDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DocumentDetails;

    /**
     * Verifies a DocumentDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DocumentDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DocumentDetails
     */
    public static fromObject(object: { [k: string]: any }): DocumentDetails;

    /**
     * Creates a plain object from a DocumentDetails message. Also converts values to other types if specified.
     * @param message DocumentDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DocumentDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DocumentDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PatchDetails. */
export interface IPatchDetails {

    /** PatchDetails baseVersionCode */
    baseVersionCode?: (number|null);

    /** PatchDetails size */
    size?: (number|Long|null);
}

/** Represents a PatchDetails. */
export class PatchDetails implements IPatchDetails {

    /**
     * Constructs a new PatchDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPatchDetails);

    /** PatchDetails baseVersionCode. */
    public baseVersionCode: number;

    /** PatchDetails size. */
    public size: (number|Long);

    /**
     * Creates a new PatchDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PatchDetails instance
     */
    public static create(properties?: IPatchDetails): PatchDetails;

    /**
     * Encodes the specified PatchDetails message. Does not implicitly {@link PatchDetails.verify|verify} messages.
     * @param message PatchDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPatchDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PatchDetails message, length delimited. Does not implicitly {@link PatchDetails.verify|verify} messages.
     * @param message PatchDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPatchDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PatchDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PatchDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PatchDetails;

    /**
     * Decodes a PatchDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PatchDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PatchDetails;

    /**
     * Verifies a PatchDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PatchDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PatchDetails
     */
    public static fromObject(object: { [k: string]: any }): PatchDetails;

    /**
     * Creates a plain object from a PatchDetails message. Also converts values to other types if specified.
     * @param message PatchDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PatchDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PatchDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a FileMetadata. */
export interface IFileMetadata {

    /** FileMetadata fileType */
    fileType?: (number|null);

    /** FileMetadata versionCode */
    versionCode?: (number|null);

    /** FileMetadata size */
    size?: (number|Long|null);

    /** FileMetadata splitId */
    splitId?: (string|null);

    /** FileMetadata compressedSize */
    compressedSize?: (number|Long|null);

    /** FileMetadata patchDetails */
    patchDetails?: (IPatchDetails[]|null);
}

/** Represents a FileMetadata. */
export class FileMetadata implements IFileMetadata {

    /**
     * Constructs a new FileMetadata.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFileMetadata);

    /** FileMetadata fileType. */
    public fileType: number;

    /** FileMetadata versionCode. */
    public versionCode: number;

    /** FileMetadata size. */
    public size: (number|Long);

    /** FileMetadata splitId. */
    public splitId: string;

    /** FileMetadata compressedSize. */
    public compressedSize: (number|Long);

    /** FileMetadata patchDetails. */
    public patchDetails: IPatchDetails[];

    /**
     * Creates a new FileMetadata instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FileMetadata instance
     */
    public static create(properties?: IFileMetadata): FileMetadata;

    /**
     * Encodes the specified FileMetadata message. Does not implicitly {@link FileMetadata.verify|verify} messages.
     * @param message FileMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFileMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FileMetadata message, length delimited. Does not implicitly {@link FileMetadata.verify|verify} messages.
     * @param message FileMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFileMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FileMetadata message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FileMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FileMetadata;

    /**
     * Decodes a FileMetadata message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FileMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FileMetadata;

    /**
     * Verifies a FileMetadata message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FileMetadata message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FileMetadata
     */
    public static fromObject(object: { [k: string]: any }): FileMetadata;

    /**
     * Creates a plain object from a FileMetadata message. Also converts values to other types if specified.
     * @param message FileMetadata
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FileMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FileMetadata to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SubscriptionDetails. */
export interface ISubscriptionDetails {

    /** SubscriptionDetails subscriptionPeriod */
    subscriptionPeriod?: (number|null);
}

/** Represents a SubscriptionDetails. */
export class SubscriptionDetails implements ISubscriptionDetails {

    /**
     * Constructs a new SubscriptionDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISubscriptionDetails);

    /** SubscriptionDetails subscriptionPeriod. */
    public subscriptionPeriod: number;

    /**
     * Creates a new SubscriptionDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SubscriptionDetails instance
     */
    public static create(properties?: ISubscriptionDetails): SubscriptionDetails;

    /**
     * Encodes the specified SubscriptionDetails message. Does not implicitly {@link SubscriptionDetails.verify|verify} messages.
     * @param message SubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SubscriptionDetails message, length delimited. Does not implicitly {@link SubscriptionDetails.verify|verify} messages.
     * @param message SubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SubscriptionDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SubscriptionDetails;

    /**
     * Decodes a SubscriptionDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SubscriptionDetails;

    /**
     * Verifies a SubscriptionDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SubscriptionDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SubscriptionDetails
     */
    public static fromObject(object: { [k: string]: any }): SubscriptionDetails;

    /**
     * Creates a plain object from a SubscriptionDetails message. Also converts values to other types if specified.
     * @param message SubscriptionDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SubscriptionDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SubscriptionDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Bucket. */
export interface IBucket {

    /** Bucket multiCorpus */
    multiCorpus?: (boolean|null);

    /** Bucket title */
    title?: (string|null);

    /** Bucket iconUrl */
    iconUrl?: (string|null);

    /** Bucket fullContentsUrl */
    fullContentsUrl?: (string|null);

    /** Bucket relevance */
    relevance?: (number|null);

    /** Bucket estimatedResults */
    estimatedResults?: (number|Long|null);

    /** Bucket analyticsCookie */
    analyticsCookie?: (string|null);

    /** Bucket fullContentsListUrl */
    fullContentsListUrl?: (string|null);

    /** Bucket nextPageUrl */
    nextPageUrl?: (string|null);

    /** Bucket ordered */
    ordered?: (boolean|null);
}

/** Represents a Bucket. */
export class Bucket implements IBucket {

    /**
     * Constructs a new Bucket.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBucket);

    /** Bucket multiCorpus. */
    public multiCorpus: boolean;

    /** Bucket title. */
    public title: string;

    /** Bucket iconUrl. */
    public iconUrl: string;

    /** Bucket fullContentsUrl. */
    public fullContentsUrl: string;

    /** Bucket relevance. */
    public relevance: number;

    /** Bucket estimatedResults. */
    public estimatedResults: (number|Long);

    /** Bucket analyticsCookie. */
    public analyticsCookie: string;

    /** Bucket fullContentsListUrl. */
    public fullContentsListUrl: string;

    /** Bucket nextPageUrl. */
    public nextPageUrl: string;

    /** Bucket ordered. */
    public ordered: boolean;

    /**
     * Creates a new Bucket instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Bucket instance
     */
    public static create(properties?: IBucket): Bucket;

    /**
     * Encodes the specified Bucket message. Does not implicitly {@link Bucket.verify|verify} messages.
     * @param message Bucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Bucket message, length delimited. Does not implicitly {@link Bucket.verify|verify} messages.
     * @param message Bucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Bucket message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Bucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Bucket;

    /**
     * Decodes a Bucket message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Bucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Bucket;

    /**
     * Verifies a Bucket message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Bucket message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Bucket
     */
    public static fromObject(object: { [k: string]: any }): Bucket;

    /**
     * Creates a plain object from a Bucket message. Also converts values to other types if specified.
     * @param message Bucket
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Bucket, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Bucket to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ListResponse. */
export interface IListResponse {

    /** ListResponse bucket */
    bucket?: (IBucket[]|null);

    /** ListResponse item */
    item?: (IItem[]|null);
}

/** Represents a ListResponse. */
export class ListResponse implements IListResponse {

    /**
     * Constructs a new ListResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IListResponse);

    /** ListResponse bucket. */
    public bucket: IBucket[];

    /** ListResponse item. */
    public item: IItem[];

    /**
     * Creates a new ListResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ListResponse instance
     */
    public static create(properties?: IListResponse): ListResponse;

    /**
     * Encodes the specified ListResponse message. Does not implicitly {@link ListResponse.verify|verify} messages.
     * @param message ListResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ListResponse message, length delimited. Does not implicitly {@link ListResponse.verify|verify} messages.
     * @param message ListResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IListResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ListResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ListResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ListResponse;

    /**
     * Decodes a ListResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ListResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ListResponse;

    /**
     * Verifies a ListResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ListResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ListResponse
     */
    public static fromObject(object: { [k: string]: any }): ListResponse;

    /**
     * Creates a plain object from a ListResponse message. Also converts values to other types if specified.
     * @param message ListResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ListResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ListResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Item. */
export interface IItem {

    /** Item id */
    id?: (string|null);

    /** Item subId */
    subId?: (string|null);

    /** Item type */
    type?: (number|null);

    /** Item categoryId */
    categoryId?: (number|null);

    /** Item title */
    title?: (string|null);

    /** Item creator */
    creator?: (string|null);

    /** Item descriptionHtml */
    descriptionHtml?: (string|null);

    /** Item offer */
    offer?: (IOffer[]|null);

    /** Item availability */
    availability?: (IAvailability|null);

    /** Item image */
    image?: (IImage[]|null);

    /** Item subItem */
    subItem?: (IItem[]|null);

    /** Item containerMetadata */
    containerMetadata?: (IContainerMetadata|null);

    /** Item details */
    details?: (IDocumentDetails|null);

    /** Item aggregateRating */
    aggregateRating?: (IAggregateRating|null);

    /** Item annotations */
    annotations?: (IAnnotations|null);

    /** Item detailsUrl */
    detailsUrl?: (string|null);

    /** Item shareUrl */
    shareUrl?: (string|null);

    /** Item reviewsUrl */
    reviewsUrl?: (string|null);

    /** Item backendUrl */
    backendUrl?: (string|null);

    /** Item purchaseDetailsUrl */
    purchaseDetailsUrl?: (string|null);

    /** Item detailsReusable */
    detailsReusable?: (boolean|null);

    /** Item subtitle */
    subtitle?: (string|null);

    /** Item translatedDescriptionHtml */
    translatedDescriptionHtml?: (string|null);

    /** Item serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** Item appInfo */
    appInfo?: (IAppInfo|null);

    /** Item mature */
    mature?: (boolean|null);

    /** Item promotionalDescription */
    promotionalDescription?: (string|null);

    /** Item availableForPreregistration */
    availableForPreregistration?: (boolean|null);

    /** Item tip */
    tip?: (IReviewTip[]|null);

    /** Item reviewSnippetsUrl */
    reviewSnippetsUrl?: (string|null);

    /** Item forceShareability */
    forceShareability?: (boolean|null);

    /** Item useWishlistAsPrimaryAction */
    useWishlistAsPrimaryAction?: (boolean|null);

    /** Item reviewQuestionsUrl */
    reviewQuestionsUrl?: (string|null);

    /** Item reviewSummaryUrl */
    reviewSummaryUrl?: (string|null);
}

/** Represents an Item. */
export class Item implements IItem {

    /**
     * Constructs a new Item.
     * @param [properties] Properties to set
     */
    constructor(properties?: IItem);

    /** Item id. */
    public id: string;

    /** Item subId. */
    public subId: string;

    /** Item type. */
    public type: number;

    /** Item categoryId. */
    public categoryId: number;

    /** Item title. */
    public title: string;

    /** Item creator. */
    public creator: string;

    /** Item descriptionHtml. */
    public descriptionHtml: string;

    /** Item offer. */
    public offer: IOffer[];

    /** Item availability. */
    public availability?: (IAvailability|null);

    /** Item image. */
    public image: IImage[];

    /** Item subItem. */
    public subItem: IItem[];

    /** Item containerMetadata. */
    public containerMetadata?: (IContainerMetadata|null);

    /** Item details. */
    public details?: (IDocumentDetails|null);

    /** Item aggregateRating. */
    public aggregateRating?: (IAggregateRating|null);

    /** Item annotations. */
    public annotations?: (IAnnotations|null);

    /** Item detailsUrl. */
    public detailsUrl: string;

    /** Item shareUrl. */
    public shareUrl: string;

    /** Item reviewsUrl. */
    public reviewsUrl: string;

    /** Item backendUrl. */
    public backendUrl: string;

    /** Item purchaseDetailsUrl. */
    public purchaseDetailsUrl: string;

    /** Item detailsReusable. */
    public detailsReusable: boolean;

    /** Item subtitle. */
    public subtitle: string;

    /** Item translatedDescriptionHtml. */
    public translatedDescriptionHtml: string;

    /** Item serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** Item appInfo. */
    public appInfo?: (IAppInfo|null);

    /** Item mature. */
    public mature: boolean;

    /** Item promotionalDescription. */
    public promotionalDescription: string;

    /** Item availableForPreregistration. */
    public availableForPreregistration: boolean;

    /** Item tip. */
    public tip: IReviewTip[];

    /** Item reviewSnippetsUrl. */
    public reviewSnippetsUrl: string;

    /** Item forceShareability. */
    public forceShareability: boolean;

    /** Item useWishlistAsPrimaryAction. */
    public useWishlistAsPrimaryAction: boolean;

    /** Item reviewQuestionsUrl. */
    public reviewQuestionsUrl: string;

    /** Item reviewSummaryUrl. */
    public reviewSummaryUrl: string;

    /**
     * Creates a new Item instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Item instance
     */
    public static create(properties?: IItem): Item;

    /**
     * Encodes the specified Item message. Does not implicitly {@link Item.verify|verify} messages.
     * @param message Item message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Item message, length delimited. Does not implicitly {@link Item.verify|verify} messages.
     * @param message Item message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Item message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Item;

    /**
     * Decodes an Item message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Item;

    /**
     * Verifies an Item message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Item message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Item
     */
    public static fromObject(object: { [k: string]: any }): Item;

    /**
     * Creates a plain object from an Item message. Also converts values to other types if specified.
     * @param message Item
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Item, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Item to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppInfo. */
export interface IAppInfo {

    /** AppInfo title */
    title?: (string|null);

    /** AppInfo section */
    section?: (IAppInfoSection[]|null);
}

/** Represents an AppInfo. */
export class AppInfo implements IAppInfo {

    /**
     * Constructs a new AppInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppInfo);

    /** AppInfo title. */
    public title: string;

    /** AppInfo section. */
    public section: IAppInfoSection[];

    /**
     * Creates a new AppInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppInfo instance
     */
    public static create(properties?: IAppInfo): AppInfo;

    /**
     * Encodes the specified AppInfo message. Does not implicitly {@link AppInfo.verify|verify} messages.
     * @param message AppInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppInfo message, length delimited. Does not implicitly {@link AppInfo.verify|verify} messages.
     * @param message AppInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppInfo;

    /**
     * Decodes an AppInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppInfo;

    /**
     * Verifies an AppInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppInfo
     */
    public static fromObject(object: { [k: string]: any }): AppInfo;

    /**
     * Creates a plain object from an AppInfo message. Also converts values to other types if specified.
     * @param message AppInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppInfoSection. */
export interface IAppInfoSection {

    /** AppInfoSection label */
    label?: (string|null);

    /** AppInfoSection container */
    container?: (IAppInfoContainer|null);
}

/** Represents an AppInfoSection. */
export class AppInfoSection implements IAppInfoSection {

    /**
     * Constructs a new AppInfoSection.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppInfoSection);

    /** AppInfoSection label. */
    public label: string;

    /** AppInfoSection container. */
    public container?: (IAppInfoContainer|null);

    /**
     * Creates a new AppInfoSection instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppInfoSection instance
     */
    public static create(properties?: IAppInfoSection): AppInfoSection;

    /**
     * Encodes the specified AppInfoSection message. Does not implicitly {@link AppInfoSection.verify|verify} messages.
     * @param message AppInfoSection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppInfoSection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppInfoSection message, length delimited. Does not implicitly {@link AppInfoSection.verify|verify} messages.
     * @param message AppInfoSection message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppInfoSection, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppInfoSection message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppInfoSection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppInfoSection;

    /**
     * Decodes an AppInfoSection message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppInfoSection
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppInfoSection;

    /**
     * Verifies an AppInfoSection message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppInfoSection message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppInfoSection
     */
    public static fromObject(object: { [k: string]: any }): AppInfoSection;

    /**
     * Creates a plain object from an AppInfoSection message. Also converts values to other types if specified.
     * @param message AppInfoSection
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppInfoSection, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppInfoSection to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppInfoContainer. */
export interface IAppInfoContainer {

    /** AppInfoContainer image */
    image?: (IImage|null);

    /** AppInfoContainer description */
    description?: (string|null);
}

/** Represents an AppInfoContainer. */
export class AppInfoContainer implements IAppInfoContainer {

    /**
     * Constructs a new AppInfoContainer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppInfoContainer);

    /** AppInfoContainer image. */
    public image?: (IImage|null);

    /** AppInfoContainer description. */
    public description: string;

    /**
     * Creates a new AppInfoContainer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppInfoContainer instance
     */
    public static create(properties?: IAppInfoContainer): AppInfoContainer;

    /**
     * Encodes the specified AppInfoContainer message. Does not implicitly {@link AppInfoContainer.verify|verify} messages.
     * @param message AppInfoContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppInfoContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppInfoContainer message, length delimited. Does not implicitly {@link AppInfoContainer.verify|verify} messages.
     * @param message AppInfoContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppInfoContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppInfoContainer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppInfoContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppInfoContainer;

    /**
     * Decodes an AppInfoContainer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppInfoContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppInfoContainer;

    /**
     * Verifies an AppInfoContainer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppInfoContainer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppInfoContainer
     */
    public static fromObject(object: { [k: string]: any }): AppInfoContainer;

    /**
     * Creates a plain object from an AppInfoContainer message. Also converts values to other types if specified.
     * @param message AppInfoContainer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppInfoContainer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppInfoContainer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Annotations. */
export interface IAnnotations {

    /** Annotations sectionRelated */
    sectionRelated?: (ISectionMetaData|null);

    /** Annotations sectionMoreBy */
    sectionMoreBy?: (ISectionMetaData|null);

    /** Annotations warning */
    warning?: (IWarning[]|null);

    /** Annotations sectionBodyOfWork */
    sectionBodyOfWork?: (ISectionMetaData|null);

    /** Annotations sectionCoreContent */
    sectionCoreContent?: (ISectionMetaData|null);

    /** Annotations overlayMetaData */
    overlayMetaData?: (IOverlayMetaData|null);

    /** Annotations badgeForCreator */
    badgeForCreator?: (IBadge[]|null);

    /** Annotations infoBadge */
    infoBadge?: (IBadge[]|null);

    /** Annotations annotationLink */
    annotationLink?: (IAnnotationLink|null);

    /** Annotations sectionCrossSell */
    sectionCrossSell?: (ISectionMetaData|null);

    /** Annotations sectionRelatedItemType */
    sectionRelatedItemType?: (ISectionMetaData|null);

    /** Annotations promotedDoc */
    promotedDoc?: (IPromotedDoc[]|null);

    /** Annotations offerNote */
    offerNote?: (string|null);

    /** Annotations privacyPolicyUrl */
    privacyPolicyUrl?: (string|null);

    /** Annotations suggestionReasons */
    suggestionReasons?: (ISuggestionReasons|null);

    /** Annotations optimalDeviceClassWarning */
    optimalDeviceClassWarning?: (IWarning|null);

    /** Annotations badgeContainer */
    badgeContainer?: (IBadgeContainer[]|null);

    /** Annotations sectionSuggestForRating */
    sectionSuggestForRating?: (ISectionMetaData|null);

    /** Annotations sectionPurchaseCrossSell */
    sectionPurchaseCrossSell?: (ISectionMetaData|null);

    /** Annotations overflowLink */
    overflowLink?: (IOverflowLink[]|null);

    /** Annotations attributionHtml */
    attributionHtml?: (string|null);

    /** Annotations purchaseHistoryDetails */
    purchaseHistoryDetails?: (IPurchaseHistoryDetails|null);

    /** Annotations badgeForLegacyRating */
    badgeForLegacyRating?: (IBadge|null);

    /** Annotations voucherInfo */
    voucherInfo?: (IVoucherInfo[]|null);

    /** Annotations sectionFeaturedApps */
    sectionFeaturedApps?: (ISectionMetaData|null);

    /** Annotations detailsPageCluster */
    detailsPageCluster?: (ISectionMetaData[]|null);

    /** Annotations videoAnnotations */
    videoAnnotations?: (IVideoAnnotations|null);

    /** Annotations sectionPurchaseRelatedTopics */
    sectionPurchaseRelatedTopics?: (ISectionMetaData|null);

    /** Annotations mySubscriptionDetails */
    mySubscriptionDetails?: (IMySubscriptionDetails|null);

    /** Annotations myRewardDetails */
    myRewardDetails?: (IMyRewardDetails|null);

    /** Annotations featureBadge */
    featureBadge?: (IBadge[]|null);

    /** Annotations snippet */
    snippet?: (ISnippet|null);

    /** Annotations downloadsLabel */
    downloadsLabel?: (string|null);

    /** Annotations badgeForRating */
    badgeForRating?: (IBadge|null);

    /** Annotations categoryInfo */
    categoryInfo?: (ICategoryInfo|null);

    /** Annotations reasons */
    reasons?: (IEditorReason|null);

    /** Annotations topChartStream */
    topChartStream?: (IStream|null);

    /** Annotations categoryName */
    categoryName?: (string|null);

    /** Annotations chip */
    chip?: (IChip[]|null);

    /** Annotations displayBadge */
    displayBadge?: (IBadge[]|null);

    /** Annotations liveStreamUrl */
    liveStreamUrl?: (string|null);

    /** Annotations promotionStreamUrl */
    promotionStreamUrl?: (string|null);

    /** Annotations overlayMetaDataExtra */
    overlayMetaDataExtra?: (IOverlayMetaData|null);

    /** Annotations sectionImage */
    sectionImage?: (ISectionImage|null);

    /** Annotations categoryStream */
    categoryStream?: (ISubStream|null);
}

/** Represents an Annotations. */
export class Annotations implements IAnnotations {

    /**
     * Constructs a new Annotations.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAnnotations);

    /** Annotations sectionRelated. */
    public sectionRelated?: (ISectionMetaData|null);

    /** Annotations sectionMoreBy. */
    public sectionMoreBy?: (ISectionMetaData|null);

    /** Annotations warning. */
    public warning: IWarning[];

    /** Annotations sectionBodyOfWork. */
    public sectionBodyOfWork?: (ISectionMetaData|null);

    /** Annotations sectionCoreContent. */
    public sectionCoreContent?: (ISectionMetaData|null);

    /** Annotations overlayMetaData. */
    public overlayMetaData?: (IOverlayMetaData|null);

    /** Annotations badgeForCreator. */
    public badgeForCreator: IBadge[];

    /** Annotations infoBadge. */
    public infoBadge: IBadge[];

    /** Annotations annotationLink. */
    public annotationLink?: (IAnnotationLink|null);

    /** Annotations sectionCrossSell. */
    public sectionCrossSell?: (ISectionMetaData|null);

    /** Annotations sectionRelatedItemType. */
    public sectionRelatedItemType?: (ISectionMetaData|null);

    /** Annotations promotedDoc. */
    public promotedDoc: IPromotedDoc[];

    /** Annotations offerNote. */
    public offerNote: string;

    /** Annotations privacyPolicyUrl. */
    public privacyPolicyUrl: string;

    /** Annotations suggestionReasons. */
    public suggestionReasons?: (ISuggestionReasons|null);

    /** Annotations optimalDeviceClassWarning. */
    public optimalDeviceClassWarning?: (IWarning|null);

    /** Annotations badgeContainer. */
    public badgeContainer: IBadgeContainer[];

    /** Annotations sectionSuggestForRating. */
    public sectionSuggestForRating?: (ISectionMetaData|null);

    /** Annotations sectionPurchaseCrossSell. */
    public sectionPurchaseCrossSell?: (ISectionMetaData|null);

    /** Annotations overflowLink. */
    public overflowLink: IOverflowLink[];

    /** Annotations attributionHtml. */
    public attributionHtml: string;

    /** Annotations purchaseHistoryDetails. */
    public purchaseHistoryDetails?: (IPurchaseHistoryDetails|null);

    /** Annotations badgeForLegacyRating. */
    public badgeForLegacyRating?: (IBadge|null);

    /** Annotations voucherInfo. */
    public voucherInfo: IVoucherInfo[];

    /** Annotations sectionFeaturedApps. */
    public sectionFeaturedApps?: (ISectionMetaData|null);

    /** Annotations detailsPageCluster. */
    public detailsPageCluster: ISectionMetaData[];

    /** Annotations videoAnnotations. */
    public videoAnnotations?: (IVideoAnnotations|null);

    /** Annotations sectionPurchaseRelatedTopics. */
    public sectionPurchaseRelatedTopics?: (ISectionMetaData|null);

    /** Annotations mySubscriptionDetails. */
    public mySubscriptionDetails?: (IMySubscriptionDetails|null);

    /** Annotations myRewardDetails. */
    public myRewardDetails?: (IMyRewardDetails|null);

    /** Annotations featureBadge. */
    public featureBadge: IBadge[];

    /** Annotations snippet. */
    public snippet?: (ISnippet|null);

    /** Annotations downloadsLabel. */
    public downloadsLabel: string;

    /** Annotations badgeForRating. */
    public badgeForRating?: (IBadge|null);

    /** Annotations categoryInfo. */
    public categoryInfo?: (ICategoryInfo|null);

    /** Annotations reasons. */
    public reasons?: (IEditorReason|null);

    /** Annotations topChartStream. */
    public topChartStream?: (IStream|null);

    /** Annotations categoryName. */
    public categoryName: string;

    /** Annotations chip. */
    public chip: IChip[];

    /** Annotations displayBadge. */
    public displayBadge: IBadge[];

    /** Annotations liveStreamUrl. */
    public liveStreamUrl: string;

    /** Annotations promotionStreamUrl. */
    public promotionStreamUrl: string;

    /** Annotations overlayMetaDataExtra. */
    public overlayMetaDataExtra?: (IOverlayMetaData|null);

    /** Annotations sectionImage. */
    public sectionImage?: (ISectionImage|null);

    /** Annotations categoryStream. */
    public categoryStream?: (ISubStream|null);

    /**
     * Creates a new Annotations instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Annotations instance
     */
    public static create(properties?: IAnnotations): Annotations;

    /**
     * Encodes the specified Annotations message. Does not implicitly {@link Annotations.verify|verify} messages.
     * @param message Annotations message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAnnotations, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Annotations message, length delimited. Does not implicitly {@link Annotations.verify|verify} messages.
     * @param message Annotations message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAnnotations, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Annotations message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Annotations
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Annotations;

    /**
     * Decodes an Annotations message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Annotations
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Annotations;

    /**
     * Verifies an Annotations message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Annotations message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Annotations
     */
    public static fromObject(object: { [k: string]: any }): Annotations;

    /**
     * Creates a plain object from an Annotations message. Also converts values to other types if specified.
     * @param message Annotations
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Annotations, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Annotations to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EditorReason. */
export interface IEditorReason {

    /** EditorReason bulletin */
    bulletin?: (string[]|null);

    /** EditorReason description */
    description?: (string|null);
}

/** Represents an EditorReason. */
export class EditorReason implements IEditorReason {

    /**
     * Constructs a new EditorReason.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEditorReason);

    /** EditorReason bulletin. */
    public bulletin: string[];

    /** EditorReason description. */
    public description: string;

    /**
     * Creates a new EditorReason instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EditorReason instance
     */
    public static create(properties?: IEditorReason): EditorReason;

    /**
     * Encodes the specified EditorReason message. Does not implicitly {@link EditorReason.verify|verify} messages.
     * @param message EditorReason message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEditorReason, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EditorReason message, length delimited. Does not implicitly {@link EditorReason.verify|verify} messages.
     * @param message EditorReason message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEditorReason, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EditorReason message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EditorReason
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EditorReason;

    /**
     * Decodes an EditorReason message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EditorReason
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EditorReason;

    /**
     * Verifies an EditorReason message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EditorReason message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EditorReason
     */
    public static fromObject(object: { [k: string]: any }): EditorReason;

    /**
     * Creates a plain object from an EditorReason message. Also converts values to other types if specified.
     * @param message EditorReason
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EditorReason, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EditorReason to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SectionMetaData. */
export interface ISectionMetaData {

    /** SectionMetaData header */
    header?: (string|null);

    /** SectionMetaData listUrl */
    listUrl?: (string|null);

    /** SectionMetaData browseUrl */
    browseUrl?: (string|null);

    /** SectionMetaData description */
    description?: (string|null);
}

/** Represents a SectionMetaData. */
export class SectionMetaData implements ISectionMetaData {

    /**
     * Constructs a new SectionMetaData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISectionMetaData);

    /** SectionMetaData header. */
    public header: string;

    /** SectionMetaData listUrl. */
    public listUrl: string;

    /** SectionMetaData browseUrl. */
    public browseUrl: string;

    /** SectionMetaData description. */
    public description: string;

    /**
     * Creates a new SectionMetaData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SectionMetaData instance
     */
    public static create(properties?: ISectionMetaData): SectionMetaData;

    /**
     * Encodes the specified SectionMetaData message. Does not implicitly {@link SectionMetaData.verify|verify} messages.
     * @param message SectionMetaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISectionMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SectionMetaData message, length delimited. Does not implicitly {@link SectionMetaData.verify|verify} messages.
     * @param message SectionMetaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISectionMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SectionMetaData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SectionMetaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SectionMetaData;

    /**
     * Decodes a SectionMetaData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SectionMetaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SectionMetaData;

    /**
     * Verifies a SectionMetaData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SectionMetaData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SectionMetaData
     */
    public static fromObject(object: { [k: string]: any }): SectionMetaData;

    /**
     * Creates a plain object from a SectionMetaData message. Also converts values to other types if specified.
     * @param message SectionMetaData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SectionMetaData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SectionMetaData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OverlayMetaData. */
export interface IOverlayMetaData {

    /** OverlayMetaData overlayHeader */
    overlayHeader?: (IOverlayHeader|null);

    /** OverlayMetaData overlayTitle */
    overlayTitle?: (IOverlayTitle|null);

    /** OverlayMetaData overlayDescription */
    overlayDescription?: (IOverlayDescription|null);
}

/** Represents an OverlayMetaData. */
export class OverlayMetaData implements IOverlayMetaData {

    /**
     * Constructs a new OverlayMetaData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOverlayMetaData);

    /** OverlayMetaData overlayHeader. */
    public overlayHeader?: (IOverlayHeader|null);

    /** OverlayMetaData overlayTitle. */
    public overlayTitle?: (IOverlayTitle|null);

    /** OverlayMetaData overlayDescription. */
    public overlayDescription?: (IOverlayDescription|null);

    /**
     * Creates a new OverlayMetaData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OverlayMetaData instance
     */
    public static create(properties?: IOverlayMetaData): OverlayMetaData;

    /**
     * Encodes the specified OverlayMetaData message. Does not implicitly {@link OverlayMetaData.verify|verify} messages.
     * @param message OverlayMetaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOverlayMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OverlayMetaData message, length delimited. Does not implicitly {@link OverlayMetaData.verify|verify} messages.
     * @param message OverlayMetaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOverlayMetaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OverlayMetaData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OverlayMetaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OverlayMetaData;

    /**
     * Decodes an OverlayMetaData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OverlayMetaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OverlayMetaData;

    /**
     * Verifies an OverlayMetaData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OverlayMetaData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OverlayMetaData
     */
    public static fromObject(object: { [k: string]: any }): OverlayMetaData;

    /**
     * Creates a plain object from an OverlayMetaData message. Also converts values to other types if specified.
     * @param message OverlayMetaData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OverlayMetaData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OverlayMetaData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OverlayHeader. */
export interface IOverlayHeader {
}

/** Represents an OverlayHeader. */
export class OverlayHeader implements IOverlayHeader {

    /**
     * Constructs a new OverlayHeader.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOverlayHeader);

    /**
     * Creates a new OverlayHeader instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OverlayHeader instance
     */
    public static create(properties?: IOverlayHeader): OverlayHeader;

    /**
     * Encodes the specified OverlayHeader message. Does not implicitly {@link OverlayHeader.verify|verify} messages.
     * @param message OverlayHeader message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOverlayHeader, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OverlayHeader message, length delimited. Does not implicitly {@link OverlayHeader.verify|verify} messages.
     * @param message OverlayHeader message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOverlayHeader, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OverlayHeader message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OverlayHeader
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OverlayHeader;

    /**
     * Decodes an OverlayHeader message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OverlayHeader
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OverlayHeader;

    /**
     * Verifies an OverlayHeader message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OverlayHeader message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OverlayHeader
     */
    public static fromObject(object: { [k: string]: any }): OverlayHeader;

    /**
     * Creates a plain object from an OverlayHeader message. Also converts values to other types if specified.
     * @param message OverlayHeader
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OverlayHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OverlayHeader to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OverlayTitle. */
export interface IOverlayTitle {

    /** OverlayTitle title */
    title?: (string|null);

    /** OverlayTitle compositeImage */
    compositeImage?: (ICompositeImage|null);
}

/** Represents an OverlayTitle. */
export class OverlayTitle implements IOverlayTitle {

    /**
     * Constructs a new OverlayTitle.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOverlayTitle);

    /** OverlayTitle title. */
    public title: string;

    /** OverlayTitle compositeImage. */
    public compositeImage?: (ICompositeImage|null);

    /**
     * Creates a new OverlayTitle instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OverlayTitle instance
     */
    public static create(properties?: IOverlayTitle): OverlayTitle;

    /**
     * Encodes the specified OverlayTitle message. Does not implicitly {@link OverlayTitle.verify|verify} messages.
     * @param message OverlayTitle message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOverlayTitle, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OverlayTitle message, length delimited. Does not implicitly {@link OverlayTitle.verify|verify} messages.
     * @param message OverlayTitle message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOverlayTitle, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OverlayTitle message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OverlayTitle
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OverlayTitle;

    /**
     * Decodes an OverlayTitle message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OverlayTitle
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OverlayTitle;

    /**
     * Verifies an OverlayTitle message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OverlayTitle message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OverlayTitle
     */
    public static fromObject(object: { [k: string]: any }): OverlayTitle;

    /**
     * Creates a plain object from an OverlayTitle message. Also converts values to other types if specified.
     * @param message OverlayTitle
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OverlayTitle, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OverlayTitle to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CompositeImage. */
export interface ICompositeImage {

    /** CompositeImage type */
    type?: (number|null);

    /** CompositeImage url */
    url?: (string|null);

    /** CompositeImage typeAlt */
    typeAlt?: (number|null);

    /** CompositeImage title */
    title?: (string|null);

    /** CompositeImage urlAlt */
    urlAlt?: (string|null);
}

/** Represents a CompositeImage. */
export class CompositeImage implements ICompositeImage {

    /**
     * Constructs a new CompositeImage.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICompositeImage);

    /** CompositeImage type. */
    public type: number;

    /** CompositeImage url. */
    public url: string;

    /** CompositeImage typeAlt. */
    public typeAlt: number;

    /** CompositeImage title. */
    public title: string;

    /** CompositeImage urlAlt. */
    public urlAlt: string;

    /**
     * Creates a new CompositeImage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CompositeImage instance
     */
    public static create(properties?: ICompositeImage): CompositeImage;

    /**
     * Encodes the specified CompositeImage message. Does not implicitly {@link CompositeImage.verify|verify} messages.
     * @param message CompositeImage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICompositeImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CompositeImage message, length delimited. Does not implicitly {@link CompositeImage.verify|verify} messages.
     * @param message CompositeImage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICompositeImage, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CompositeImage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CompositeImage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CompositeImage;

    /**
     * Decodes a CompositeImage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CompositeImage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CompositeImage;

    /**
     * Verifies a CompositeImage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CompositeImage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CompositeImage
     */
    public static fromObject(object: { [k: string]: any }): CompositeImage;

    /**
     * Creates a plain object from a CompositeImage message. Also converts values to other types if specified.
     * @param message CompositeImage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CompositeImage, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CompositeImage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OverlayDescription. */
export interface IOverlayDescription {

    /** OverlayDescription description */
    description?: (string|null);
}

/** Represents an OverlayDescription. */
export class OverlayDescription implements IOverlayDescription {

    /**
     * Constructs a new OverlayDescription.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOverlayDescription);

    /** OverlayDescription description. */
    public description: string;

    /**
     * Creates a new OverlayDescription instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OverlayDescription instance
     */
    public static create(properties?: IOverlayDescription): OverlayDescription;

    /**
     * Encodes the specified OverlayDescription message. Does not implicitly {@link OverlayDescription.verify|verify} messages.
     * @param message OverlayDescription message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOverlayDescription, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OverlayDescription message, length delimited. Does not implicitly {@link OverlayDescription.verify|verify} messages.
     * @param message OverlayDescription message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOverlayDescription, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OverlayDescription message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OverlayDescription
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OverlayDescription;

    /**
     * Decodes an OverlayDescription message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OverlayDescription
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OverlayDescription;

    /**
     * Verifies an OverlayDescription message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OverlayDescription message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OverlayDescription
     */
    public static fromObject(object: { [k: string]: any }): OverlayDescription;

    /**
     * Creates a plain object from an OverlayDescription message. Also converts values to other types if specified.
     * @param message OverlayDescription
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OverlayDescription, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OverlayDescription to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SuggestionReasons. */
export interface ISuggestionReasons {

    /** SuggestionReasons reason */
    reason?: (IReason[]|null);

    /** SuggestionReasons neutralDismissal */
    neutralDismissal?: (IDismissal|null);

    /** SuggestionReasons positiveDismissal */
    positiveDismissal?: (IDismissal|null);
}

/** Represents a SuggestionReasons. */
export class SuggestionReasons implements ISuggestionReasons {

    /**
     * Constructs a new SuggestionReasons.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISuggestionReasons);

    /** SuggestionReasons reason. */
    public reason: IReason[];

    /** SuggestionReasons neutralDismissal. */
    public neutralDismissal?: (IDismissal|null);

    /** SuggestionReasons positiveDismissal. */
    public positiveDismissal?: (IDismissal|null);

    /**
     * Creates a new SuggestionReasons instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SuggestionReasons instance
     */
    public static create(properties?: ISuggestionReasons): SuggestionReasons;

    /**
     * Encodes the specified SuggestionReasons message. Does not implicitly {@link SuggestionReasons.verify|verify} messages.
     * @param message SuggestionReasons message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISuggestionReasons, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SuggestionReasons message, length delimited. Does not implicitly {@link SuggestionReasons.verify|verify} messages.
     * @param message SuggestionReasons message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISuggestionReasons, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SuggestionReasons message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SuggestionReasons
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SuggestionReasons;

    /**
     * Decodes a SuggestionReasons message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SuggestionReasons
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SuggestionReasons;

    /**
     * Verifies a SuggestionReasons message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SuggestionReasons message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SuggestionReasons
     */
    public static fromObject(object: { [k: string]: any }): SuggestionReasons;

    /**
     * Creates a plain object from a SuggestionReasons message. Also converts values to other types if specified.
     * @param message SuggestionReasons
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SuggestionReasons, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SuggestionReasons to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Reason. */
export interface IReason {

    /** Reason descriptionHtml */
    descriptionHtml?: (string|null);

    /** Reason reasonPlusOne */
    reasonPlusOne?: (IReasonPlusOne|null);

    /** Reason reasonReview */
    reasonReview?: (IReasonReview|null);

    /** Reason dismissal */
    dismissal?: (IDismissal|null);

    /** Reason reasonUserAction */
    reasonUserAction?: (IReasonUserAction|null);
}

/** Represents a Reason. */
export class Reason implements IReason {

    /**
     * Constructs a new Reason.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReason);

    /** Reason descriptionHtml. */
    public descriptionHtml: string;

    /** Reason reasonPlusOne. */
    public reasonPlusOne?: (IReasonPlusOne|null);

    /** Reason reasonReview. */
    public reasonReview?: (IReasonReview|null);

    /** Reason dismissal. */
    public dismissal?: (IDismissal|null);

    /** Reason reasonUserAction. */
    public reasonUserAction?: (IReasonUserAction|null);

    /**
     * Creates a new Reason instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Reason instance
     */
    public static create(properties?: IReason): Reason;

    /**
     * Encodes the specified Reason message. Does not implicitly {@link Reason.verify|verify} messages.
     * @param message Reason message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReason, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Reason message, length delimited. Does not implicitly {@link Reason.verify|verify} messages.
     * @param message Reason message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReason, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Reason message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Reason
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Reason;

    /**
     * Decodes a Reason message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Reason
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Reason;

    /**
     * Verifies a Reason message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Reason message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Reason
     */
    public static fromObject(object: { [k: string]: any }): Reason;

    /**
     * Creates a plain object from a Reason message. Also converts values to other types if specified.
     * @param message Reason
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Reason, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Reason to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReasonPlusOne. */
export interface IReasonPlusOne {

    /** ReasonPlusOne localizedDescriptionHtml */
    localizedDescriptionHtml?: (string|null);

    /** ReasonPlusOne userProfile */
    userProfile?: (IUserProfile[]|null);
}

/** Represents a ReasonPlusOne. */
export class ReasonPlusOne implements IReasonPlusOne {

    /**
     * Constructs a new ReasonPlusOne.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReasonPlusOne);

    /** ReasonPlusOne localizedDescriptionHtml. */
    public localizedDescriptionHtml: string;

    /** ReasonPlusOne userProfile. */
    public userProfile: IUserProfile[];

    /**
     * Creates a new ReasonPlusOne instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReasonPlusOne instance
     */
    public static create(properties?: IReasonPlusOne): ReasonPlusOne;

    /**
     * Encodes the specified ReasonPlusOne message. Does not implicitly {@link ReasonPlusOne.verify|verify} messages.
     * @param message ReasonPlusOne message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReasonPlusOne, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReasonPlusOne message, length delimited. Does not implicitly {@link ReasonPlusOne.verify|verify} messages.
     * @param message ReasonPlusOne message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReasonPlusOne, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReasonPlusOne message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReasonPlusOne
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReasonPlusOne;

    /**
     * Decodes a ReasonPlusOne message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReasonPlusOne
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReasonPlusOne;

    /**
     * Verifies a ReasonPlusOne message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReasonPlusOne message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReasonPlusOne
     */
    public static fromObject(object: { [k: string]: any }): ReasonPlusOne;

    /**
     * Creates a plain object from a ReasonPlusOne message. Also converts values to other types if specified.
     * @param message ReasonPlusOne
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReasonPlusOne, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReasonPlusOne to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReasonReview. */
export interface IReasonReview {

    /** ReasonReview review */
    review?: (IReview|null);
}

/** Represents a ReasonReview. */
export class ReasonReview implements IReasonReview {

    /**
     * Constructs a new ReasonReview.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReasonReview);

    /** ReasonReview review. */
    public review?: (IReview|null);

    /**
     * Creates a new ReasonReview instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReasonReview instance
     */
    public static create(properties?: IReasonReview): ReasonReview;

    /**
     * Encodes the specified ReasonReview message. Does not implicitly {@link ReasonReview.verify|verify} messages.
     * @param message ReasonReview message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReasonReview, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReasonReview message, length delimited. Does not implicitly {@link ReasonReview.verify|verify} messages.
     * @param message ReasonReview message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReasonReview, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReasonReview message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReasonReview
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReasonReview;

    /**
     * Decodes a ReasonReview message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReasonReview
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReasonReview;

    /**
     * Verifies a ReasonReview message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReasonReview message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReasonReview
     */
    public static fromObject(object: { [k: string]: any }): ReasonReview;

    /**
     * Creates a plain object from a ReasonReview message. Also converts values to other types if specified.
     * @param message ReasonReview
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReasonReview, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReasonReview to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReasonUserAction. */
export interface IReasonUserAction {

    /** ReasonUserAction userProfile */
    userProfile?: (IUserProfile|null);

    /** ReasonUserAction localizedDescriptionHtml */
    localizedDescriptionHtml?: (string|null);
}

/** Represents a ReasonUserAction. */
export class ReasonUserAction implements IReasonUserAction {

    /**
     * Constructs a new ReasonUserAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReasonUserAction);

    /** ReasonUserAction userProfile. */
    public userProfile?: (IUserProfile|null);

    /** ReasonUserAction localizedDescriptionHtml. */
    public localizedDescriptionHtml: string;

    /**
     * Creates a new ReasonUserAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReasonUserAction instance
     */
    public static create(properties?: IReasonUserAction): ReasonUserAction;

    /**
     * Encodes the specified ReasonUserAction message. Does not implicitly {@link ReasonUserAction.verify|verify} messages.
     * @param message ReasonUserAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReasonUserAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReasonUserAction message, length delimited. Does not implicitly {@link ReasonUserAction.verify|verify} messages.
     * @param message ReasonUserAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReasonUserAction, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReasonUserAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReasonUserAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReasonUserAction;

    /**
     * Decodes a ReasonUserAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReasonUserAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReasonUserAction;

    /**
     * Verifies a ReasonUserAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReasonUserAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReasonUserAction
     */
    public static fromObject(object: { [k: string]: any }): ReasonUserAction;

    /**
     * Creates a plain object from a ReasonUserAction message. Also converts values to other types if specified.
     * @param message ReasonUserAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReasonUserAction, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReasonUserAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Dismissal. */
export interface IDismissal {

    /** Dismissal url */
    url?: (string|null);

    /** Dismissal descriptionHtml */
    descriptionHtml?: (string|null);
}

/** Represents a Dismissal. */
export class Dismissal implements IDismissal {

    /**
     * Constructs a new Dismissal.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDismissal);

    /** Dismissal url. */
    public url: string;

    /** Dismissal descriptionHtml. */
    public descriptionHtml: string;

    /**
     * Creates a new Dismissal instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Dismissal instance
     */
    public static create(properties?: IDismissal): Dismissal;

    /**
     * Encodes the specified Dismissal message. Does not implicitly {@link Dismissal.verify|verify} messages.
     * @param message Dismissal message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDismissal, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Dismissal message, length delimited. Does not implicitly {@link Dismissal.verify|verify} messages.
     * @param message Dismissal message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDismissal, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Dismissal message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Dismissal
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Dismissal;

    /**
     * Decodes a Dismissal message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Dismissal
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Dismissal;

    /**
     * Verifies a Dismissal message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Dismissal message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Dismissal
     */
    public static fromObject(object: { [k: string]: any }): Dismissal;

    /**
     * Creates a plain object from a Dismissal message. Also converts values to other types if specified.
     * @param message Dismissal
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Dismissal, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Dismissal to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Snippet. */
export interface ISnippet {

    /** Snippet snippetHtml */
    snippetHtml?: (string|null);
}

/** Represents a Snippet. */
export class Snippet implements ISnippet {

    /**
     * Constructs a new Snippet.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISnippet);

    /** Snippet snippetHtml. */
    public snippetHtml: string;

    /**
     * Creates a new Snippet instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Snippet instance
     */
    public static create(properties?: ISnippet): Snippet;

    /**
     * Encodes the specified Snippet message. Does not implicitly {@link Snippet.verify|verify} messages.
     * @param message Snippet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISnippet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Snippet message, length delimited. Does not implicitly {@link Snippet.verify|verify} messages.
     * @param message Snippet message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISnippet, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Snippet message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Snippet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Snippet;

    /**
     * Decodes a Snippet message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Snippet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Snippet;

    /**
     * Verifies a Snippet message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Snippet message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Snippet
     */
    public static fromObject(object: { [k: string]: any }): Snippet;

    /**
     * Creates a plain object from a Snippet message. Also converts values to other types if specified.
     * @param message Snippet
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Snippet, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Snippet to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MyRewardDetails. */
export interface IMyRewardDetails {

    /** MyRewardDetails expirationTimeMillis */
    expirationTimeMillis?: (number|Long|null);

    /** MyRewardDetails expirationDescription */
    expirationDescription?: (string|null);

    /** MyRewardDetails buttonLabel */
    buttonLabel?: (string|null);

    /** MyRewardDetails linkAction */
    linkAction?: (ILink|null);
}

/** Represents a MyRewardDetails. */
export class MyRewardDetails implements IMyRewardDetails {

    /**
     * Constructs a new MyRewardDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMyRewardDetails);

    /** MyRewardDetails expirationTimeMillis. */
    public expirationTimeMillis: (number|Long);

    /** MyRewardDetails expirationDescription. */
    public expirationDescription: string;

    /** MyRewardDetails buttonLabel. */
    public buttonLabel: string;

    /** MyRewardDetails linkAction. */
    public linkAction?: (ILink|null);

    /**
     * Creates a new MyRewardDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MyRewardDetails instance
     */
    public static create(properties?: IMyRewardDetails): MyRewardDetails;

    /**
     * Encodes the specified MyRewardDetails message. Does not implicitly {@link MyRewardDetails.verify|verify} messages.
     * @param message MyRewardDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMyRewardDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MyRewardDetails message, length delimited. Does not implicitly {@link MyRewardDetails.verify|verify} messages.
     * @param message MyRewardDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMyRewardDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MyRewardDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MyRewardDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MyRewardDetails;

    /**
     * Decodes a MyRewardDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MyRewardDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MyRewardDetails;

    /**
     * Verifies a MyRewardDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MyRewardDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MyRewardDetails
     */
    public static fromObject(object: { [k: string]: any }): MyRewardDetails;

    /**
     * Creates a plain object from a MyRewardDetails message. Also converts values to other types if specified.
     * @param message MyRewardDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MyRewardDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MyRewardDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a MySubscriptionDetails. */
export interface IMySubscriptionDetails {

    /** MySubscriptionDetails subscriptionStatusHtml */
    subscriptionStatusHtml?: (string|null);

    /** MySubscriptionDetails title */
    title?: (string|null);

    /** MySubscriptionDetails titleByLineHtml */
    titleByLineHtml?: (string|null);

    /** MySubscriptionDetails formattedPrice */
    formattedPrice?: (string|null);

    /** MySubscriptionDetails priceByLineHtml */
    priceByLineHtml?: (string|null);

    /** MySubscriptionDetails cancelSubscription */
    cancelSubscription?: (boolean|null);

    /** MySubscriptionDetails paymentDeclinedLearnMoreLink */
    paymentDeclinedLearnMoreLink?: (ILink|null);

    /** MySubscriptionDetails inTrialPeriod */
    inTrialPeriod?: (boolean|null);

    /** MySubscriptionDetails titleByLineIcon */
    titleByLineIcon?: (IImage|null);
}

/** Represents a MySubscriptionDetails. */
export class MySubscriptionDetails implements IMySubscriptionDetails {

    /**
     * Constructs a new MySubscriptionDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMySubscriptionDetails);

    /** MySubscriptionDetails subscriptionStatusHtml. */
    public subscriptionStatusHtml: string;

    /** MySubscriptionDetails title. */
    public title: string;

    /** MySubscriptionDetails titleByLineHtml. */
    public titleByLineHtml: string;

    /** MySubscriptionDetails formattedPrice. */
    public formattedPrice: string;

    /** MySubscriptionDetails priceByLineHtml. */
    public priceByLineHtml: string;

    /** MySubscriptionDetails cancelSubscription. */
    public cancelSubscription: boolean;

    /** MySubscriptionDetails paymentDeclinedLearnMoreLink. */
    public paymentDeclinedLearnMoreLink?: (ILink|null);

    /** MySubscriptionDetails inTrialPeriod. */
    public inTrialPeriod: boolean;

    /** MySubscriptionDetails titleByLineIcon. */
    public titleByLineIcon?: (IImage|null);

    /**
     * Creates a new MySubscriptionDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MySubscriptionDetails instance
     */
    public static create(properties?: IMySubscriptionDetails): MySubscriptionDetails;

    /**
     * Encodes the specified MySubscriptionDetails message. Does not implicitly {@link MySubscriptionDetails.verify|verify} messages.
     * @param message MySubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMySubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MySubscriptionDetails message, length delimited. Does not implicitly {@link MySubscriptionDetails.verify|verify} messages.
     * @param message MySubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMySubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MySubscriptionDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MySubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MySubscriptionDetails;

    /**
     * Decodes a MySubscriptionDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MySubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MySubscriptionDetails;

    /**
     * Verifies a MySubscriptionDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MySubscriptionDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MySubscriptionDetails
     */
    public static fromObject(object: { [k: string]: any }): MySubscriptionDetails;

    /**
     * Creates a plain object from a MySubscriptionDetails message. Also converts values to other types if specified.
     * @param message MySubscriptionDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MySubscriptionDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MySubscriptionDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a VideoAnnotations. */
export interface IVideoAnnotations {

    /** VideoAnnotations bundle */
    bundle?: (boolean|null);

    /** VideoAnnotations bundleContentListUrl */
    bundleContentListUrl?: (string|null);

    /** VideoAnnotations extrasContentListUrl */
    extrasContentListUrl?: (string|null);

    /** VideoAnnotations alsoAvailableInListUrl */
    alsoAvailableInListUrl?: (string|null);

    /** VideoAnnotations bundleDocId */
    bundleDocId?: (IDocId[]|null);
}

/** Represents a VideoAnnotations. */
export class VideoAnnotations implements IVideoAnnotations {

    /**
     * Constructs a new VideoAnnotations.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVideoAnnotations);

    /** VideoAnnotations bundle. */
    public bundle: boolean;

    /** VideoAnnotations bundleContentListUrl. */
    public bundleContentListUrl: string;

    /** VideoAnnotations extrasContentListUrl. */
    public extrasContentListUrl: string;

    /** VideoAnnotations alsoAvailableInListUrl. */
    public alsoAvailableInListUrl: string;

    /** VideoAnnotations bundleDocId. */
    public bundleDocId: IDocId[];

    /**
     * Creates a new VideoAnnotations instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VideoAnnotations instance
     */
    public static create(properties?: IVideoAnnotations): VideoAnnotations;

    /**
     * Encodes the specified VideoAnnotations message. Does not implicitly {@link VideoAnnotations.verify|verify} messages.
     * @param message VideoAnnotations message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVideoAnnotations, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VideoAnnotations message, length delimited. Does not implicitly {@link VideoAnnotations.verify|verify} messages.
     * @param message VideoAnnotations message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVideoAnnotations, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VideoAnnotations message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VideoAnnotations
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VideoAnnotations;

    /**
     * Decodes a VideoAnnotations message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VideoAnnotations
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VideoAnnotations;

    /**
     * Verifies a VideoAnnotations message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VideoAnnotations message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VideoAnnotations
     */
    public static fromObject(object: { [k: string]: any }): VideoAnnotations;

    /**
     * Creates a plain object from a VideoAnnotations message. Also converts values to other types if specified.
     * @param message VideoAnnotations
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VideoAnnotations, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VideoAnnotations to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a VoucherInfo. */
export interface IVoucherInfo {

    /** VoucherInfo item */
    item?: (IItem|null);

    /** VoucherInfo offer */
    offer?: (IOffer[]|null);
}

/** Represents a VoucherInfo. */
export class VoucherInfo implements IVoucherInfo {

    /**
     * Constructs a new VoucherInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IVoucherInfo);

    /** VoucherInfo item. */
    public item?: (IItem|null);

    /** VoucherInfo offer. */
    public offer: IOffer[];

    /**
     * Creates a new VoucherInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns VoucherInfo instance
     */
    public static create(properties?: IVoucherInfo): VoucherInfo;

    /**
     * Encodes the specified VoucherInfo message. Does not implicitly {@link VoucherInfo.verify|verify} messages.
     * @param message VoucherInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IVoucherInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified VoucherInfo message, length delimited. Does not implicitly {@link VoucherInfo.verify|verify} messages.
     * @param message VoucherInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IVoucherInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a VoucherInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns VoucherInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): VoucherInfo;

    /**
     * Decodes a VoucherInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns VoucherInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): VoucherInfo;

    /**
     * Verifies a VoucherInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a VoucherInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns VoucherInfo
     */
    public static fromObject(object: { [k: string]: any }): VoucherInfo;

    /**
     * Creates a plain object from a VoucherInfo message. Also converts values to other types if specified.
     * @param message VoucherInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: VoucherInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this VoucherInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BadgeContainer. */
export interface IBadgeContainer {

    /** BadgeContainer title */
    title?: (string|null);

    /** BadgeContainer image */
    image?: (IImage[]|null);

    /** BadgeContainer badge */
    badge?: (IBadge[]|null);
}

/** Represents a BadgeContainer. */
export class BadgeContainer implements IBadgeContainer {

    /**
     * Constructs a new BadgeContainer.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBadgeContainer);

    /** BadgeContainer title. */
    public title: string;

    /** BadgeContainer image. */
    public image: IImage[];

    /** BadgeContainer badge. */
    public badge: IBadge[];

    /**
     * Creates a new BadgeContainer instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BadgeContainer instance
     */
    public static create(properties?: IBadgeContainer): BadgeContainer;

    /**
     * Encodes the specified BadgeContainer message. Does not implicitly {@link BadgeContainer.verify|verify} messages.
     * @param message BadgeContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBadgeContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BadgeContainer message, length delimited. Does not implicitly {@link BadgeContainer.verify|verify} messages.
     * @param message BadgeContainer message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBadgeContainer, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BadgeContainer message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BadgeContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BadgeContainer;

    /**
     * Decodes a BadgeContainer message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BadgeContainer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BadgeContainer;

    /**
     * Verifies a BadgeContainer message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BadgeContainer message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BadgeContainer
     */
    public static fromObject(object: { [k: string]: any }): BadgeContainer;

    /**
     * Creates a plain object from a BadgeContainer message. Also converts values to other types if specified.
     * @param message BadgeContainer
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BadgeContainer, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BadgeContainer to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an OverflowLink. */
export interface IOverflowLink {

    /** OverflowLink title */
    title?: (string|null);

    /** OverflowLink link */
    link?: (ILink|null);
}

/** Represents an OverflowLink. */
export class OverflowLink implements IOverflowLink {

    /**
     * Constructs a new OverflowLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IOverflowLink);

    /** OverflowLink title. */
    public title: string;

    /** OverflowLink link. */
    public link?: (ILink|null);

    /**
     * Creates a new OverflowLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns OverflowLink instance
     */
    public static create(properties?: IOverflowLink): OverflowLink;

    /**
     * Encodes the specified OverflowLink message. Does not implicitly {@link OverflowLink.verify|verify} messages.
     * @param message OverflowLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IOverflowLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified OverflowLink message, length delimited. Does not implicitly {@link OverflowLink.verify|verify} messages.
     * @param message OverflowLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IOverflowLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an OverflowLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns OverflowLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): OverflowLink;

    /**
     * Decodes an OverflowLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns OverflowLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): OverflowLink;

    /**
     * Verifies an OverflowLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an OverflowLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns OverflowLink
     */
    public static fromObject(object: { [k: string]: any }): OverflowLink;

    /**
     * Creates a plain object from an OverflowLink message. Also converts values to other types if specified.
     * @param message OverflowLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: OverflowLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this OverflowLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PromotedDoc. */
export interface IPromotedDoc {

    /** PromotedDoc title */
    title?: (string|null);

    /** PromotedDoc subtitle */
    subtitle?: (string|null);

    /** PromotedDoc image */
    image?: (IImage[]|null);

    /** PromotedDoc description */
    description?: (string|null);

    /** PromotedDoc detailsUrl */
    detailsUrl?: (string|null);
}

/** Represents a PromotedDoc. */
export class PromotedDoc implements IPromotedDoc {

    /**
     * Constructs a new PromotedDoc.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPromotedDoc);

    /** PromotedDoc title. */
    public title: string;

    /** PromotedDoc subtitle. */
    public subtitle: string;

    /** PromotedDoc image. */
    public image: IImage[];

    /** PromotedDoc description. */
    public description: string;

    /** PromotedDoc detailsUrl. */
    public detailsUrl: string;

    /**
     * Creates a new PromotedDoc instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PromotedDoc instance
     */
    public static create(properties?: IPromotedDoc): PromotedDoc;

    /**
     * Encodes the specified PromotedDoc message. Does not implicitly {@link PromotedDoc.verify|verify} messages.
     * @param message PromotedDoc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPromotedDoc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PromotedDoc message, length delimited. Does not implicitly {@link PromotedDoc.verify|verify} messages.
     * @param message PromotedDoc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPromotedDoc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PromotedDoc message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PromotedDoc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PromotedDoc;

    /**
     * Decodes a PromotedDoc message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PromotedDoc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PromotedDoc;

    /**
     * Verifies a PromotedDoc message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PromotedDoc message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PromotedDoc
     */
    public static fromObject(object: { [k: string]: any }): PromotedDoc;

    /**
     * Creates a plain object from a PromotedDoc message. Also converts values to other types if specified.
     * @param message PromotedDoc
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PromotedDoc, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PromotedDoc to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Warning. */
export interface IWarning {

    /** Warning localizedMessage */
    localizedMessage?: (string|null);
}

/** Represents a Warning. */
export class Warning implements IWarning {

    /**
     * Constructs a new Warning.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarning);

    /** Warning localizedMessage. */
    public localizedMessage: string;

    /**
     * Creates a new Warning instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Warning instance
     */
    public static create(properties?: IWarning): Warning;

    /**
     * Encodes the specified Warning message. Does not implicitly {@link Warning.verify|verify} messages.
     * @param message Warning message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarning, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Warning message, length delimited. Does not implicitly {@link Warning.verify|verify} messages.
     * @param message Warning message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarning, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Warning message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Warning
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Warning;

    /**
     * Decodes a Warning message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Warning
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Warning;

    /**
     * Verifies a Warning message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Warning message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Warning
     */
    public static fromObject(object: { [k: string]: any }): Warning;

    /**
     * Creates a plain object from a Warning message. Also converts values to other types if specified.
     * @param message Warning
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Warning, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Warning to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AnnotationLink. */
export interface IAnnotationLink {

    /** AnnotationLink uri */
    uri?: (string|null);

    /** AnnotationLink resolvedLink */
    resolvedLink?: (IResolvedLink|null);

    /** AnnotationLink uriBackend */
    uriBackend?: (number|null);
}

/** Represents an AnnotationLink. */
export class AnnotationLink implements IAnnotationLink {

    /**
     * Constructs a new AnnotationLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAnnotationLink);

    /** AnnotationLink uri. */
    public uri: string;

    /** AnnotationLink resolvedLink. */
    public resolvedLink?: (IResolvedLink|null);

    /** AnnotationLink uriBackend. */
    public uriBackend: number;

    /**
     * Creates a new AnnotationLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AnnotationLink instance
     */
    public static create(properties?: IAnnotationLink): AnnotationLink;

    /**
     * Encodes the specified AnnotationLink message. Does not implicitly {@link AnnotationLink.verify|verify} messages.
     * @param message AnnotationLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAnnotationLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AnnotationLink message, length delimited. Does not implicitly {@link AnnotationLink.verify|verify} messages.
     * @param message AnnotationLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAnnotationLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AnnotationLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AnnotationLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AnnotationLink;

    /**
     * Decodes an AnnotationLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AnnotationLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AnnotationLink;

    /**
     * Verifies an AnnotationLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AnnotationLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AnnotationLink
     */
    public static fromObject(object: { [k: string]: any }): AnnotationLink;

    /**
     * Creates a plain object from an AnnotationLink message. Also converts values to other types if specified.
     * @param message AnnotationLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AnnotationLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AnnotationLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Rated. */
export interface IRated {

    /** Rated label */
    label?: (string|null);

    /** Rated image */
    image?: (IImage|null);

    /** Rated learnMoreHtmlLink */
    learnMoreHtmlLink?: (string|null);
}

/** Represents a Rated. */
export class Rated implements IRated {

    /**
     * Constructs a new Rated.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRated);

    /** Rated label. */
    public label: string;

    /** Rated image. */
    public image?: (IImage|null);

    /** Rated learnMoreHtmlLink. */
    public learnMoreHtmlLink: string;

    /**
     * Creates a new Rated instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Rated instance
     */
    public static create(properties?: IRated): Rated;

    /**
     * Encodes the specified Rated message. Does not implicitly {@link Rated.verify|verify} messages.
     * @param message Rated message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRated, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Rated message, length delimited. Does not implicitly {@link Rated.verify|verify} messages.
     * @param message Rated message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRated, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Rated message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Rated
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Rated;

    /**
     * Decodes a Rated message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Rated
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Rated;

    /**
     * Verifies a Rated message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Rated message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Rated
     */
    public static fromObject(object: { [k: string]: any }): Rated;

    /**
     * Creates a plain object from a Rated message. Also converts values to other types if specified.
     * @param message Rated
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Rated, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Rated to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Badge. */
export interface IBadge {

    /** Badge major */
    major?: (string|null);

    /** Badge image */
    image?: (IImage|null);

    /** Badge minor */
    minor?: (string|null);

    /** Badge minorHtml */
    minorHtml?: (string|null);

    /** Badge subBadge */
    subBadge?: (ISubBadge|null);

    /** Badge link */
    link?: (IStreamLink|null);

    /** Badge description */
    description?: (string|null);

    /** Badge stream */
    stream?: (ISubStream|null);
}

/** Represents a Badge. */
export class Badge implements IBadge {

    /**
     * Constructs a new Badge.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBadge);

    /** Badge major. */
    public major: string;

    /** Badge image. */
    public image?: (IImage|null);

    /** Badge minor. */
    public minor: string;

    /** Badge minorHtml. */
    public minorHtml: string;

    /** Badge subBadge. */
    public subBadge?: (ISubBadge|null);

    /** Badge link. */
    public link?: (IStreamLink|null);

    /** Badge description. */
    public description: string;

    /** Badge stream. */
    public stream?: (ISubStream|null);

    /**
     * Creates a new Badge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Badge instance
     */
    public static create(properties?: IBadge): Badge;

    /**
     * Encodes the specified Badge message. Does not implicitly {@link Badge.verify|verify} messages.
     * @param message Badge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Badge message, length delimited. Does not implicitly {@link Badge.verify|verify} messages.
     * @param message Badge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Badge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Badge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Badge;

    /**
     * Decodes a Badge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Badge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Badge;

    /**
     * Verifies a Badge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Badge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Badge
     */
    public static fromObject(object: { [k: string]: any }): Badge;

    /**
     * Creates a plain object from a Badge message. Also converts values to other types if specified.
     * @param message Badge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Badge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Badge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SubBadge. */
export interface ISubBadge {

    /** SubBadge image */
    image?: (IImage|null);

    /** SubBadge description */
    description?: (string|null);

    /** SubBadge link */
    link?: (IStreamLink|null);
}

/** Represents a SubBadge. */
export class SubBadge implements ISubBadge {

    /**
     * Constructs a new SubBadge.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISubBadge);

    /** SubBadge image. */
    public image?: (IImage|null);

    /** SubBadge description. */
    public description: string;

    /** SubBadge link. */
    public link?: (IStreamLink|null);

    /**
     * Creates a new SubBadge instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SubBadge instance
     */
    public static create(properties?: ISubBadge): SubBadge;

    /**
     * Encodes the specified SubBadge message. Does not implicitly {@link SubBadge.verify|verify} messages.
     * @param message SubBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISubBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SubBadge message, length delimited. Does not implicitly {@link SubBadge.verify|verify} messages.
     * @param message SubBadge message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISubBadge, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SubBadge message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SubBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SubBadge;

    /**
     * Decodes a SubBadge message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SubBadge
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SubBadge;

    /**
     * Verifies a SubBadge message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SubBadge message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SubBadge
     */
    public static fromObject(object: { [k: string]: any }): SubBadge;

    /**
     * Creates a plain object from a SubBadge message. Also converts values to other types if specified.
     * @param message SubBadge
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SubBadge, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SubBadge to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Stream. */
export interface IStream {

    /** Stream title */
    title?: (string|null);

    /** Stream stream */
    stream?: (ISubStream|null);

    /** Stream subtitle */
    subtitle?: (string|null);
}

/** Represents a Stream. */
export class Stream implements IStream {

    /**
     * Constructs a new Stream.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStream);

    /** Stream title. */
    public title: string;

    /** Stream stream. */
    public stream?: (ISubStream|null);

    /** Stream subtitle. */
    public subtitle: string;

    /**
     * Creates a new Stream instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Stream instance
     */
    public static create(properties?: IStream): Stream;

    /**
     * Encodes the specified Stream message. Does not implicitly {@link Stream.verify|verify} messages.
     * @param message Stream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Stream message, length delimited. Does not implicitly {@link Stream.verify|verify} messages.
     * @param message Stream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Stream message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Stream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Stream;

    /**
     * Decodes a Stream message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Stream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Stream;

    /**
     * Verifies a Stream message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Stream message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Stream
     */
    public static fromObject(object: { [k: string]: any }): Stream;

    /**
     * Creates a plain object from a Stream message. Also converts values to other types if specified.
     * @param message Stream
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Stream, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Stream to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SubStream. */
export interface ISubStream {

    /** SubStream link */
    link?: (IStreamLink|null);
}

/** Represents a SubStream. */
export class SubStream implements ISubStream {

    /**
     * Constructs a new SubStream.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISubStream);

    /** SubStream link. */
    public link?: (IStreamLink|null);

    /**
     * Creates a new SubStream instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SubStream instance
     */
    public static create(properties?: ISubStream): SubStream;

    /**
     * Encodes the specified SubStream message. Does not implicitly {@link SubStream.verify|verify} messages.
     * @param message SubStream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISubStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SubStream message, length delimited. Does not implicitly {@link SubStream.verify|verify} messages.
     * @param message SubStream message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISubStream, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SubStream message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SubStream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SubStream;

    /**
     * Decodes a SubStream message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SubStream
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SubStream;

    /**
     * Verifies a SubStream message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SubStream message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SubStream
     */
    public static fromObject(object: { [k: string]: any }): SubStream;

    /**
     * Creates a plain object from a SubStream message. Also converts values to other types if specified.
     * @param message SubStream
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SubStream, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SubStream to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Link. */
export interface ILink {

    /** Link uri */
    uri?: (string|null);

    /** Link resolvedLink */
    resolvedLink?: (IResolvedLink|null);

    /** Link uriBackend */
    uriBackend?: (number|null);
}

/** Represents a Link. */
export class Link implements ILink {

    /**
     * Constructs a new Link.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILink);

    /** Link uri. */
    public uri: string;

    /** Link resolvedLink. */
    public resolvedLink?: (IResolvedLink|null);

    /** Link uriBackend. */
    public uriBackend: number;

    /**
     * Creates a new Link instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Link instance
     */
    public static create(properties?: ILink): Link;

    /**
     * Encodes the specified Link message. Does not implicitly {@link Link.verify|verify} messages.
     * @param message Link message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Link message, length delimited. Does not implicitly {@link Link.verify|verify} messages.
     * @param message Link message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Link message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Link
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Link;

    /**
     * Decodes a Link message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Link
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Link;

    /**
     * Verifies a Link message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Link message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Link
     */
    public static fromObject(object: { [k: string]: any }): Link;

    /**
     * Creates a plain object from a Link message. Also converts values to other types if specified.
     * @param message Link
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Link, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Link to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a StreamLink. */
export interface IStreamLink {

    /** StreamLink url */
    url?: (string|null);

    /** StreamLink streamUrl */
    streamUrl?: (string|null);

    /** StreamLink searchUrl */
    searchUrl?: (string|null);

    /** StreamLink subCategoryUrl */
    subCategoryUrl?: (string|null);

    /** StreamLink searchQuery */
    searchQuery?: (string|null);
}

/** Represents a StreamLink. */
export class StreamLink implements IStreamLink {

    /**
     * Constructs a new StreamLink.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStreamLink);

    /** StreamLink url. */
    public url: string;

    /** StreamLink streamUrl. */
    public streamUrl: string;

    /** StreamLink searchUrl. */
    public searchUrl: string;

    /** StreamLink subCategoryUrl. */
    public subCategoryUrl: string;

    /** StreamLink searchQuery. */
    public searchQuery: string;

    /**
     * Creates a new StreamLink instance using the specified properties.
     * @param [properties] Properties to set
     * @returns StreamLink instance
     */
    public static create(properties?: IStreamLink): StreamLink;

    /**
     * Encodes the specified StreamLink message. Does not implicitly {@link StreamLink.verify|verify} messages.
     * @param message StreamLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStreamLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified StreamLink message, length delimited. Does not implicitly {@link StreamLink.verify|verify} messages.
     * @param message StreamLink message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStreamLink, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a StreamLink message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns StreamLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): StreamLink;

    /**
     * Decodes a StreamLink message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns StreamLink
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): StreamLink;

    /**
     * Verifies a StreamLink message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a StreamLink message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns StreamLink
     */
    public static fromObject(object: { [k: string]: any }): StreamLink;

    /**
     * Creates a plain object from a StreamLink message. Also converts values to other types if specified.
     * @param message StreamLink
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: StreamLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this StreamLink to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Chip. */
export interface IChip {

    /** Chip title */
    title?: (string|null);

    /** Chip stream */
    stream?: (ISubStream|null);
}

/** Represents a Chip. */
export class Chip implements IChip {

    /**
     * Constructs a new Chip.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChip);

    /** Chip title. */
    public title: string;

    /** Chip stream. */
    public stream?: (ISubStream|null);

    /**
     * Creates a new Chip instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Chip instance
     */
    public static create(properties?: IChip): Chip;

    /**
     * Encodes the specified Chip message. Does not implicitly {@link Chip.verify|verify} messages.
     * @param message Chip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Chip message, length delimited. Does not implicitly {@link Chip.verify|verify} messages.
     * @param message Chip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Chip message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Chip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Chip;

    /**
     * Decodes a Chip message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Chip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Chip;

    /**
     * Verifies a Chip message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Chip message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Chip
     */
    public static fromObject(object: { [k: string]: any }): Chip;

    /**
     * Creates a plain object from a Chip message. Also converts values to other types if specified.
     * @param message Chip
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Chip, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Chip to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CategoryInfo. */
export interface ICategoryInfo {

    /** CategoryInfo category */
    category?: (string|null);

    /** CategoryInfo appCategory */
    appCategory?: (string|null);
}

/** Represents a CategoryInfo. */
export class CategoryInfo implements ICategoryInfo {

    /**
     * Constructs a new CategoryInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICategoryInfo);

    /** CategoryInfo category. */
    public category: string;

    /** CategoryInfo appCategory. */
    public appCategory: string;

    /**
     * Creates a new CategoryInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CategoryInfo instance
     */
    public static create(properties?: ICategoryInfo): CategoryInfo;

    /**
     * Encodes the specified CategoryInfo message. Does not implicitly {@link CategoryInfo.verify|verify} messages.
     * @param message CategoryInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICategoryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CategoryInfo message, length delimited. Does not implicitly {@link CategoryInfo.verify|verify} messages.
     * @param message CategoryInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICategoryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CategoryInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CategoryInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CategoryInfo;

    /**
     * Decodes a CategoryInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CategoryInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CategoryInfo;

    /**
     * Verifies a CategoryInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CategoryInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CategoryInfo
     */
    public static fromObject(object: { [k: string]: any }): CategoryInfo;

    /**
     * Creates a plain object from a CategoryInfo message. Also converts values to other types if specified.
     * @param message CategoryInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CategoryInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CategoryInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EncryptedSubscriberInfo. */
export interface IEncryptedSubscriberInfo {

    /** EncryptedSubscriberInfo data */
    data?: (string|null);

    /** EncryptedSubscriberInfo encryptedKey */
    encryptedKey?: (string|null);

    /** EncryptedSubscriberInfo signature */
    signature?: (string|null);

    /** EncryptedSubscriberInfo initVector */
    initVector?: (string|null);

    /** EncryptedSubscriberInfo googleKeyVersion */
    googleKeyVersion?: (number|null);

    /** EncryptedSubscriberInfo carrierKeyVersion */
    carrierKeyVersion?: (number|null);
}

/** Represents an EncryptedSubscriberInfo. */
export class EncryptedSubscriberInfo implements IEncryptedSubscriberInfo {

    /**
     * Constructs a new EncryptedSubscriberInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEncryptedSubscriberInfo);

    /** EncryptedSubscriberInfo data. */
    public data: string;

    /** EncryptedSubscriberInfo encryptedKey. */
    public encryptedKey: string;

    /** EncryptedSubscriberInfo signature. */
    public signature: string;

    /** EncryptedSubscriberInfo initVector. */
    public initVector: string;

    /** EncryptedSubscriberInfo googleKeyVersion. */
    public googleKeyVersion: number;

    /** EncryptedSubscriberInfo carrierKeyVersion. */
    public carrierKeyVersion: number;

    /**
     * Creates a new EncryptedSubscriberInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EncryptedSubscriberInfo instance
     */
    public static create(properties?: IEncryptedSubscriberInfo): EncryptedSubscriberInfo;

    /**
     * Encodes the specified EncryptedSubscriberInfo message. Does not implicitly {@link EncryptedSubscriberInfo.verify|verify} messages.
     * @param message EncryptedSubscriberInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEncryptedSubscriberInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EncryptedSubscriberInfo message, length delimited. Does not implicitly {@link EncryptedSubscriberInfo.verify|verify} messages.
     * @param message EncryptedSubscriberInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEncryptedSubscriberInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EncryptedSubscriberInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EncryptedSubscriberInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EncryptedSubscriberInfo;

    /**
     * Decodes an EncryptedSubscriberInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EncryptedSubscriberInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EncryptedSubscriberInfo;

    /**
     * Verifies an EncryptedSubscriberInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EncryptedSubscriberInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EncryptedSubscriberInfo
     */
    public static fromObject(object: { [k: string]: any }): EncryptedSubscriberInfo;

    /**
     * Creates a plain object from an EncryptedSubscriberInfo message. Also converts values to other types if specified.
     * @param message EncryptedSubscriberInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EncryptedSubscriberInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EncryptedSubscriberInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Availability. */
export interface IAvailability {

    /** Availability restriction */
    restriction?: (number|null);

    /** Availability offerType */
    offerType?: (number|null);

    /** Availability rule */
    rule?: (IRule|null);

    /** Availability perDeviceAvailabilityRestriction */
    perDeviceAvailabilityRestriction?: (Availability.IPerDeviceAvailabilityRestriction[]|null);

    /** Availability availableIfOwned */
    availableIfOwned?: (boolean|null);

    /** Availability install */
    install?: (IInstall[]|null);

    /** Availability filterInfo */
    filterInfo?: (IFilterEvaluationInfo|null);

    /** Availability ownershipInfo */
    ownershipInfo?: (IOwnershipInfo|null);

    /** Availability availabilityProblem */
    availabilityProblem?: (IAvailabilityProblem[]|null);

    /** Availability hidden */
    hidden?: (boolean|null);
}

/** Represents an Availability. */
export class Availability implements IAvailability {

    /**
     * Constructs a new Availability.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAvailability);

    /** Availability restriction. */
    public restriction: number;

    /** Availability offerType. */
    public offerType: number;

    /** Availability rule. */
    public rule?: (IRule|null);

    /** Availability perDeviceAvailabilityRestriction. */
    public perDeviceAvailabilityRestriction: Availability.IPerDeviceAvailabilityRestriction[];

    /** Availability availableIfOwned. */
    public availableIfOwned: boolean;

    /** Availability install. */
    public install: IInstall[];

    /** Availability filterInfo. */
    public filterInfo?: (IFilterEvaluationInfo|null);

    /** Availability ownershipInfo. */
    public ownershipInfo?: (IOwnershipInfo|null);

    /** Availability availabilityProblem. */
    public availabilityProblem: IAvailabilityProblem[];

    /** Availability hidden. */
    public hidden: boolean;

    /**
     * Creates a new Availability instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Availability instance
     */
    public static create(properties?: IAvailability): Availability;

    /**
     * Encodes the specified Availability message. Does not implicitly {@link Availability.verify|verify} messages.
     * @param message Availability message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAvailability, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Availability message, length delimited. Does not implicitly {@link Availability.verify|verify} messages.
     * @param message Availability message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAvailability, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Availability message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Availability
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Availability;

    /**
     * Decodes an Availability message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Availability
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Availability;

    /**
     * Verifies an Availability message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Availability message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Availability
     */
    public static fromObject(object: { [k: string]: any }): Availability;

    /**
     * Creates a plain object from an Availability message. Also converts values to other types if specified.
     * @param message Availability
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Availability, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Availability to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace Availability {

    /** Properties of a PerDeviceAvailabilityRestriction. */
    interface IPerDeviceAvailabilityRestriction {

        /** PerDeviceAvailabilityRestriction androidId */
        androidId?: (number|Long|null);

        /** PerDeviceAvailabilityRestriction deviceRestriction */
        deviceRestriction?: (number|null);

        /** PerDeviceAvailabilityRestriction channelId */
        channelId?: (number|Long|null);

        /** PerDeviceAvailabilityRestriction filterInfo */
        filterInfo?: (IFilterEvaluationInfo|null);
    }

    /** Represents a PerDeviceAvailabilityRestriction. */
    class PerDeviceAvailabilityRestriction implements IPerDeviceAvailabilityRestriction {

        /**
         * Constructs a new PerDeviceAvailabilityRestriction.
         * @param [properties] Properties to set
         */
        constructor(properties?: Availability.IPerDeviceAvailabilityRestriction);

        /** PerDeviceAvailabilityRestriction androidId. */
        public androidId: (number|Long);

        /** PerDeviceAvailabilityRestriction deviceRestriction. */
        public deviceRestriction: number;

        /** PerDeviceAvailabilityRestriction channelId. */
        public channelId: (number|Long);

        /** PerDeviceAvailabilityRestriction filterInfo. */
        public filterInfo?: (IFilterEvaluationInfo|null);

        /**
         * Creates a new PerDeviceAvailabilityRestriction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PerDeviceAvailabilityRestriction instance
         */
        public static create(properties?: Availability.IPerDeviceAvailabilityRestriction): Availability.PerDeviceAvailabilityRestriction;

        /**
         * Encodes the specified PerDeviceAvailabilityRestriction message. Does not implicitly {@link Availability.PerDeviceAvailabilityRestriction.verify|verify} messages.
         * @param message PerDeviceAvailabilityRestriction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Availability.IPerDeviceAvailabilityRestriction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PerDeviceAvailabilityRestriction message, length delimited. Does not implicitly {@link Availability.PerDeviceAvailabilityRestriction.verify|verify} messages.
         * @param message PerDeviceAvailabilityRestriction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Availability.IPerDeviceAvailabilityRestriction, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PerDeviceAvailabilityRestriction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PerDeviceAvailabilityRestriction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Availability.PerDeviceAvailabilityRestriction;

        /**
         * Decodes a PerDeviceAvailabilityRestriction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PerDeviceAvailabilityRestriction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Availability.PerDeviceAvailabilityRestriction;

        /**
         * Verifies a PerDeviceAvailabilityRestriction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PerDeviceAvailabilityRestriction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PerDeviceAvailabilityRestriction
         */
        public static fromObject(object: { [k: string]: any }): Availability.PerDeviceAvailabilityRestriction;

        /**
         * Creates a plain object from a PerDeviceAvailabilityRestriction message. Also converts values to other types if specified.
         * @param message PerDeviceAvailabilityRestriction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Availability.PerDeviceAvailabilityRestriction, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PerDeviceAvailabilityRestriction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of an AvailabilityProblem. */
export interface IAvailabilityProblem {

    /** AvailabilityProblem problemType */
    problemType?: (number|null);

    /** AvailabilityProblem missingValue */
    missingValue?: (string[]|null);
}

/** Represents an AvailabilityProblem. */
export class AvailabilityProblem implements IAvailabilityProblem {

    /**
     * Constructs a new AvailabilityProblem.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAvailabilityProblem);

    /** AvailabilityProblem problemType. */
    public problemType: number;

    /** AvailabilityProblem missingValue. */
    public missingValue: string[];

    /**
     * Creates a new AvailabilityProblem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AvailabilityProblem instance
     */
    public static create(properties?: IAvailabilityProblem): AvailabilityProblem;

    /**
     * Encodes the specified AvailabilityProblem message. Does not implicitly {@link AvailabilityProblem.verify|verify} messages.
     * @param message AvailabilityProblem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAvailabilityProblem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AvailabilityProblem message, length delimited. Does not implicitly {@link AvailabilityProblem.verify|verify} messages.
     * @param message AvailabilityProblem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAvailabilityProblem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AvailabilityProblem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AvailabilityProblem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AvailabilityProblem;

    /**
     * Decodes an AvailabilityProblem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AvailabilityProblem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AvailabilityProblem;

    /**
     * Verifies an AvailabilityProblem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AvailabilityProblem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AvailabilityProblem
     */
    public static fromObject(object: { [k: string]: any }): AvailabilityProblem;

    /**
     * Creates a plain object from an AvailabilityProblem message. Also converts values to other types if specified.
     * @param message AvailabilityProblem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AvailabilityProblem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AvailabilityProblem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a FilterEvaluationInfo. */
export interface IFilterEvaluationInfo {

    /** FilterEvaluationInfo ruleEvaluation */
    ruleEvaluation?: (IRuleEvaluation[]|null);
}

/** Represents a FilterEvaluationInfo. */
export class FilterEvaluationInfo implements IFilterEvaluationInfo {

    /**
     * Constructs a new FilterEvaluationInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IFilterEvaluationInfo);

    /** FilterEvaluationInfo ruleEvaluation. */
    public ruleEvaluation: IRuleEvaluation[];

    /**
     * Creates a new FilterEvaluationInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns FilterEvaluationInfo instance
     */
    public static create(properties?: IFilterEvaluationInfo): FilterEvaluationInfo;

    /**
     * Encodes the specified FilterEvaluationInfo message. Does not implicitly {@link FilterEvaluationInfo.verify|verify} messages.
     * @param message FilterEvaluationInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IFilterEvaluationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified FilterEvaluationInfo message, length delimited. Does not implicitly {@link FilterEvaluationInfo.verify|verify} messages.
     * @param message FilterEvaluationInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IFilterEvaluationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a FilterEvaluationInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns FilterEvaluationInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): FilterEvaluationInfo;

    /**
     * Decodes a FilterEvaluationInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns FilterEvaluationInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): FilterEvaluationInfo;

    /**
     * Verifies a FilterEvaluationInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a FilterEvaluationInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns FilterEvaluationInfo
     */
    public static fromObject(object: { [k: string]: any }): FilterEvaluationInfo;

    /**
     * Creates a plain object from a FilterEvaluationInfo message. Also converts values to other types if specified.
     * @param message FilterEvaluationInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: FilterEvaluationInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this FilterEvaluationInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Rule. */
export interface IRule {

    /** Rule negate */
    negate?: (boolean|null);

    /** Rule operator */
    operator?: (number|null);

    /** Rule key */
    key?: (number|null);

    /** Rule stringArg */
    stringArg?: (string[]|null);

    /** Rule longArg */
    longArg?: ((number|Long)[]|null);

    /** Rule doubleArg */
    doubleArg?: (number[]|null);

    /** Rule subRule */
    subRule?: (IRule[]|null);

    /** Rule responseCode */
    responseCode?: (number|null);

    /** Rule comment */
    comment?: (string|null);

    /** Rule stringArgHash */
    stringArgHash?: ((number|Long)[]|null);

    /** Rule constArg */
    constArg?: (number[]|null);

    /** Rule availabilityProblemType */
    availabilityProblemType?: (number|null);

    /** Rule includeMissingValues */
    includeMissingValues?: (boolean|null);
}

/** Represents a Rule. */
export class Rule implements IRule {

    /**
     * Constructs a new Rule.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRule);

    /** Rule negate. */
    public negate: boolean;

    /** Rule operator. */
    public operator: number;

    /** Rule key. */
    public key: number;

    /** Rule stringArg. */
    public stringArg: string[];

    /** Rule longArg. */
    public longArg: (number|Long)[];

    /** Rule doubleArg. */
    public doubleArg: number[];

    /** Rule subRule. */
    public subRule: IRule[];

    /** Rule responseCode. */
    public responseCode: number;

    /** Rule comment. */
    public comment: string;

    /** Rule stringArgHash. */
    public stringArgHash: (number|Long)[];

    /** Rule constArg. */
    public constArg: number[];

    /** Rule availabilityProblemType. */
    public availabilityProblemType: number;

    /** Rule includeMissingValues. */
    public includeMissingValues: boolean;

    /**
     * Creates a new Rule instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Rule instance
     */
    public static create(properties?: IRule): Rule;

    /**
     * Encodes the specified Rule message. Does not implicitly {@link Rule.verify|verify} messages.
     * @param message Rule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRule, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Rule message, length delimited. Does not implicitly {@link Rule.verify|verify} messages.
     * @param message Rule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRule, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Rule message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Rule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Rule;

    /**
     * Decodes a Rule message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Rule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Rule;

    /**
     * Verifies a Rule message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Rule message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Rule
     */
    public static fromObject(object: { [k: string]: any }): Rule;

    /**
     * Creates a plain object from a Rule message. Also converts values to other types if specified.
     * @param message Rule
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Rule, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Rule to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RuleEvaluation. */
export interface IRuleEvaluation {

    /** RuleEvaluation rule */
    rule?: (IRule|null);

    /** RuleEvaluation actualStringValue */
    actualStringValue?: (string[]|null);

    /** RuleEvaluation actualLongValue */
    actualLongValue?: ((number|Long)[]|null);

    /** RuleEvaluation actualBoolValue */
    actualBoolValue?: (boolean[]|null);

    /** RuleEvaluation actualDoubleValue */
    actualDoubleValue?: (number[]|null);
}

/** Represents a RuleEvaluation. */
export class RuleEvaluation implements IRuleEvaluation {

    /**
     * Constructs a new RuleEvaluation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRuleEvaluation);

    /** RuleEvaluation rule. */
    public rule?: (IRule|null);

    /** RuleEvaluation actualStringValue. */
    public actualStringValue: string[];

    /** RuleEvaluation actualLongValue. */
    public actualLongValue: (number|Long)[];

    /** RuleEvaluation actualBoolValue. */
    public actualBoolValue: boolean[];

    /** RuleEvaluation actualDoubleValue. */
    public actualDoubleValue: number[];

    /**
     * Creates a new RuleEvaluation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RuleEvaluation instance
     */
    public static create(properties?: IRuleEvaluation): RuleEvaluation;

    /**
     * Encodes the specified RuleEvaluation message. Does not implicitly {@link RuleEvaluation.verify|verify} messages.
     * @param message RuleEvaluation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRuleEvaluation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RuleEvaluation message, length delimited. Does not implicitly {@link RuleEvaluation.verify|verify} messages.
     * @param message RuleEvaluation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRuleEvaluation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RuleEvaluation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RuleEvaluation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RuleEvaluation;

    /**
     * Decodes a RuleEvaluation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RuleEvaluation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RuleEvaluation;

    /**
     * Verifies a RuleEvaluation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RuleEvaluation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RuleEvaluation
     */
    public static fromObject(object: { [k: string]: any }): RuleEvaluation;

    /**
     * Creates a plain object from a RuleEvaluation message. Also converts values to other types if specified.
     * @param message RuleEvaluation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RuleEvaluation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RuleEvaluation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibraryAppDetails. */
export interface ILibraryAppDetails {

    /** LibraryAppDetails certificateHash */
    certificateHash?: (string|null);

    /** LibraryAppDetails refundTimeoutTimestamp */
    refundTimeoutTimestamp?: (number|Long|null);

    /** LibraryAppDetails postDeliveryRefundWindowMillis */
    postDeliveryRefundWindowMillis?: (number|Long|null);
}

/** Represents a LibraryAppDetails. */
export class LibraryAppDetails implements ILibraryAppDetails {

    /**
     * Constructs a new LibraryAppDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibraryAppDetails);

    /** LibraryAppDetails certificateHash. */
    public certificateHash: string;

    /** LibraryAppDetails refundTimeoutTimestamp. */
    public refundTimeoutTimestamp: (number|Long);

    /** LibraryAppDetails postDeliveryRefundWindowMillis. */
    public postDeliveryRefundWindowMillis: (number|Long);

    /**
     * Creates a new LibraryAppDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibraryAppDetails instance
     */
    public static create(properties?: ILibraryAppDetails): LibraryAppDetails;

    /**
     * Encodes the specified LibraryAppDetails message. Does not implicitly {@link LibraryAppDetails.verify|verify} messages.
     * @param message LibraryAppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibraryAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibraryAppDetails message, length delimited. Does not implicitly {@link LibraryAppDetails.verify|verify} messages.
     * @param message LibraryAppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibraryAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibraryAppDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibraryAppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibraryAppDetails;

    /**
     * Decodes a LibraryAppDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibraryAppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibraryAppDetails;

    /**
     * Verifies a LibraryAppDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibraryAppDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibraryAppDetails
     */
    public static fromObject(object: { [k: string]: any }): LibraryAppDetails;

    /**
     * Creates a plain object from a LibraryAppDetails message. Also converts values to other types if specified.
     * @param message LibraryAppDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibraryAppDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibraryAppDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibraryInAppDetails. */
export interface ILibraryInAppDetails {

    /** LibraryInAppDetails signedPurchaseData */
    signedPurchaseData?: (string|null);

    /** LibraryInAppDetails signature */
    signature?: (string|null);
}

/** Represents a LibraryInAppDetails. */
export class LibraryInAppDetails implements ILibraryInAppDetails {

    /**
     * Constructs a new LibraryInAppDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibraryInAppDetails);

    /** LibraryInAppDetails signedPurchaseData. */
    public signedPurchaseData: string;

    /** LibraryInAppDetails signature. */
    public signature: string;

    /**
     * Creates a new LibraryInAppDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibraryInAppDetails instance
     */
    public static create(properties?: ILibraryInAppDetails): LibraryInAppDetails;

    /**
     * Encodes the specified LibraryInAppDetails message. Does not implicitly {@link LibraryInAppDetails.verify|verify} messages.
     * @param message LibraryInAppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibraryInAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibraryInAppDetails message, length delimited. Does not implicitly {@link LibraryInAppDetails.verify|verify} messages.
     * @param message LibraryInAppDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibraryInAppDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibraryInAppDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibraryInAppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibraryInAppDetails;

    /**
     * Decodes a LibraryInAppDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibraryInAppDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibraryInAppDetails;

    /**
     * Verifies a LibraryInAppDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibraryInAppDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibraryInAppDetails
     */
    public static fromObject(object: { [k: string]: any }): LibraryInAppDetails;

    /**
     * Creates a plain object from a LibraryInAppDetails message. Also converts values to other types if specified.
     * @param message LibraryInAppDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibraryInAppDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibraryInAppDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibraryMutation. */
export interface ILibraryMutation {

    /** LibraryMutation DocId */
    DocId?: (IDocId|null);

    /** LibraryMutation offerType */
    offerType?: (number|null);

    /** LibraryMutation documentHash */
    documentHash?: (number|Long|null);

    /** LibraryMutation deleted */
    deleted?: (boolean|null);

    /** LibraryMutation appDetails */
    appDetails?: (ILibraryAppDetails|null);

    /** LibraryMutation subscriptionDetails */
    subscriptionDetails?: (ILibrarySubscriptionDetails|null);

    /** LibraryMutation inAppDetails */
    inAppDetails?: (ILibraryInAppDetails|null);
}

/** Represents a LibraryMutation. */
export class LibraryMutation implements ILibraryMutation {

    /**
     * Constructs a new LibraryMutation.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibraryMutation);

    /** LibraryMutation DocId. */
    public DocId?: (IDocId|null);

    /** LibraryMutation offerType. */
    public offerType: number;

    /** LibraryMutation documentHash. */
    public documentHash: (number|Long);

    /** LibraryMutation deleted. */
    public deleted: boolean;

    /** LibraryMutation appDetails. */
    public appDetails?: (ILibraryAppDetails|null);

    /** LibraryMutation subscriptionDetails. */
    public subscriptionDetails?: (ILibrarySubscriptionDetails|null);

    /** LibraryMutation inAppDetails. */
    public inAppDetails?: (ILibraryInAppDetails|null);

    /**
     * Creates a new LibraryMutation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibraryMutation instance
     */
    public static create(properties?: ILibraryMutation): LibraryMutation;

    /**
     * Encodes the specified LibraryMutation message. Does not implicitly {@link LibraryMutation.verify|verify} messages.
     * @param message LibraryMutation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibraryMutation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibraryMutation message, length delimited. Does not implicitly {@link LibraryMutation.verify|verify} messages.
     * @param message LibraryMutation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibraryMutation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibraryMutation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibraryMutation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibraryMutation;

    /**
     * Decodes a LibraryMutation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibraryMutation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibraryMutation;

    /**
     * Verifies a LibraryMutation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibraryMutation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibraryMutation
     */
    public static fromObject(object: { [k: string]: any }): LibraryMutation;

    /**
     * Creates a plain object from a LibraryMutation message. Also converts values to other types if specified.
     * @param message LibraryMutation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibraryMutation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibraryMutation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibrarySubscriptionDetails. */
export interface ILibrarySubscriptionDetails {

    /** LibrarySubscriptionDetails initiationTimestamp */
    initiationTimestamp?: (number|Long|null);

    /** LibrarySubscriptionDetails validUntilTimestamp */
    validUntilTimestamp?: (number|Long|null);

    /** LibrarySubscriptionDetails autoRenewing */
    autoRenewing?: (boolean|null);

    /** LibrarySubscriptionDetails trialUntilTimestamp */
    trialUntilTimestamp?: (number|Long|null);

    /** LibrarySubscriptionDetails signedPurchaseData */
    signedPurchaseData?: (string|null);

    /** LibrarySubscriptionDetails signature */
    signature?: (string|null);
}

/** Represents a LibrarySubscriptionDetails. */
export class LibrarySubscriptionDetails implements ILibrarySubscriptionDetails {

    /**
     * Constructs a new LibrarySubscriptionDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibrarySubscriptionDetails);

    /** LibrarySubscriptionDetails initiationTimestamp. */
    public initiationTimestamp: (number|Long);

    /** LibrarySubscriptionDetails validUntilTimestamp. */
    public validUntilTimestamp: (number|Long);

    /** LibrarySubscriptionDetails autoRenewing. */
    public autoRenewing: boolean;

    /** LibrarySubscriptionDetails trialUntilTimestamp. */
    public trialUntilTimestamp: (number|Long);

    /** LibrarySubscriptionDetails signedPurchaseData. */
    public signedPurchaseData: string;

    /** LibrarySubscriptionDetails signature. */
    public signature: string;

    /**
     * Creates a new LibrarySubscriptionDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibrarySubscriptionDetails instance
     */
    public static create(properties?: ILibrarySubscriptionDetails): LibrarySubscriptionDetails;

    /**
     * Encodes the specified LibrarySubscriptionDetails message. Does not implicitly {@link LibrarySubscriptionDetails.verify|verify} messages.
     * @param message LibrarySubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibrarySubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibrarySubscriptionDetails message, length delimited. Does not implicitly {@link LibrarySubscriptionDetails.verify|verify} messages.
     * @param message LibrarySubscriptionDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibrarySubscriptionDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibrarySubscriptionDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibrarySubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibrarySubscriptionDetails;

    /**
     * Decodes a LibrarySubscriptionDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibrarySubscriptionDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibrarySubscriptionDetails;

    /**
     * Verifies a LibrarySubscriptionDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibrarySubscriptionDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibrarySubscriptionDetails
     */
    public static fromObject(object: { [k: string]: any }): LibrarySubscriptionDetails;

    /**
     * Creates a plain object from a LibrarySubscriptionDetails message. Also converts values to other types if specified.
     * @param message LibrarySubscriptionDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibrarySubscriptionDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibrarySubscriptionDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibraryUpdate. */
export interface ILibraryUpdate {

    /** LibraryUpdate status */
    status?: (number|null);

    /** LibraryUpdate corpus */
    corpus?: (number|null);

    /** LibraryUpdate serverToken */
    serverToken?: (Uint8Array|null);

    /** LibraryUpdate mutation */
    mutation?: (ILibraryMutation[]|null);

    /** LibraryUpdate hasMore */
    hasMore?: (boolean|null);

    /** LibraryUpdate libraryId */
    libraryId?: (string|null);
}

/** Represents a LibraryUpdate. */
export class LibraryUpdate implements ILibraryUpdate {

    /**
     * Constructs a new LibraryUpdate.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibraryUpdate);

    /** LibraryUpdate status. */
    public status: number;

    /** LibraryUpdate corpus. */
    public corpus: number;

    /** LibraryUpdate serverToken. */
    public serverToken: Uint8Array;

    /** LibraryUpdate mutation. */
    public mutation: ILibraryMutation[];

    /** LibraryUpdate hasMore. */
    public hasMore: boolean;

    /** LibraryUpdate libraryId. */
    public libraryId: string;

    /**
     * Creates a new LibraryUpdate instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibraryUpdate instance
     */
    public static create(properties?: ILibraryUpdate): LibraryUpdate;

    /**
     * Encodes the specified LibraryUpdate message. Does not implicitly {@link LibraryUpdate.verify|verify} messages.
     * @param message LibraryUpdate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibraryUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibraryUpdate message, length delimited. Does not implicitly {@link LibraryUpdate.verify|verify} messages.
     * @param message LibraryUpdate message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibraryUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibraryUpdate message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibraryUpdate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibraryUpdate;

    /**
     * Decodes a LibraryUpdate message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibraryUpdate
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibraryUpdate;

    /**
     * Verifies a LibraryUpdate message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibraryUpdate message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibraryUpdate
     */
    public static fromObject(object: { [k: string]: any }): LibraryUpdate;

    /**
     * Creates a plain object from a LibraryUpdate message. Also converts values to other types if specified.
     * @param message LibraryUpdate
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibraryUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibraryUpdate to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidAppNotificationData. */
export interface IAndroidAppNotificationData {

    /** AndroidAppNotificationData versionCode */
    versionCode?: (number|null);

    /** AndroidAppNotificationData assetId */
    assetId?: (string|null);
}

/** Represents an AndroidAppNotificationData. */
export class AndroidAppNotificationData implements IAndroidAppNotificationData {

    /**
     * Constructs a new AndroidAppNotificationData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidAppNotificationData);

    /** AndroidAppNotificationData versionCode. */
    public versionCode: number;

    /** AndroidAppNotificationData assetId. */
    public assetId: string;

    /**
     * Creates a new AndroidAppNotificationData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidAppNotificationData instance
     */
    public static create(properties?: IAndroidAppNotificationData): AndroidAppNotificationData;

    /**
     * Encodes the specified AndroidAppNotificationData message. Does not implicitly {@link AndroidAppNotificationData.verify|verify} messages.
     * @param message AndroidAppNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidAppNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidAppNotificationData message, length delimited. Does not implicitly {@link AndroidAppNotificationData.verify|verify} messages.
     * @param message AndroidAppNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidAppNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidAppNotificationData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidAppNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidAppNotificationData;

    /**
     * Decodes an AndroidAppNotificationData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidAppNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidAppNotificationData;

    /**
     * Verifies an AndroidAppNotificationData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidAppNotificationData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidAppNotificationData
     */
    public static fromObject(object: { [k: string]: any }): AndroidAppNotificationData;

    /**
     * Creates a plain object from an AndroidAppNotificationData message. Also converts values to other types if specified.
     * @param message AndroidAppNotificationData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidAppNotificationData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidAppNotificationData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an InAppNotificationData. */
export interface IInAppNotificationData {

    /** InAppNotificationData checkoutOrderId */
    checkoutOrderId?: (string|null);

    /** InAppNotificationData inAppNotificationId */
    inAppNotificationId?: (string|null);
}

/** Represents an InAppNotificationData. */
export class InAppNotificationData implements IInAppNotificationData {

    /**
     * Constructs a new InAppNotificationData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInAppNotificationData);

    /** InAppNotificationData checkoutOrderId. */
    public checkoutOrderId: string;

    /** InAppNotificationData inAppNotificationId. */
    public inAppNotificationId: string;

    /**
     * Creates a new InAppNotificationData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InAppNotificationData instance
     */
    public static create(properties?: IInAppNotificationData): InAppNotificationData;

    /**
     * Encodes the specified InAppNotificationData message. Does not implicitly {@link InAppNotificationData.verify|verify} messages.
     * @param message InAppNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInAppNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InAppNotificationData message, length delimited. Does not implicitly {@link InAppNotificationData.verify|verify} messages.
     * @param message InAppNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInAppNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InAppNotificationData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InAppNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InAppNotificationData;

    /**
     * Decodes an InAppNotificationData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InAppNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InAppNotificationData;

    /**
     * Verifies an InAppNotificationData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InAppNotificationData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InAppNotificationData
     */
    public static fromObject(object: { [k: string]: any }): InAppNotificationData;

    /**
     * Creates a plain object from an InAppNotificationData message. Also converts values to other types if specified.
     * @param message InAppNotificationData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InAppNotificationData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InAppNotificationData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LibraryDirtyData. */
export interface ILibraryDirtyData {

    /** LibraryDirtyData backend */
    backend?: (number|null);

    /** LibraryDirtyData libraryId */
    libraryId?: (string|null);
}

/** Represents a LibraryDirtyData. */
export class LibraryDirtyData implements ILibraryDirtyData {

    /**
     * Constructs a new LibraryDirtyData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILibraryDirtyData);

    /** LibraryDirtyData backend. */
    public backend: number;

    /** LibraryDirtyData libraryId. */
    public libraryId: string;

    /**
     * Creates a new LibraryDirtyData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LibraryDirtyData instance
     */
    public static create(properties?: ILibraryDirtyData): LibraryDirtyData;

    /**
     * Encodes the specified LibraryDirtyData message. Does not implicitly {@link LibraryDirtyData.verify|verify} messages.
     * @param message LibraryDirtyData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILibraryDirtyData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LibraryDirtyData message, length delimited. Does not implicitly {@link LibraryDirtyData.verify|verify} messages.
     * @param message LibraryDirtyData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILibraryDirtyData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LibraryDirtyData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LibraryDirtyData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LibraryDirtyData;

    /**
     * Decodes a LibraryDirtyData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LibraryDirtyData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LibraryDirtyData;

    /**
     * Verifies a LibraryDirtyData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LibraryDirtyData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LibraryDirtyData
     */
    public static fromObject(object: { [k: string]: any }): LibraryDirtyData;

    /**
     * Creates a plain object from a LibraryDirtyData message. Also converts values to other types if specified.
     * @param message LibraryDirtyData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LibraryDirtyData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LibraryDirtyData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Notification. */
export interface INotification {

    /** Notification notificationType */
    notificationType?: (number|null);

    /** Notification timestamp */
    timestamp?: (number|Long|null);

    /** Notification DocId */
    DocId?: (IDocId|null);

    /** Notification docTitle */
    docTitle?: (string|null);

    /** Notification userEmail */
    userEmail?: (string|null);

    /** Notification appData */
    appData?: (IAndroidAppNotificationData|null);

    /** Notification appDeliveryData */
    appDeliveryData?: (IAndroidAppDeliveryData|null);

    /** Notification purchaseRemovalData */
    purchaseRemovalData?: (IPurchaseRemovalData|null);

    /** Notification userNotificationData */
    userNotificationData?: (IUserNotificationData|null);

    /** Notification inAppNotificationData */
    inAppNotificationData?: (IInAppNotificationData|null);

    /** Notification purchaseDeclinedData */
    purchaseDeclinedData?: (IPurchaseDeclinedData|null);

    /** Notification notificationId */
    notificationId?: (string|null);

    /** Notification libraryUpdate */
    libraryUpdate?: (ILibraryUpdate|null);

    /** Notification libraryDirtyData */
    libraryDirtyData?: (ILibraryDirtyData|null);
}

/** Represents a Notification. */
export class Notification implements INotification {

    /**
     * Constructs a new Notification.
     * @param [properties] Properties to set
     */
    constructor(properties?: INotification);

    /** Notification notificationType. */
    public notificationType: number;

    /** Notification timestamp. */
    public timestamp: (number|Long);

    /** Notification DocId. */
    public DocId?: (IDocId|null);

    /** Notification docTitle. */
    public docTitle: string;

    /** Notification userEmail. */
    public userEmail: string;

    /** Notification appData. */
    public appData?: (IAndroidAppNotificationData|null);

    /** Notification appDeliveryData. */
    public appDeliveryData?: (IAndroidAppDeliveryData|null);

    /** Notification purchaseRemovalData. */
    public purchaseRemovalData?: (IPurchaseRemovalData|null);

    /** Notification userNotificationData. */
    public userNotificationData?: (IUserNotificationData|null);

    /** Notification inAppNotificationData. */
    public inAppNotificationData?: (IInAppNotificationData|null);

    /** Notification purchaseDeclinedData. */
    public purchaseDeclinedData?: (IPurchaseDeclinedData|null);

    /** Notification notificationId. */
    public notificationId: string;

    /** Notification libraryUpdate. */
    public libraryUpdate?: (ILibraryUpdate|null);

    /** Notification libraryDirtyData. */
    public libraryDirtyData?: (ILibraryDirtyData|null);

    /**
     * Creates a new Notification instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Notification instance
     */
    public static create(properties?: INotification): Notification;

    /**
     * Encodes the specified Notification message. Does not implicitly {@link Notification.verify|verify} messages.
     * @param message Notification message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: INotification, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Notification message, length delimited. Does not implicitly {@link Notification.verify|verify} messages.
     * @param message Notification message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: INotification, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Notification message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Notification
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notification;

    /**
     * Decodes a Notification message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Notification
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notification;

    /**
     * Verifies a Notification message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Notification message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Notification
     */
    public static fromObject(object: { [k: string]: any }): Notification;

    /**
     * Creates a plain object from a Notification message. Also converts values to other types if specified.
     * @param message Notification
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Notification, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Notification to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PurchaseDeclinedData. */
export interface IPurchaseDeclinedData {

    /** PurchaseDeclinedData reason */
    reason?: (number|null);

    /** PurchaseDeclinedData showNotification */
    showNotification?: (boolean|null);
}

/** Represents a PurchaseDeclinedData. */
export class PurchaseDeclinedData implements IPurchaseDeclinedData {

    /**
     * Constructs a new PurchaseDeclinedData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPurchaseDeclinedData);

    /** PurchaseDeclinedData reason. */
    public reason: number;

    /** PurchaseDeclinedData showNotification. */
    public showNotification: boolean;

    /**
     * Creates a new PurchaseDeclinedData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PurchaseDeclinedData instance
     */
    public static create(properties?: IPurchaseDeclinedData): PurchaseDeclinedData;

    /**
     * Encodes the specified PurchaseDeclinedData message. Does not implicitly {@link PurchaseDeclinedData.verify|verify} messages.
     * @param message PurchaseDeclinedData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPurchaseDeclinedData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PurchaseDeclinedData message, length delimited. Does not implicitly {@link PurchaseDeclinedData.verify|verify} messages.
     * @param message PurchaseDeclinedData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPurchaseDeclinedData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PurchaseDeclinedData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PurchaseDeclinedData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PurchaseDeclinedData;

    /**
     * Decodes a PurchaseDeclinedData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PurchaseDeclinedData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PurchaseDeclinedData;

    /**
     * Verifies a PurchaseDeclinedData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PurchaseDeclinedData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PurchaseDeclinedData
     */
    public static fromObject(object: { [k: string]: any }): PurchaseDeclinedData;

    /**
     * Creates a plain object from a PurchaseDeclinedData message. Also converts values to other types if specified.
     * @param message PurchaseDeclinedData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PurchaseDeclinedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PurchaseDeclinedData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PurchaseRemovalData. */
export interface IPurchaseRemovalData {

    /** PurchaseRemovalData malicious */
    malicious?: (boolean|null);
}

/** Represents a PurchaseRemovalData. */
export class PurchaseRemovalData implements IPurchaseRemovalData {

    /**
     * Constructs a new PurchaseRemovalData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPurchaseRemovalData);

    /** PurchaseRemovalData malicious. */
    public malicious: boolean;

    /**
     * Creates a new PurchaseRemovalData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PurchaseRemovalData instance
     */
    public static create(properties?: IPurchaseRemovalData): PurchaseRemovalData;

    /**
     * Encodes the specified PurchaseRemovalData message. Does not implicitly {@link PurchaseRemovalData.verify|verify} messages.
     * @param message PurchaseRemovalData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPurchaseRemovalData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PurchaseRemovalData message, length delimited. Does not implicitly {@link PurchaseRemovalData.verify|verify} messages.
     * @param message PurchaseRemovalData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPurchaseRemovalData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PurchaseRemovalData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PurchaseRemovalData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PurchaseRemovalData;

    /**
     * Decodes a PurchaseRemovalData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PurchaseRemovalData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PurchaseRemovalData;

    /**
     * Verifies a PurchaseRemovalData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PurchaseRemovalData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PurchaseRemovalData
     */
    public static fromObject(object: { [k: string]: any }): PurchaseRemovalData;

    /**
     * Creates a plain object from a PurchaseRemovalData message. Also converts values to other types if specified.
     * @param message PurchaseRemovalData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PurchaseRemovalData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PurchaseRemovalData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UserNotificationData. */
export interface IUserNotificationData {

    /** UserNotificationData notificationTitle */
    notificationTitle?: (string|null);

    /** UserNotificationData notificationText */
    notificationText?: (string|null);

    /** UserNotificationData tickerText */
    tickerText?: (string|null);

    /** UserNotificationData dialogTitle */
    dialogTitle?: (string|null);

    /** UserNotificationData dialogText */
    dialogText?: (string|null);
}

/** Represents a UserNotificationData. */
export class UserNotificationData implements IUserNotificationData {

    /**
     * Constructs a new UserNotificationData.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUserNotificationData);

    /** UserNotificationData notificationTitle. */
    public notificationTitle: string;

    /** UserNotificationData notificationText. */
    public notificationText: string;

    /** UserNotificationData tickerText. */
    public tickerText: string;

    /** UserNotificationData dialogTitle. */
    public dialogTitle: string;

    /** UserNotificationData dialogText. */
    public dialogText: string;

    /**
     * Creates a new UserNotificationData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UserNotificationData instance
     */
    public static create(properties?: IUserNotificationData): UserNotificationData;

    /**
     * Encodes the specified UserNotificationData message. Does not implicitly {@link UserNotificationData.verify|verify} messages.
     * @param message UserNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUserNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UserNotificationData message, length delimited. Does not implicitly {@link UserNotificationData.verify|verify} messages.
     * @param message UserNotificationData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUserNotificationData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UserNotificationData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UserNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UserNotificationData;

    /**
     * Decodes a UserNotificationData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UserNotificationData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UserNotificationData;

    /**
     * Verifies a UserNotificationData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UserNotificationData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UserNotificationData
     */
    public static fromObject(object: { [k: string]: any }): UserNotificationData;

    /**
     * Creates a plain object from a UserNotificationData message. Also converts values to other types if specified.
     * @param message UserNotificationData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UserNotificationData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UserNotificationData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AggregateRating. */
export interface IAggregateRating {

    /** AggregateRating type */
    type?: (number|null);

    /** AggregateRating starRating */
    starRating?: (number|null);

    /** AggregateRating ratingsCount */
    ratingsCount?: (number|Long|null);

    /** AggregateRating oneStarRatings */
    oneStarRatings?: (number|Long|null);

    /** AggregateRating twoStarRatings */
    twoStarRatings?: (number|Long|null);

    /** AggregateRating threeStarRatings */
    threeStarRatings?: (number|Long|null);

    /** AggregateRating fourStarRatings */
    fourStarRatings?: (number|Long|null);

    /** AggregateRating fiveStarRatings */
    fiveStarRatings?: (number|Long|null);

    /** AggregateRating thumbsUpCount */
    thumbsUpCount?: (number|Long|null);

    /** AggregateRating thumbsDownCount */
    thumbsDownCount?: (number|Long|null);

    /** AggregateRating commentCount */
    commentCount?: (number|Long|null);

    /** AggregateRating bayesianMeanRating */
    bayesianMeanRating?: (number|null);

    /** AggregateRating tip */
    tip?: (ITip[]|null);

    /** AggregateRating ratingLabel */
    ratingLabel?: (string|null);

    /** AggregateRating ratingCountLabelAbbreviated */
    ratingCountLabelAbbreviated?: (string|null);

    /** AggregateRating ratingCountLabel */
    ratingCountLabel?: (string|null);
}

/** Represents an AggregateRating. */
export class AggregateRating implements IAggregateRating {

    /**
     * Constructs a new AggregateRating.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAggregateRating);

    /** AggregateRating type. */
    public type: number;

    /** AggregateRating starRating. */
    public starRating: number;

    /** AggregateRating ratingsCount. */
    public ratingsCount: (number|Long);

    /** AggregateRating oneStarRatings. */
    public oneStarRatings: (number|Long);

    /** AggregateRating twoStarRatings. */
    public twoStarRatings: (number|Long);

    /** AggregateRating threeStarRatings. */
    public threeStarRatings: (number|Long);

    /** AggregateRating fourStarRatings. */
    public fourStarRatings: (number|Long);

    /** AggregateRating fiveStarRatings. */
    public fiveStarRatings: (number|Long);

    /** AggregateRating thumbsUpCount. */
    public thumbsUpCount: (number|Long);

    /** AggregateRating thumbsDownCount. */
    public thumbsDownCount: (number|Long);

    /** AggregateRating commentCount. */
    public commentCount: (number|Long);

    /** AggregateRating bayesianMeanRating. */
    public bayesianMeanRating: number;

    /** AggregateRating tip. */
    public tip: ITip[];

    /** AggregateRating ratingLabel. */
    public ratingLabel: string;

    /** AggregateRating ratingCountLabelAbbreviated. */
    public ratingCountLabelAbbreviated: string;

    /** AggregateRating ratingCountLabel. */
    public ratingCountLabel: string;

    /**
     * Creates a new AggregateRating instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AggregateRating instance
     */
    public static create(properties?: IAggregateRating): AggregateRating;

    /**
     * Encodes the specified AggregateRating message. Does not implicitly {@link AggregateRating.verify|verify} messages.
     * @param message AggregateRating message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAggregateRating, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AggregateRating message, length delimited. Does not implicitly {@link AggregateRating.verify|verify} messages.
     * @param message AggregateRating message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAggregateRating, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AggregateRating message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AggregateRating
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AggregateRating;

    /**
     * Decodes an AggregateRating message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AggregateRating
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AggregateRating;

    /**
     * Verifies an AggregateRating message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AggregateRating message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AggregateRating
     */
    public static fromObject(object: { [k: string]: any }): AggregateRating;

    /**
     * Creates a plain object from an AggregateRating message. Also converts values to other types if specified.
     * @param message AggregateRating
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AggregateRating, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AggregateRating to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Tip. */
export interface ITip {

    /** Tip tipId */
    tipId?: (string|null);

    /** Tip text */
    text?: (string|null);

    /** Tip polarity */
    polarity?: (number|null);

    /** Tip reviewCount */
    reviewCount?: (number|Long|null);

    /** Tip language */
    language?: (string|null);

    /** Tip snippetReviewId */
    snippetReviewId?: (string[]|null);
}

/** Represents a Tip. */
export class Tip implements ITip {

    /**
     * Constructs a new Tip.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITip);

    /** Tip tipId. */
    public tipId: string;

    /** Tip text. */
    public text: string;

    /** Tip polarity. */
    public polarity: number;

    /** Tip reviewCount. */
    public reviewCount: (number|Long);

    /** Tip language. */
    public language: string;

    /** Tip snippetReviewId. */
    public snippetReviewId: string[];

    /**
     * Creates a new Tip instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Tip instance
     */
    public static create(properties?: ITip): Tip;

    /**
     * Encodes the specified Tip message. Does not implicitly {@link Tip.verify|verify} messages.
     * @param message Tip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Tip message, length delimited. Does not implicitly {@link Tip.verify|verify} messages.
     * @param message Tip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Tip message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Tip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Tip;

    /**
     * Decodes a Tip message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Tip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Tip;

    /**
     * Verifies a Tip message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Tip message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Tip
     */
    public static fromObject(object: { [k: string]: any }): Tip;

    /**
     * Creates a plain object from a Tip message. Also converts values to other types if specified.
     * @param message Tip
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Tip, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Tip to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReviewTip. */
export interface IReviewTip {

    /** ReviewTip tipUrl */
    tipUrl?: (string|null);

    /** ReviewTip text */
    text?: (string|null);

    /** ReviewTip polarity */
    polarity?: (number|null);

    /** ReviewTip reviewCount */
    reviewCount?: (number|Long|null);
}

/** Represents a ReviewTip. */
export class ReviewTip implements IReviewTip {

    /**
     * Constructs a new ReviewTip.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReviewTip);

    /** ReviewTip tipUrl. */
    public tipUrl: string;

    /** ReviewTip text. */
    public text: string;

    /** ReviewTip polarity. */
    public polarity: number;

    /** ReviewTip reviewCount. */
    public reviewCount: (number|Long);

    /**
     * Creates a new ReviewTip instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReviewTip instance
     */
    public static create(properties?: IReviewTip): ReviewTip;

    /**
     * Encodes the specified ReviewTip message. Does not implicitly {@link ReviewTip.verify|verify} messages.
     * @param message ReviewTip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReviewTip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReviewTip message, length delimited. Does not implicitly {@link ReviewTip.verify|verify} messages.
     * @param message ReviewTip message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReviewTip, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReviewTip message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReviewTip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReviewTip;

    /**
     * Decodes a ReviewTip message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReviewTip
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReviewTip;

    /**
     * Verifies a ReviewTip message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReviewTip message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReviewTip
     */
    public static fromObject(object: { [k: string]: any }): ReviewTip;

    /**
     * Creates a plain object from a ReviewTip message. Also converts values to other types if specified.
     * @param message ReviewTip
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReviewTip, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReviewTip to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AcceptTosResponse. */
export interface IAcceptTosResponse {
}

/** Represents an AcceptTosResponse. */
export class AcceptTosResponse implements IAcceptTosResponse {

    /**
     * Constructs a new AcceptTosResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAcceptTosResponse);

    /**
     * Creates a new AcceptTosResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AcceptTosResponse instance
     */
    public static create(properties?: IAcceptTosResponse): AcceptTosResponse;

    /**
     * Encodes the specified AcceptTosResponse message. Does not implicitly {@link AcceptTosResponse.verify|verify} messages.
     * @param message AcceptTosResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAcceptTosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AcceptTosResponse message, length delimited. Does not implicitly {@link AcceptTosResponse.verify|verify} messages.
     * @param message AcceptTosResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAcceptTosResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AcceptTosResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AcceptTosResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AcceptTosResponse;

    /**
     * Decodes an AcceptTosResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AcceptTosResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AcceptTosResponse;

    /**
     * Verifies an AcceptTosResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AcceptTosResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AcceptTosResponse
     */
    public static fromObject(object: { [k: string]: any }): AcceptTosResponse;

    /**
     * Creates a plain object from an AcceptTosResponse message. Also converts values to other types if specified.
     * @param message AcceptTosResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AcceptTosResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AcceptTosResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CarrierBillingConfig. */
export interface ICarrierBillingConfig {

    /** CarrierBillingConfig id */
    id?: (string|null);

    /** CarrierBillingConfig name */
    name?: (string|null);

    /** CarrierBillingConfig apiVersion */
    apiVersion?: (number|null);

    /** CarrierBillingConfig provisioningUrl */
    provisioningUrl?: (string|null);

    /** CarrierBillingConfig credentialsUrl */
    credentialsUrl?: (string|null);

    /** CarrierBillingConfig tosRequired */
    tosRequired?: (boolean|null);

    /** CarrierBillingConfig perTransactionCredentialsRequired */
    perTransactionCredentialsRequired?: (boolean|null);

    /** CarrierBillingConfig sendSubscriberIdWithCarrierBillingRequests */
    sendSubscriberIdWithCarrierBillingRequests?: (boolean|null);
}

/** Represents a CarrierBillingConfig. */
export class CarrierBillingConfig implements ICarrierBillingConfig {

    /**
     * Constructs a new CarrierBillingConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICarrierBillingConfig);

    /** CarrierBillingConfig id. */
    public id: string;

    /** CarrierBillingConfig name. */
    public name: string;

    /** CarrierBillingConfig apiVersion. */
    public apiVersion: number;

    /** CarrierBillingConfig provisioningUrl. */
    public provisioningUrl: string;

    /** CarrierBillingConfig credentialsUrl. */
    public credentialsUrl: string;

    /** CarrierBillingConfig tosRequired. */
    public tosRequired: boolean;

    /** CarrierBillingConfig perTransactionCredentialsRequired. */
    public perTransactionCredentialsRequired: boolean;

    /** CarrierBillingConfig sendSubscriberIdWithCarrierBillingRequests. */
    public sendSubscriberIdWithCarrierBillingRequests: boolean;

    /**
     * Creates a new CarrierBillingConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CarrierBillingConfig instance
     */
    public static create(properties?: ICarrierBillingConfig): CarrierBillingConfig;

    /**
     * Encodes the specified CarrierBillingConfig message. Does not implicitly {@link CarrierBillingConfig.verify|verify} messages.
     * @param message CarrierBillingConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICarrierBillingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CarrierBillingConfig message, length delimited. Does not implicitly {@link CarrierBillingConfig.verify|verify} messages.
     * @param message CarrierBillingConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICarrierBillingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CarrierBillingConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CarrierBillingConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CarrierBillingConfig;

    /**
     * Decodes a CarrierBillingConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CarrierBillingConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CarrierBillingConfig;

    /**
     * Verifies a CarrierBillingConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CarrierBillingConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CarrierBillingConfig
     */
    public static fromObject(object: { [k: string]: any }): CarrierBillingConfig;

    /**
     * Creates a plain object from a CarrierBillingConfig message. Also converts values to other types if specified.
     * @param message CarrierBillingConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CarrierBillingConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CarrierBillingConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BillingConfig. */
export interface IBillingConfig {

    /** BillingConfig carrierBillingConfig */
    carrierBillingConfig?: (ICarrierBillingConfig|null);

    /** BillingConfig maxIabApiVersion */
    maxIabApiVersion?: (number|null);
}

/** Represents a BillingConfig. */
export class BillingConfig implements IBillingConfig {

    /**
     * Constructs a new BillingConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBillingConfig);

    /** BillingConfig carrierBillingConfig. */
    public carrierBillingConfig?: (ICarrierBillingConfig|null);

    /** BillingConfig maxIabApiVersion. */
    public maxIabApiVersion: number;

    /**
     * Creates a new BillingConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BillingConfig instance
     */
    public static create(properties?: IBillingConfig): BillingConfig;

    /**
     * Encodes the specified BillingConfig message. Does not implicitly {@link BillingConfig.verify|verify} messages.
     * @param message BillingConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBillingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BillingConfig message, length delimited. Does not implicitly {@link BillingConfig.verify|verify} messages.
     * @param message BillingConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBillingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BillingConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BillingConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BillingConfig;

    /**
     * Decodes a BillingConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BillingConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BillingConfig;

    /**
     * Verifies a BillingConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BillingConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BillingConfig
     */
    public static fromObject(object: { [k: string]: any }): BillingConfig;

    /**
     * Creates a plain object from a BillingConfig message. Also converts values to other types if specified.
     * @param message BillingConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BillingConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BillingConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CorpusMetadata. */
export interface ICorpusMetadata {

    /** CorpusMetadata backend */
    backend?: (number|null);

    /** CorpusMetadata name */
    name?: (string|null);

    /** CorpusMetadata landingUrl */
    landingUrl?: (string|null);

    /** CorpusMetadata libraryName */
    libraryName?: (string|null);

    /** CorpusMetadata recsWidgetUrl */
    recsWidgetUrl?: (string|null);

    /** CorpusMetadata shopName */
    shopName?: (string|null);
}

/** Represents a CorpusMetadata. */
export class CorpusMetadata implements ICorpusMetadata {

    /**
     * Constructs a new CorpusMetadata.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICorpusMetadata);

    /** CorpusMetadata backend. */
    public backend: number;

    /** CorpusMetadata name. */
    public name: string;

    /** CorpusMetadata landingUrl. */
    public landingUrl: string;

    /** CorpusMetadata libraryName. */
    public libraryName: string;

    /** CorpusMetadata recsWidgetUrl. */
    public recsWidgetUrl: string;

    /** CorpusMetadata shopName. */
    public shopName: string;

    /**
     * Creates a new CorpusMetadata instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CorpusMetadata instance
     */
    public static create(properties?: ICorpusMetadata): CorpusMetadata;

    /**
     * Encodes the specified CorpusMetadata message. Does not implicitly {@link CorpusMetadata.verify|verify} messages.
     * @param message CorpusMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICorpusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CorpusMetadata message, length delimited. Does not implicitly {@link CorpusMetadata.verify|verify} messages.
     * @param message CorpusMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICorpusMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CorpusMetadata message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CorpusMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CorpusMetadata;

    /**
     * Decodes a CorpusMetadata message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CorpusMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CorpusMetadata;

    /**
     * Verifies a CorpusMetadata message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CorpusMetadata message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CorpusMetadata
     */
    public static fromObject(object: { [k: string]: any }): CorpusMetadata;

    /**
     * Creates a plain object from a CorpusMetadata message. Also converts values to other types if specified.
     * @param message CorpusMetadata
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CorpusMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CorpusMetadata to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an Experiments. */
export interface IExperiments {

    /** Experiments experimentId */
    experimentId?: (string[]|null);
}

/** Represents an Experiments. */
export class Experiments implements IExperiments {

    /**
     * Constructs a new Experiments.
     * @param [properties] Properties to set
     */
    constructor(properties?: IExperiments);

    /** Experiments experimentId. */
    public experimentId: string[];

    /**
     * Creates a new Experiments instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Experiments instance
     */
    public static create(properties?: IExperiments): Experiments;

    /**
     * Encodes the specified Experiments message. Does not implicitly {@link Experiments.verify|verify} messages.
     * @param message Experiments message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IExperiments, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Experiments message, length delimited. Does not implicitly {@link Experiments.verify|verify} messages.
     * @param message Experiments message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IExperiments, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Experiments message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Experiments
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Experiments;

    /**
     * Decodes an Experiments message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Experiments
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Experiments;

    /**
     * Verifies an Experiments message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Experiments message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Experiments
     */
    public static fromObject(object: { [k: string]: any }): Experiments;

    /**
     * Creates a plain object from an Experiments message. Also converts values to other types if specified.
     * @param message Experiments
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Experiments, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Experiments to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SelfUpdateConfig. */
export interface ISelfUpdateConfig {

    /** SelfUpdateConfig latestClientVersionCode */
    latestClientVersionCode?: (number|null);
}

/** Represents a SelfUpdateConfig. */
export class SelfUpdateConfig implements ISelfUpdateConfig {

    /**
     * Constructs a new SelfUpdateConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISelfUpdateConfig);

    /** SelfUpdateConfig latestClientVersionCode. */
    public latestClientVersionCode: number;

    /**
     * Creates a new SelfUpdateConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SelfUpdateConfig instance
     */
    public static create(properties?: ISelfUpdateConfig): SelfUpdateConfig;

    /**
     * Encodes the specified SelfUpdateConfig message. Does not implicitly {@link SelfUpdateConfig.verify|verify} messages.
     * @param message SelfUpdateConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISelfUpdateConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SelfUpdateConfig message, length delimited. Does not implicitly {@link SelfUpdateConfig.verify|verify} messages.
     * @param message SelfUpdateConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISelfUpdateConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SelfUpdateConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SelfUpdateConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SelfUpdateConfig;

    /**
     * Decodes a SelfUpdateConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SelfUpdateConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SelfUpdateConfig;

    /**
     * Verifies a SelfUpdateConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SelfUpdateConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SelfUpdateConfig
     */
    public static fromObject(object: { [k: string]: any }): SelfUpdateConfig;

    /**
     * Creates a plain object from a SelfUpdateConfig message. Also converts values to other types if specified.
     * @param message SelfUpdateConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SelfUpdateConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SelfUpdateConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TocResponse. */
export interface ITocResponse {

    /** TocResponse corpus */
    corpus?: (ICorpusMetadata[]|null);

    /** TocResponse tosVersionDeprecated */
    tosVersionDeprecated?: (number|null);

    /** TocResponse tosContent */
    tosContent?: (string|null);

    /** TocResponse homeUrl */
    homeUrl?: (string|null);

    /** TocResponse experiments */
    experiments?: (IExperiments|null);

    /** TocResponse tosCheckboxTextMarketingEmails */
    tosCheckboxTextMarketingEmails?: (string|null);

    /** TocResponse tosToken */
    tosToken?: (string|null);

    /** TocResponse userSettings */
    userSettings?: (IUserSettings|null);

    /** TocResponse iconOverrideUrl */
    iconOverrideUrl?: (string|null);

    /** TocResponse selfUpdateConfig */
    selfUpdateConfig?: (ISelfUpdateConfig|null);

    /** TocResponse requiresUploadDeviceConfig */
    requiresUploadDeviceConfig?: (boolean|null);

    /** TocResponse billingConfig */
    billingConfig?: (IBillingConfig|null);

    /** TocResponse recsWidgetUrl */
    recsWidgetUrl?: (string|null);

    /** TocResponse socialHomeUrl */
    socialHomeUrl?: (string|null);

    /** TocResponse ageVerificationRequired */
    ageVerificationRequired?: (boolean|null);

    /** TocResponse gPlusSignupEnabled */
    gPlusSignupEnabled?: (boolean|null);

    /** TocResponse redeemEnabled */
    redeemEnabled?: (boolean|null);

    /** TocResponse helpUrl */
    helpUrl?: (string|null);

    /** TocResponse themeId */
    themeId?: (number|null);

    /** TocResponse entertainmentHomeUrl */
    entertainmentHomeUrl?: (string|null);

    /** TocResponse cookie */
    cookie?: (string|null);
}

/** Represents a TocResponse. */
export class TocResponse implements ITocResponse {

    /**
     * Constructs a new TocResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITocResponse);

    /** TocResponse corpus. */
    public corpus: ICorpusMetadata[];

    /** TocResponse tosVersionDeprecated. */
    public tosVersionDeprecated: number;

    /** TocResponse tosContent. */
    public tosContent: string;

    /** TocResponse homeUrl. */
    public homeUrl: string;

    /** TocResponse experiments. */
    public experiments?: (IExperiments|null);

    /** TocResponse tosCheckboxTextMarketingEmails. */
    public tosCheckboxTextMarketingEmails: string;

    /** TocResponse tosToken. */
    public tosToken: string;

    /** TocResponse userSettings. */
    public userSettings?: (IUserSettings|null);

    /** TocResponse iconOverrideUrl. */
    public iconOverrideUrl: string;

    /** TocResponse selfUpdateConfig. */
    public selfUpdateConfig?: (ISelfUpdateConfig|null);

    /** TocResponse requiresUploadDeviceConfig. */
    public requiresUploadDeviceConfig: boolean;

    /** TocResponse billingConfig. */
    public billingConfig?: (IBillingConfig|null);

    /** TocResponse recsWidgetUrl. */
    public recsWidgetUrl: string;

    /** TocResponse socialHomeUrl. */
    public socialHomeUrl: string;

    /** TocResponse ageVerificationRequired. */
    public ageVerificationRequired: boolean;

    /** TocResponse gPlusSignupEnabled. */
    public gPlusSignupEnabled: boolean;

    /** TocResponse redeemEnabled. */
    public redeemEnabled: boolean;

    /** TocResponse helpUrl. */
    public helpUrl: string;

    /** TocResponse themeId. */
    public themeId: number;

    /** TocResponse entertainmentHomeUrl. */
    public entertainmentHomeUrl: string;

    /** TocResponse cookie. */
    public cookie: string;

    /**
     * Creates a new TocResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TocResponse instance
     */
    public static create(properties?: ITocResponse): TocResponse;

    /**
     * Encodes the specified TocResponse message. Does not implicitly {@link TocResponse.verify|verify} messages.
     * @param message TocResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITocResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TocResponse message, length delimited. Does not implicitly {@link TocResponse.verify|verify} messages.
     * @param message TocResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITocResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TocResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TocResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TocResponse;

    /**
     * Decodes a TocResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TocResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TocResponse;

    /**
     * Verifies a TocResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TocResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TocResponse
     */
    public static fromObject(object: { [k: string]: any }): TocResponse;

    /**
     * Creates a plain object from a TocResponse message. Also converts values to other types if specified.
     * @param message TocResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TocResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TocResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UserSettings. */
export interface IUserSettings {

    /** UserSettings tosCheckboxMarketingEmailsOptedIn */
    tosCheckboxMarketingEmailsOptedIn?: (boolean|null);

    /** UserSettings privacySetting */
    privacySetting?: (IPrivacySetting|null);
}

/** Represents a UserSettings. */
export class UserSettings implements IUserSettings {

    /**
     * Constructs a new UserSettings.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUserSettings);

    /** UserSettings tosCheckboxMarketingEmailsOptedIn. */
    public tosCheckboxMarketingEmailsOptedIn: boolean;

    /** UserSettings privacySetting. */
    public privacySetting?: (IPrivacySetting|null);

    /**
     * Creates a new UserSettings instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UserSettings instance
     */
    public static create(properties?: IUserSettings): UserSettings;

    /**
     * Encodes the specified UserSettings message. Does not implicitly {@link UserSettings.verify|verify} messages.
     * @param message UserSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUserSettings, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UserSettings message, length delimited. Does not implicitly {@link UserSettings.verify|verify} messages.
     * @param message UserSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUserSettings, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UserSettings message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UserSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UserSettings;

    /**
     * Decodes a UserSettings message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UserSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UserSettings;

    /**
     * Verifies a UserSettings message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UserSettings message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UserSettings
     */
    public static fromObject(object: { [k: string]: any }): UserSettings;

    /**
     * Creates a plain object from a UserSettings message. Also converts values to other types if specified.
     * @param message UserSettings
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UserSettings, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UserSettings to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PrivacySetting. */
export interface IPrivacySetting {

    /** PrivacySetting type */
    type?: (number|null);

    /** PrivacySetting currentStatus */
    currentStatus?: (number|null);

    /** PrivacySetting enabledByDefault */
    enabledByDefault?: (boolean|null);
}

/** Represents a PrivacySetting. */
export class PrivacySetting implements IPrivacySetting {

    /**
     * Constructs a new PrivacySetting.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPrivacySetting);

    /** PrivacySetting type. */
    public type: number;

    /** PrivacySetting currentStatus. */
    public currentStatus: number;

    /** PrivacySetting enabledByDefault. */
    public enabledByDefault: boolean;

    /**
     * Creates a new PrivacySetting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PrivacySetting instance
     */
    public static create(properties?: IPrivacySetting): PrivacySetting;

    /**
     * Encodes the specified PrivacySetting message. Does not implicitly {@link PrivacySetting.verify|verify} messages.
     * @param message PrivacySetting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPrivacySetting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PrivacySetting message, length delimited. Does not implicitly {@link PrivacySetting.verify|verify} messages.
     * @param message PrivacySetting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPrivacySetting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PrivacySetting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PrivacySetting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PrivacySetting;

    /**
     * Decodes a PrivacySetting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PrivacySetting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PrivacySetting;

    /**
     * Verifies a PrivacySetting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PrivacySetting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PrivacySetting
     */
    public static fromObject(object: { [k: string]: any }): PrivacySetting;

    /**
     * Creates a plain object from a PrivacySetting message. Also converts values to other types if specified.
     * @param message PrivacySetting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PrivacySetting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PrivacySetting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Payload. */
export interface IPayload {

    /** Payload listResponse */
    listResponse?: (IListResponse|null);

    /** Payload detailsResponse */
    detailsResponse?: (IDetailsResponse|null);

    /** Payload reviewResponse */
    reviewResponse?: (IReviewResponse|null);

    /** Payload buyResponse */
    buyResponse?: (IBuyResponse|null);

    /** Payload searchResponse */
    searchResponse?: (ISearchResponse|null);

    /** Payload tocResponse */
    tocResponse?: (ITocResponse|null);

    /** Payload browseResponse */
    browseResponse?: (IBrowseResponse|null);

    /** Payload purchaseStatusResponse */
    purchaseStatusResponse?: (IPurchaseStatusResponse|null);

    /** Payload logResponse */
    logResponse?: (string|null);

    /** Payload flagContentResponse */
    flagContentResponse?: (string|null);

    /** Payload bulkDetailsResponse */
    bulkDetailsResponse?: (IBulkDetailsResponse|null);

    /** Payload deliveryResponse */
    deliveryResponse?: (IDeliveryResponse|null);

    /** Payload acceptTosResponse */
    acceptTosResponse?: (IAcceptTosResponse|null);

    /** Payload checkPromoOfferResponse */
    checkPromoOfferResponse?: (ICheckPromoOfferResponse|null);

    /** Payload instrumentSetupInfoResponse */
    instrumentSetupInfoResponse?: (IInstrumentSetupInfoResponse|null);

    /** Payload androidCheckinResponse */
    androidCheckinResponse?: (IAndroidCheckinResponse|null);

    /** Payload uploadDeviceConfigResponse */
    uploadDeviceConfigResponse?: (IUploadDeviceConfigResponse|null);

    /** Payload searchSuggestResponse */
    searchSuggestResponse?: (ISearchSuggestResponse|null);

    /** Payload consumePurchaseResponse */
    consumePurchaseResponse?: (IConsumePurchaseResponse|null);

    /** Payload billingProfileResponse */
    billingProfileResponse?: (IBillingProfileResponse|null);

    /** Payload debugSettingsResponse */
    debugSettingsResponse?: (IDebugSettingsResponse|null);

    /** Payload checkIabPromoResponse */
    checkIabPromoResponse?: (ICheckIabPromoResponse|null);

    /** Payload userActivitySettingsResponse */
    userActivitySettingsResponse?: (IUserActivitySettingsResponse|null);

    /** Payload recordUserActivityResponse */
    recordUserActivityResponse?: (IRecordUserActivityResponse|null);

    /** Payload redeemCodeResponse */
    redeemCodeResponse?: (IRedeemCodeResponse|null);

    /** Payload selfUpdateResponse */
    selfUpdateResponse?: (ISelfUpdateResponse|null);

    /** Payload getInitialInstrumentFlowStateResponse */
    getInitialInstrumentFlowStateResponse?: (IGetInitialInstrumentFlowStateResponse|null);

    /** Payload createInstrumentResponse */
    createInstrumentResponse?: (ICreateInstrumentResponse|null);

    /** Payload challengeResponse */
    challengeResponse?: (IChallengeResponse|null);

    /** Payload backupDeviceChoicesResponse */
    backupDeviceChoicesResponse?: (IBackDeviceChoicesResponse|null);

    /** Payload backupDocumentChoicesResponse */
    backupDocumentChoicesResponse?: (IBackupDocumentChoicesResponse|null);

    /** Payload earlyUpdateResponse */
    earlyUpdateResponse?: (IEarlyUpdateResponse|null);

    /** Payload preloadsResponse */
    preloadsResponse?: (IPreloadsResponse|null);

    /** Payload myAccountsResponse */
    myAccountsResponse?: (IMyAccountsResponse|null);

    /** Payload contentFilterResponse */
    contentFilterResponse?: (IContentFilterResponse|null);

    /** Payload experimentsResponse */
    experimentsResponse?: (IExperimentsResponse|null);

    /** Payload surveyResponse */
    surveyResponse?: (ISurveyResponse|null);

    /** Payload pingResponse */
    pingResponse?: (IPingResponse|null);

    /** Payload updateUserSettingResponse */
    updateUserSettingResponse?: (IUpdateUserSettingResponse|null);

    /** Payload getUserSettingsResponse */
    getUserSettingsResponse?: (IGetUserSettingsResponse|null);

    /** Payload getSharingSettingsResponse */
    getSharingSettingsResponse?: (IGetSharingSettingsResponse|null);

    /** Payload updateSharingSettingsResponse */
    updateSharingSettingsResponse?: (IUpdateSharingSettingsResponse|null);

    /** Payload reviewSnippetsResponse */
    reviewSnippetsResponse?: (IReviewSnippetsResponse|null);

    /** Payload documentSharingStateResponse */
    documentSharingStateResponse?: (IDocumentSharingStateResponse|null);

    /** Payload moduleDeliveryResponse */
    moduleDeliveryResponse?: (IModuleDeliveryResponse|null);

    /** Payload testingProgramResponse */
    testingProgramResponse?: (ITestingProgramResponse|null);

    /** Payload reviewSummaryResponse */
    reviewSummaryResponse?: (IReviewResponse|null);
}

/** Represents a Payload. */
export class Payload implements IPayload {

    /**
     * Constructs a new Payload.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPayload);

    /** Payload listResponse. */
    public listResponse?: (IListResponse|null);

    /** Payload detailsResponse. */
    public detailsResponse?: (IDetailsResponse|null);

    /** Payload reviewResponse. */
    public reviewResponse?: (IReviewResponse|null);

    /** Payload buyResponse. */
    public buyResponse?: (IBuyResponse|null);

    /** Payload searchResponse. */
    public searchResponse?: (ISearchResponse|null);

    /** Payload tocResponse. */
    public tocResponse?: (ITocResponse|null);

    /** Payload browseResponse. */
    public browseResponse?: (IBrowseResponse|null);

    /** Payload purchaseStatusResponse. */
    public purchaseStatusResponse?: (IPurchaseStatusResponse|null);

    /** Payload logResponse. */
    public logResponse: string;

    /** Payload flagContentResponse. */
    public flagContentResponse: string;

    /** Payload bulkDetailsResponse. */
    public bulkDetailsResponse?: (IBulkDetailsResponse|null);

    /** Payload deliveryResponse. */
    public deliveryResponse?: (IDeliveryResponse|null);

    /** Payload acceptTosResponse. */
    public acceptTosResponse?: (IAcceptTosResponse|null);

    /** Payload checkPromoOfferResponse. */
    public checkPromoOfferResponse?: (ICheckPromoOfferResponse|null);

    /** Payload instrumentSetupInfoResponse. */
    public instrumentSetupInfoResponse?: (IInstrumentSetupInfoResponse|null);

    /** Payload androidCheckinResponse. */
    public androidCheckinResponse?: (IAndroidCheckinResponse|null);

    /** Payload uploadDeviceConfigResponse. */
    public uploadDeviceConfigResponse?: (IUploadDeviceConfigResponse|null);

    /** Payload searchSuggestResponse. */
    public searchSuggestResponse?: (ISearchSuggestResponse|null);

    /** Payload consumePurchaseResponse. */
    public consumePurchaseResponse?: (IConsumePurchaseResponse|null);

    /** Payload billingProfileResponse. */
    public billingProfileResponse?: (IBillingProfileResponse|null);

    /** Payload debugSettingsResponse. */
    public debugSettingsResponse?: (IDebugSettingsResponse|null);

    /** Payload checkIabPromoResponse. */
    public checkIabPromoResponse?: (ICheckIabPromoResponse|null);

    /** Payload userActivitySettingsResponse. */
    public userActivitySettingsResponse?: (IUserActivitySettingsResponse|null);

    /** Payload recordUserActivityResponse. */
    public recordUserActivityResponse?: (IRecordUserActivityResponse|null);

    /** Payload redeemCodeResponse. */
    public redeemCodeResponse?: (IRedeemCodeResponse|null);

    /** Payload selfUpdateResponse. */
    public selfUpdateResponse?: (ISelfUpdateResponse|null);

    /** Payload getInitialInstrumentFlowStateResponse. */
    public getInitialInstrumentFlowStateResponse?: (IGetInitialInstrumentFlowStateResponse|null);

    /** Payload createInstrumentResponse. */
    public createInstrumentResponse?: (ICreateInstrumentResponse|null);

    /** Payload challengeResponse. */
    public challengeResponse?: (IChallengeResponse|null);

    /** Payload backupDeviceChoicesResponse. */
    public backupDeviceChoicesResponse?: (IBackDeviceChoicesResponse|null);

    /** Payload backupDocumentChoicesResponse. */
    public backupDocumentChoicesResponse?: (IBackupDocumentChoicesResponse|null);

    /** Payload earlyUpdateResponse. */
    public earlyUpdateResponse?: (IEarlyUpdateResponse|null);

    /** Payload preloadsResponse. */
    public preloadsResponse?: (IPreloadsResponse|null);

    /** Payload myAccountsResponse. */
    public myAccountsResponse?: (IMyAccountsResponse|null);

    /** Payload contentFilterResponse. */
    public contentFilterResponse?: (IContentFilterResponse|null);

    /** Payload experimentsResponse. */
    public experimentsResponse?: (IExperimentsResponse|null);

    /** Payload surveyResponse. */
    public surveyResponse?: (ISurveyResponse|null);

    /** Payload pingResponse. */
    public pingResponse?: (IPingResponse|null);

    /** Payload updateUserSettingResponse. */
    public updateUserSettingResponse?: (IUpdateUserSettingResponse|null);

    /** Payload getUserSettingsResponse. */
    public getUserSettingsResponse?: (IGetUserSettingsResponse|null);

    /** Payload getSharingSettingsResponse. */
    public getSharingSettingsResponse?: (IGetSharingSettingsResponse|null);

    /** Payload updateSharingSettingsResponse. */
    public updateSharingSettingsResponse?: (IUpdateSharingSettingsResponse|null);

    /** Payload reviewSnippetsResponse. */
    public reviewSnippetsResponse?: (IReviewSnippetsResponse|null);

    /** Payload documentSharingStateResponse. */
    public documentSharingStateResponse?: (IDocumentSharingStateResponse|null);

    /** Payload moduleDeliveryResponse. */
    public moduleDeliveryResponse?: (IModuleDeliveryResponse|null);

    /** Payload testingProgramResponse. */
    public testingProgramResponse?: (ITestingProgramResponse|null);

    /** Payload reviewSummaryResponse. */
    public reviewSummaryResponse?: (IReviewResponse|null);

    /**
     * Creates a new Payload instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Payload instance
     */
    public static create(properties?: IPayload): Payload;

    /**
     * Encodes the specified Payload message. Does not implicitly {@link Payload.verify|verify} messages.
     * @param message Payload message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Payload message, length delimited. Does not implicitly {@link Payload.verify|verify} messages.
     * @param message Payload message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Payload message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Payload
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Payload;

    /**
     * Decodes a Payload message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Payload
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Payload;

    /**
     * Verifies a Payload message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Payload message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Payload
     */
    public static fromObject(object: { [k: string]: any }): Payload;

    /**
     * Creates a plain object from a Payload message. Also converts values to other types if specified.
     * @param message Payload
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Payload, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Payload to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CheckIabPromoResponse. */
export interface ICheckIabPromoResponse {
}

/** Represents a CheckIabPromoResponse. */
export class CheckIabPromoResponse implements ICheckIabPromoResponse {

    /**
     * Constructs a new CheckIabPromoResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICheckIabPromoResponse);

    /**
     * Creates a new CheckIabPromoResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CheckIabPromoResponse instance
     */
    public static create(properties?: ICheckIabPromoResponse): CheckIabPromoResponse;

    /**
     * Encodes the specified CheckIabPromoResponse message. Does not implicitly {@link CheckIabPromoResponse.verify|verify} messages.
     * @param message CheckIabPromoResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICheckIabPromoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CheckIabPromoResponse message, length delimited. Does not implicitly {@link CheckIabPromoResponse.verify|verify} messages.
     * @param message CheckIabPromoResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICheckIabPromoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CheckIabPromoResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CheckIabPromoResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CheckIabPromoResponse;

    /**
     * Decodes a CheckIabPromoResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CheckIabPromoResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CheckIabPromoResponse;

    /**
     * Verifies a CheckIabPromoResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CheckIabPromoResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CheckIabPromoResponse
     */
    public static fromObject(object: { [k: string]: any }): CheckIabPromoResponse;

    /**
     * Creates a plain object from a CheckIabPromoResponse message. Also converts values to other types if specified.
     * @param message CheckIabPromoResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CheckIabPromoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CheckIabPromoResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UserActivitySettingsResponse. */
export interface IUserActivitySettingsResponse {
}

/** Represents a UserActivitySettingsResponse. */
export class UserActivitySettingsResponse implements IUserActivitySettingsResponse {

    /**
     * Constructs a new UserActivitySettingsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUserActivitySettingsResponse);

    /**
     * Creates a new UserActivitySettingsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UserActivitySettingsResponse instance
     */
    public static create(properties?: IUserActivitySettingsResponse): UserActivitySettingsResponse;

    /**
     * Encodes the specified UserActivitySettingsResponse message. Does not implicitly {@link UserActivitySettingsResponse.verify|verify} messages.
     * @param message UserActivitySettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUserActivitySettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UserActivitySettingsResponse message, length delimited. Does not implicitly {@link UserActivitySettingsResponse.verify|verify} messages.
     * @param message UserActivitySettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUserActivitySettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UserActivitySettingsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UserActivitySettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UserActivitySettingsResponse;

    /**
     * Decodes a UserActivitySettingsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UserActivitySettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UserActivitySettingsResponse;

    /**
     * Verifies a UserActivitySettingsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UserActivitySettingsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UserActivitySettingsResponse
     */
    public static fromObject(object: { [k: string]: any }): UserActivitySettingsResponse;

    /**
     * Creates a plain object from a UserActivitySettingsResponse message. Also converts values to other types if specified.
     * @param message UserActivitySettingsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UserActivitySettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UserActivitySettingsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RecordUserActivityResponse. */
export interface IRecordUserActivityResponse {
}

/** Represents a RecordUserActivityResponse. */
export class RecordUserActivityResponse implements IRecordUserActivityResponse {

    /**
     * Constructs a new RecordUserActivityResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRecordUserActivityResponse);

    /**
     * Creates a new RecordUserActivityResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RecordUserActivityResponse instance
     */
    public static create(properties?: IRecordUserActivityResponse): RecordUserActivityResponse;

    /**
     * Encodes the specified RecordUserActivityResponse message. Does not implicitly {@link RecordUserActivityResponse.verify|verify} messages.
     * @param message RecordUserActivityResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRecordUserActivityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RecordUserActivityResponse message, length delimited. Does not implicitly {@link RecordUserActivityResponse.verify|verify} messages.
     * @param message RecordUserActivityResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRecordUserActivityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RecordUserActivityResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RecordUserActivityResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RecordUserActivityResponse;

    /**
     * Decodes a RecordUserActivityResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RecordUserActivityResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RecordUserActivityResponse;

    /**
     * Verifies a RecordUserActivityResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RecordUserActivityResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RecordUserActivityResponse
     */
    public static fromObject(object: { [k: string]: any }): RecordUserActivityResponse;

    /**
     * Creates a plain object from a RecordUserActivityResponse message. Also converts values to other types if specified.
     * @param message RecordUserActivityResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RecordUserActivityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RecordUserActivityResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RedeemCodeResponse. */
export interface IRedeemCodeResponse {
}

/** Represents a RedeemCodeResponse. */
export class RedeemCodeResponse implements IRedeemCodeResponse {

    /**
     * Constructs a new RedeemCodeResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRedeemCodeResponse);

    /**
     * Creates a new RedeemCodeResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RedeemCodeResponse instance
     */
    public static create(properties?: IRedeemCodeResponse): RedeemCodeResponse;

    /**
     * Encodes the specified RedeemCodeResponse message. Does not implicitly {@link RedeemCodeResponse.verify|verify} messages.
     * @param message RedeemCodeResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRedeemCodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RedeemCodeResponse message, length delimited. Does not implicitly {@link RedeemCodeResponse.verify|verify} messages.
     * @param message RedeemCodeResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRedeemCodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RedeemCodeResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RedeemCodeResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RedeemCodeResponse;

    /**
     * Decodes a RedeemCodeResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RedeemCodeResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RedeemCodeResponse;

    /**
     * Verifies a RedeemCodeResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RedeemCodeResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RedeemCodeResponse
     */
    public static fromObject(object: { [k: string]: any }): RedeemCodeResponse;

    /**
     * Creates a plain object from a RedeemCodeResponse message. Also converts values to other types if specified.
     * @param message RedeemCodeResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RedeemCodeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RedeemCodeResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SelfUpdateResponse. */
export interface ISelfUpdateResponse {
}

/** Represents a SelfUpdateResponse. */
export class SelfUpdateResponse implements ISelfUpdateResponse {

    /**
     * Constructs a new SelfUpdateResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISelfUpdateResponse);

    /**
     * Creates a new SelfUpdateResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SelfUpdateResponse instance
     */
    public static create(properties?: ISelfUpdateResponse): SelfUpdateResponse;

    /**
     * Encodes the specified SelfUpdateResponse message. Does not implicitly {@link SelfUpdateResponse.verify|verify} messages.
     * @param message SelfUpdateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISelfUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SelfUpdateResponse message, length delimited. Does not implicitly {@link SelfUpdateResponse.verify|verify} messages.
     * @param message SelfUpdateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISelfUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SelfUpdateResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SelfUpdateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SelfUpdateResponse;

    /**
     * Decodes a SelfUpdateResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SelfUpdateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SelfUpdateResponse;

    /**
     * Verifies a SelfUpdateResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SelfUpdateResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SelfUpdateResponse
     */
    public static fromObject(object: { [k: string]: any }): SelfUpdateResponse;

    /**
     * Creates a plain object from a SelfUpdateResponse message. Also converts values to other types if specified.
     * @param message SelfUpdateResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SelfUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SelfUpdateResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GetInitialInstrumentFlowStateResponse. */
export interface IGetInitialInstrumentFlowStateResponse {
}

/** Represents a GetInitialInstrumentFlowStateResponse. */
export class GetInitialInstrumentFlowStateResponse implements IGetInitialInstrumentFlowStateResponse {

    /**
     * Constructs a new GetInitialInstrumentFlowStateResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGetInitialInstrumentFlowStateResponse);

    /**
     * Creates a new GetInitialInstrumentFlowStateResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GetInitialInstrumentFlowStateResponse instance
     */
    public static create(properties?: IGetInitialInstrumentFlowStateResponse): GetInitialInstrumentFlowStateResponse;

    /**
     * Encodes the specified GetInitialInstrumentFlowStateResponse message. Does not implicitly {@link GetInitialInstrumentFlowStateResponse.verify|verify} messages.
     * @param message GetInitialInstrumentFlowStateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGetInitialInstrumentFlowStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GetInitialInstrumentFlowStateResponse message, length delimited. Does not implicitly {@link GetInitialInstrumentFlowStateResponse.verify|verify} messages.
     * @param message GetInitialInstrumentFlowStateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGetInitialInstrumentFlowStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GetInitialInstrumentFlowStateResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GetInitialInstrumentFlowStateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetInitialInstrumentFlowStateResponse;

    /**
     * Decodes a GetInitialInstrumentFlowStateResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GetInitialInstrumentFlowStateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetInitialInstrumentFlowStateResponse;

    /**
     * Verifies a GetInitialInstrumentFlowStateResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GetInitialInstrumentFlowStateResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GetInitialInstrumentFlowStateResponse
     */
    public static fromObject(object: { [k: string]: any }): GetInitialInstrumentFlowStateResponse;

    /**
     * Creates a plain object from a GetInitialInstrumentFlowStateResponse message. Also converts values to other types if specified.
     * @param message GetInitialInstrumentFlowStateResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GetInitialInstrumentFlowStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GetInitialInstrumentFlowStateResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CreateInstrumentResponse. */
export interface ICreateInstrumentResponse {
}

/** Represents a CreateInstrumentResponse. */
export class CreateInstrumentResponse implements ICreateInstrumentResponse {

    /**
     * Constructs a new CreateInstrumentResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICreateInstrumentResponse);

    /**
     * Creates a new CreateInstrumentResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CreateInstrumentResponse instance
     */
    public static create(properties?: ICreateInstrumentResponse): CreateInstrumentResponse;

    /**
     * Encodes the specified CreateInstrumentResponse message. Does not implicitly {@link CreateInstrumentResponse.verify|verify} messages.
     * @param message CreateInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICreateInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CreateInstrumentResponse message, length delimited. Does not implicitly {@link CreateInstrumentResponse.verify|verify} messages.
     * @param message CreateInstrumentResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICreateInstrumentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CreateInstrumentResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CreateInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CreateInstrumentResponse;

    /**
     * Decodes a CreateInstrumentResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CreateInstrumentResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CreateInstrumentResponse;

    /**
     * Verifies a CreateInstrumentResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CreateInstrumentResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CreateInstrumentResponse
     */
    public static fromObject(object: { [k: string]: any }): CreateInstrumentResponse;

    /**
     * Creates a plain object from a CreateInstrumentResponse message. Also converts values to other types if specified.
     * @param message CreateInstrumentResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CreateInstrumentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CreateInstrumentResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ChallengeResponse. */
export interface IChallengeResponse {
}

/** Represents a ChallengeResponse. */
export class ChallengeResponse implements IChallengeResponse {

    /**
     * Constructs a new ChallengeResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChallengeResponse);

    /**
     * Creates a new ChallengeResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ChallengeResponse instance
     */
    public static create(properties?: IChallengeResponse): ChallengeResponse;

    /**
     * Encodes the specified ChallengeResponse message. Does not implicitly {@link ChallengeResponse.verify|verify} messages.
     * @param message ChallengeResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChallengeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ChallengeResponse message, length delimited. Does not implicitly {@link ChallengeResponse.verify|verify} messages.
     * @param message ChallengeResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChallengeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ChallengeResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ChallengeResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ChallengeResponse;

    /**
     * Decodes a ChallengeResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ChallengeResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ChallengeResponse;

    /**
     * Verifies a ChallengeResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ChallengeResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ChallengeResponse
     */
    public static fromObject(object: { [k: string]: any }): ChallengeResponse;

    /**
     * Creates a plain object from a ChallengeResponse message. Also converts values to other types if specified.
     * @param message ChallengeResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ChallengeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ChallengeResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BackDeviceChoicesResponse. */
export interface IBackDeviceChoicesResponse {
}

/** Represents a BackDeviceChoicesResponse. */
export class BackDeviceChoicesResponse implements IBackDeviceChoicesResponse {

    /**
     * Constructs a new BackDeviceChoicesResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBackDeviceChoicesResponse);

    /**
     * Creates a new BackDeviceChoicesResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BackDeviceChoicesResponse instance
     */
    public static create(properties?: IBackDeviceChoicesResponse): BackDeviceChoicesResponse;

    /**
     * Encodes the specified BackDeviceChoicesResponse message. Does not implicitly {@link BackDeviceChoicesResponse.verify|verify} messages.
     * @param message BackDeviceChoicesResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBackDeviceChoicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BackDeviceChoicesResponse message, length delimited. Does not implicitly {@link BackDeviceChoicesResponse.verify|verify} messages.
     * @param message BackDeviceChoicesResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBackDeviceChoicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BackDeviceChoicesResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BackDeviceChoicesResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BackDeviceChoicesResponse;

    /**
     * Decodes a BackDeviceChoicesResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BackDeviceChoicesResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BackDeviceChoicesResponse;

    /**
     * Verifies a BackDeviceChoicesResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BackDeviceChoicesResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BackDeviceChoicesResponse
     */
    public static fromObject(object: { [k: string]: any }): BackDeviceChoicesResponse;

    /**
     * Creates a plain object from a BackDeviceChoicesResponse message. Also converts values to other types if specified.
     * @param message BackDeviceChoicesResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BackDeviceChoicesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BackDeviceChoicesResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a BackupDocumentChoicesResponse. */
export interface IBackupDocumentChoicesResponse {
}

/** Represents a BackupDocumentChoicesResponse. */
export class BackupDocumentChoicesResponse implements IBackupDocumentChoicesResponse {

    /**
     * Constructs a new BackupDocumentChoicesResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBackupDocumentChoicesResponse);

    /**
     * Creates a new BackupDocumentChoicesResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns BackupDocumentChoicesResponse instance
     */
    public static create(properties?: IBackupDocumentChoicesResponse): BackupDocumentChoicesResponse;

    /**
     * Encodes the specified BackupDocumentChoicesResponse message. Does not implicitly {@link BackupDocumentChoicesResponse.verify|verify} messages.
     * @param message BackupDocumentChoicesResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBackupDocumentChoicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified BackupDocumentChoicesResponse message, length delimited. Does not implicitly {@link BackupDocumentChoicesResponse.verify|verify} messages.
     * @param message BackupDocumentChoicesResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBackupDocumentChoicesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a BackupDocumentChoicesResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns BackupDocumentChoicesResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): BackupDocumentChoicesResponse;

    /**
     * Decodes a BackupDocumentChoicesResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns BackupDocumentChoicesResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): BackupDocumentChoicesResponse;

    /**
     * Verifies a BackupDocumentChoicesResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a BackupDocumentChoicesResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns BackupDocumentChoicesResponse
     */
    public static fromObject(object: { [k: string]: any }): BackupDocumentChoicesResponse;

    /**
     * Creates a plain object from a BackupDocumentChoicesResponse message. Also converts values to other types if specified.
     * @param message BackupDocumentChoicesResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: BackupDocumentChoicesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this BackupDocumentChoicesResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an EarlyUpdateResponse. */
export interface IEarlyUpdateResponse {
}

/** Represents an EarlyUpdateResponse. */
export class EarlyUpdateResponse implements IEarlyUpdateResponse {

    /**
     * Constructs a new EarlyUpdateResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IEarlyUpdateResponse);

    /**
     * Creates a new EarlyUpdateResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns EarlyUpdateResponse instance
     */
    public static create(properties?: IEarlyUpdateResponse): EarlyUpdateResponse;

    /**
     * Encodes the specified EarlyUpdateResponse message. Does not implicitly {@link EarlyUpdateResponse.verify|verify} messages.
     * @param message EarlyUpdateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IEarlyUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified EarlyUpdateResponse message, length delimited. Does not implicitly {@link EarlyUpdateResponse.verify|verify} messages.
     * @param message EarlyUpdateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IEarlyUpdateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an EarlyUpdateResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns EarlyUpdateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): EarlyUpdateResponse;

    /**
     * Decodes an EarlyUpdateResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns EarlyUpdateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): EarlyUpdateResponse;

    /**
     * Verifies an EarlyUpdateResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an EarlyUpdateResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns EarlyUpdateResponse
     */
    public static fromObject(object: { [k: string]: any }): EarlyUpdateResponse;

    /**
     * Creates a plain object from an EarlyUpdateResponse message. Also converts values to other types if specified.
     * @param message EarlyUpdateResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: EarlyUpdateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this EarlyUpdateResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PreloadsResponse. */
export interface IPreloadsResponse {

    /** PreloadsResponse configPreload */
    configPreload?: (PreloadsResponse.IPreload|null);

    /** PreloadsResponse appPreload */
    appPreload?: (PreloadsResponse.IPreload[]|null);
}

/** Represents a PreloadsResponse. */
export class PreloadsResponse implements IPreloadsResponse {

    /**
     * Constructs a new PreloadsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPreloadsResponse);

    /** PreloadsResponse configPreload. */
    public configPreload?: (PreloadsResponse.IPreload|null);

    /** PreloadsResponse appPreload. */
    public appPreload: PreloadsResponse.IPreload[];

    /**
     * Creates a new PreloadsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PreloadsResponse instance
     */
    public static create(properties?: IPreloadsResponse): PreloadsResponse;

    /**
     * Encodes the specified PreloadsResponse message. Does not implicitly {@link PreloadsResponse.verify|verify} messages.
     * @param message PreloadsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPreloadsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PreloadsResponse message, length delimited. Does not implicitly {@link PreloadsResponse.verify|verify} messages.
     * @param message PreloadsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPreloadsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PreloadsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PreloadsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PreloadsResponse;

    /**
     * Decodes a PreloadsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PreloadsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PreloadsResponse;

    /**
     * Verifies a PreloadsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PreloadsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PreloadsResponse
     */
    public static fromObject(object: { [k: string]: any }): PreloadsResponse;

    /**
     * Creates a plain object from a PreloadsResponse message. Also converts values to other types if specified.
     * @param message PreloadsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PreloadsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PreloadsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace PreloadsResponse {

    /** Properties of a Preload. */
    interface IPreload {

        /** Preload DocId */
        DocId?: (IDocId|null);

        /** Preload versionCode */
        versionCode?: (number|null);

        /** Preload title */
        title?: (string|null);

        /** Preload icon */
        icon?: (IImage|null);

        /** Preload deliveryToken */
        deliveryToken?: (string|null);

        /** Preload installLocation */
        installLocation?: (number|null);

        /** Preload size */
        size?: (number|Long|null);
    }

    /** Represents a Preload. */
    class Preload implements IPreload {

        /**
         * Constructs a new Preload.
         * @param [properties] Properties to set
         */
        constructor(properties?: PreloadsResponse.IPreload);

        /** Preload DocId. */
        public DocId?: (IDocId|null);

        /** Preload versionCode. */
        public versionCode: number;

        /** Preload title. */
        public title: string;

        /** Preload icon. */
        public icon?: (IImage|null);

        /** Preload deliveryToken. */
        public deliveryToken: string;

        /** Preload installLocation. */
        public installLocation: number;

        /** Preload size. */
        public size: (number|Long);

        /**
         * Creates a new Preload instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Preload instance
         */
        public static create(properties?: PreloadsResponse.IPreload): PreloadsResponse.Preload;

        /**
         * Encodes the specified Preload message. Does not implicitly {@link PreloadsResponse.Preload.verify|verify} messages.
         * @param message Preload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: PreloadsResponse.IPreload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Preload message, length delimited. Does not implicitly {@link PreloadsResponse.Preload.verify|verify} messages.
         * @param message Preload message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: PreloadsResponse.IPreload, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Preload message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Preload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PreloadsResponse.Preload;

        /**
         * Decodes a Preload message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Preload
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PreloadsResponse.Preload;

        /**
         * Verifies a Preload message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Preload message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Preload
         */
        public static fromObject(object: { [k: string]: any }): PreloadsResponse.Preload;

        /**
         * Creates a plain object from a Preload message. Also converts values to other types if specified.
         * @param message Preload
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: PreloadsResponse.Preload, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Preload to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MyAccountsResponse. */
export interface IMyAccountsResponse {
}

/** Represents a MyAccountsResponse. */
export class MyAccountsResponse implements IMyAccountsResponse {

    /**
     * Constructs a new MyAccountsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMyAccountsResponse);

    /**
     * Creates a new MyAccountsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MyAccountsResponse instance
     */
    public static create(properties?: IMyAccountsResponse): MyAccountsResponse;

    /**
     * Encodes the specified MyAccountsResponse message. Does not implicitly {@link MyAccountsResponse.verify|verify} messages.
     * @param message MyAccountsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMyAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MyAccountsResponse message, length delimited. Does not implicitly {@link MyAccountsResponse.verify|verify} messages.
     * @param message MyAccountsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMyAccountsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MyAccountsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MyAccountsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MyAccountsResponse;

    /**
     * Decodes a MyAccountsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MyAccountsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MyAccountsResponse;

    /**
     * Verifies a MyAccountsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MyAccountsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MyAccountsResponse
     */
    public static fromObject(object: { [k: string]: any }): MyAccountsResponse;

    /**
     * Creates a plain object from a MyAccountsResponse message. Also converts values to other types if specified.
     * @param message MyAccountsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MyAccountsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MyAccountsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ContentFilterResponse. */
export interface IContentFilterResponse {
}

/** Represents a ContentFilterResponse. */
export class ContentFilterResponse implements IContentFilterResponse {

    /**
     * Constructs a new ContentFilterResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IContentFilterResponse);

    /**
     * Creates a new ContentFilterResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ContentFilterResponse instance
     */
    public static create(properties?: IContentFilterResponse): ContentFilterResponse;

    /**
     * Encodes the specified ContentFilterResponse message. Does not implicitly {@link ContentFilterResponse.verify|verify} messages.
     * @param message ContentFilterResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IContentFilterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ContentFilterResponse message, length delimited. Does not implicitly {@link ContentFilterResponse.verify|verify} messages.
     * @param message ContentFilterResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IContentFilterResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ContentFilterResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ContentFilterResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ContentFilterResponse;

    /**
     * Decodes a ContentFilterResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ContentFilterResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ContentFilterResponse;

    /**
     * Verifies a ContentFilterResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ContentFilterResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ContentFilterResponse
     */
    public static fromObject(object: { [k: string]: any }): ContentFilterResponse;

    /**
     * Creates a plain object from a ContentFilterResponse message. Also converts values to other types if specified.
     * @param message ContentFilterResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ContentFilterResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ContentFilterResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an ExperimentsResponse. */
export interface IExperimentsResponse {
}

/** Represents an ExperimentsResponse. */
export class ExperimentsResponse implements IExperimentsResponse {

    /**
     * Constructs a new ExperimentsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IExperimentsResponse);

    /**
     * Creates a new ExperimentsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ExperimentsResponse instance
     */
    public static create(properties?: IExperimentsResponse): ExperimentsResponse;

    /**
     * Encodes the specified ExperimentsResponse message. Does not implicitly {@link ExperimentsResponse.verify|verify} messages.
     * @param message ExperimentsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IExperimentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ExperimentsResponse message, length delimited. Does not implicitly {@link ExperimentsResponse.verify|verify} messages.
     * @param message ExperimentsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IExperimentsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an ExperimentsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ExperimentsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ExperimentsResponse;

    /**
     * Decodes an ExperimentsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ExperimentsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ExperimentsResponse;

    /**
     * Verifies an ExperimentsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an ExperimentsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ExperimentsResponse
     */
    public static fromObject(object: { [k: string]: any }): ExperimentsResponse;

    /**
     * Creates a plain object from an ExperimentsResponse message. Also converts values to other types if specified.
     * @param message ExperimentsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ExperimentsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ExperimentsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SurveyResponse. */
export interface ISurveyResponse {
}

/** Represents a SurveyResponse. */
export class SurveyResponse implements ISurveyResponse {

    /**
     * Constructs a new SurveyResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISurveyResponse);

    /**
     * Creates a new SurveyResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SurveyResponse instance
     */
    public static create(properties?: ISurveyResponse): SurveyResponse;

    /**
     * Encodes the specified SurveyResponse message. Does not implicitly {@link SurveyResponse.verify|verify} messages.
     * @param message SurveyResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISurveyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SurveyResponse message, length delimited. Does not implicitly {@link SurveyResponse.verify|verify} messages.
     * @param message SurveyResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISurveyResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SurveyResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SurveyResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SurveyResponse;

    /**
     * Decodes a SurveyResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SurveyResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SurveyResponse;

    /**
     * Verifies a SurveyResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SurveyResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SurveyResponse
     */
    public static fromObject(object: { [k: string]: any }): SurveyResponse;

    /**
     * Creates a plain object from a SurveyResponse message. Also converts values to other types if specified.
     * @param message SurveyResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SurveyResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SurveyResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PingResponse. */
export interface IPingResponse {
}

/** Represents a PingResponse. */
export class PingResponse implements IPingResponse {

    /**
     * Constructs a new PingResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPingResponse);

    /**
     * Creates a new PingResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PingResponse instance
     */
    public static create(properties?: IPingResponse): PingResponse;

    /**
     * Encodes the specified PingResponse message. Does not implicitly {@link PingResponse.verify|verify} messages.
     * @param message PingResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PingResponse message, length delimited. Does not implicitly {@link PingResponse.verify|verify} messages.
     * @param message PingResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PingResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PingResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PingResponse;

    /**
     * Decodes a PingResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PingResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PingResponse;

    /**
     * Verifies a PingResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PingResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PingResponse
     */
    public static fromObject(object: { [k: string]: any }): PingResponse;

    /**
     * Creates a plain object from a PingResponse message. Also converts values to other types if specified.
     * @param message PingResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PingResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UpdateUserSettingResponse. */
export interface IUpdateUserSettingResponse {
}

/** Represents an UpdateUserSettingResponse. */
export class UpdateUserSettingResponse implements IUpdateUserSettingResponse {

    /**
     * Constructs a new UpdateUserSettingResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUpdateUserSettingResponse);

    /**
     * Creates a new UpdateUserSettingResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UpdateUserSettingResponse instance
     */
    public static create(properties?: IUpdateUserSettingResponse): UpdateUserSettingResponse;

    /**
     * Encodes the specified UpdateUserSettingResponse message. Does not implicitly {@link UpdateUserSettingResponse.verify|verify} messages.
     * @param message UpdateUserSettingResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUpdateUserSettingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UpdateUserSettingResponse message, length delimited. Does not implicitly {@link UpdateUserSettingResponse.verify|verify} messages.
     * @param message UpdateUserSettingResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUpdateUserSettingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UpdateUserSettingResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UpdateUserSettingResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UpdateUserSettingResponse;

    /**
     * Decodes an UpdateUserSettingResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UpdateUserSettingResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UpdateUserSettingResponse;

    /**
     * Verifies an UpdateUserSettingResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UpdateUserSettingResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UpdateUserSettingResponse
     */
    public static fromObject(object: { [k: string]: any }): UpdateUserSettingResponse;

    /**
     * Creates a plain object from an UpdateUserSettingResponse message. Also converts values to other types if specified.
     * @param message UpdateUserSettingResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UpdateUserSettingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UpdateUserSettingResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GetUserSettingsResponse. */
export interface IGetUserSettingsResponse {
}

/** Represents a GetUserSettingsResponse. */
export class GetUserSettingsResponse implements IGetUserSettingsResponse {

    /**
     * Constructs a new GetUserSettingsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGetUserSettingsResponse);

    /**
     * Creates a new GetUserSettingsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GetUserSettingsResponse instance
     */
    public static create(properties?: IGetUserSettingsResponse): GetUserSettingsResponse;

    /**
     * Encodes the specified GetUserSettingsResponse message. Does not implicitly {@link GetUserSettingsResponse.verify|verify} messages.
     * @param message GetUserSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGetUserSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GetUserSettingsResponse message, length delimited. Does not implicitly {@link GetUserSettingsResponse.verify|verify} messages.
     * @param message GetUserSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGetUserSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GetUserSettingsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GetUserSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserSettingsResponse;

    /**
     * Decodes a GetUserSettingsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GetUserSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserSettingsResponse;

    /**
     * Verifies a GetUserSettingsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GetUserSettingsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GetUserSettingsResponse
     */
    public static fromObject(object: { [k: string]: any }): GetUserSettingsResponse;

    /**
     * Creates a plain object from a GetUserSettingsResponse message. Also converts values to other types if specified.
     * @param message GetUserSettingsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GetUserSettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GetUserSettingsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GetSharingSettingsResponse. */
export interface IGetSharingSettingsResponse {
}

/** Represents a GetSharingSettingsResponse. */
export class GetSharingSettingsResponse implements IGetSharingSettingsResponse {

    /**
     * Constructs a new GetSharingSettingsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGetSharingSettingsResponse);

    /**
     * Creates a new GetSharingSettingsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GetSharingSettingsResponse instance
     */
    public static create(properties?: IGetSharingSettingsResponse): GetSharingSettingsResponse;

    /**
     * Encodes the specified GetSharingSettingsResponse message. Does not implicitly {@link GetSharingSettingsResponse.verify|verify} messages.
     * @param message GetSharingSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGetSharingSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GetSharingSettingsResponse message, length delimited. Does not implicitly {@link GetSharingSettingsResponse.verify|verify} messages.
     * @param message GetSharingSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGetSharingSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GetSharingSettingsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GetSharingSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetSharingSettingsResponse;

    /**
     * Decodes a GetSharingSettingsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GetSharingSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetSharingSettingsResponse;

    /**
     * Verifies a GetSharingSettingsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GetSharingSettingsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GetSharingSettingsResponse
     */
    public static fromObject(object: { [k: string]: any }): GetSharingSettingsResponse;

    /**
     * Creates a plain object from a GetSharingSettingsResponse message. Also converts values to other types if specified.
     * @param message GetSharingSettingsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GetSharingSettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GetSharingSettingsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UpdateSharingSettingsResponse. */
export interface IUpdateSharingSettingsResponse {
}

/** Represents an UpdateSharingSettingsResponse. */
export class UpdateSharingSettingsResponse implements IUpdateSharingSettingsResponse {

    /**
     * Constructs a new UpdateSharingSettingsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUpdateSharingSettingsResponse);

    /**
     * Creates a new UpdateSharingSettingsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UpdateSharingSettingsResponse instance
     */
    public static create(properties?: IUpdateSharingSettingsResponse): UpdateSharingSettingsResponse;

    /**
     * Encodes the specified UpdateSharingSettingsResponse message. Does not implicitly {@link UpdateSharingSettingsResponse.verify|verify} messages.
     * @param message UpdateSharingSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUpdateSharingSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UpdateSharingSettingsResponse message, length delimited. Does not implicitly {@link UpdateSharingSettingsResponse.verify|verify} messages.
     * @param message UpdateSharingSettingsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUpdateSharingSettingsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UpdateSharingSettingsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UpdateSharingSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UpdateSharingSettingsResponse;

    /**
     * Decodes an UpdateSharingSettingsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UpdateSharingSettingsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UpdateSharingSettingsResponse;

    /**
     * Verifies an UpdateSharingSettingsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UpdateSharingSettingsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UpdateSharingSettingsResponse
     */
    public static fromObject(object: { [k: string]: any }): UpdateSharingSettingsResponse;

    /**
     * Creates a plain object from an UpdateSharingSettingsResponse message. Also converts values to other types if specified.
     * @param message UpdateSharingSettingsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UpdateSharingSettingsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UpdateSharingSettingsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReviewSnippetsResponse. */
export interface IReviewSnippetsResponse {
}

/** Represents a ReviewSnippetsResponse. */
export class ReviewSnippetsResponse implements IReviewSnippetsResponse {

    /**
     * Constructs a new ReviewSnippetsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReviewSnippetsResponse);

    /**
     * Creates a new ReviewSnippetsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReviewSnippetsResponse instance
     */
    public static create(properties?: IReviewSnippetsResponse): ReviewSnippetsResponse;

    /**
     * Encodes the specified ReviewSnippetsResponse message. Does not implicitly {@link ReviewSnippetsResponse.verify|verify} messages.
     * @param message ReviewSnippetsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReviewSnippetsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReviewSnippetsResponse message, length delimited. Does not implicitly {@link ReviewSnippetsResponse.verify|verify} messages.
     * @param message ReviewSnippetsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReviewSnippetsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReviewSnippetsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReviewSnippetsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReviewSnippetsResponse;

    /**
     * Decodes a ReviewSnippetsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReviewSnippetsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReviewSnippetsResponse;

    /**
     * Verifies a ReviewSnippetsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReviewSnippetsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReviewSnippetsResponse
     */
    public static fromObject(object: { [k: string]: any }): ReviewSnippetsResponse;

    /**
     * Creates a plain object from a ReviewSnippetsResponse message. Also converts values to other types if specified.
     * @param message ReviewSnippetsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReviewSnippetsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReviewSnippetsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a DocumentSharingStateResponse. */
export interface IDocumentSharingStateResponse {
}

/** Represents a DocumentSharingStateResponse. */
export class DocumentSharingStateResponse implements IDocumentSharingStateResponse {

    /**
     * Constructs a new DocumentSharingStateResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IDocumentSharingStateResponse);

    /**
     * Creates a new DocumentSharingStateResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns DocumentSharingStateResponse instance
     */
    public static create(properties?: IDocumentSharingStateResponse): DocumentSharingStateResponse;

    /**
     * Encodes the specified DocumentSharingStateResponse message. Does not implicitly {@link DocumentSharingStateResponse.verify|verify} messages.
     * @param message DocumentSharingStateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IDocumentSharingStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified DocumentSharingStateResponse message, length delimited. Does not implicitly {@link DocumentSharingStateResponse.verify|verify} messages.
     * @param message DocumentSharingStateResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IDocumentSharingStateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a DocumentSharingStateResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns DocumentSharingStateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): DocumentSharingStateResponse;

    /**
     * Decodes a DocumentSharingStateResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns DocumentSharingStateResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): DocumentSharingStateResponse;

    /**
     * Verifies a DocumentSharingStateResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a DocumentSharingStateResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns DocumentSharingStateResponse
     */
    public static fromObject(object: { [k: string]: any }): DocumentSharingStateResponse;

    /**
     * Creates a plain object from a DocumentSharingStateResponse message. Also converts values to other types if specified.
     * @param message DocumentSharingStateResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: DocumentSharingStateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this DocumentSharingStateResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ModuleDeliveryResponse. */
export interface IModuleDeliveryResponse {
}

/** Represents a ModuleDeliveryResponse. */
export class ModuleDeliveryResponse implements IModuleDeliveryResponse {

    /**
     * Constructs a new ModuleDeliveryResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IModuleDeliveryResponse);

    /**
     * Creates a new ModuleDeliveryResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ModuleDeliveryResponse instance
     */
    public static create(properties?: IModuleDeliveryResponse): ModuleDeliveryResponse;

    /**
     * Encodes the specified ModuleDeliveryResponse message. Does not implicitly {@link ModuleDeliveryResponse.verify|verify} messages.
     * @param message ModuleDeliveryResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IModuleDeliveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ModuleDeliveryResponse message, length delimited. Does not implicitly {@link ModuleDeliveryResponse.verify|verify} messages.
     * @param message ModuleDeliveryResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IModuleDeliveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ModuleDeliveryResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ModuleDeliveryResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ModuleDeliveryResponse;

    /**
     * Decodes a ModuleDeliveryResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ModuleDeliveryResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ModuleDeliveryResponse;

    /**
     * Verifies a ModuleDeliveryResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ModuleDeliveryResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ModuleDeliveryResponse
     */
    public static fromObject(object: { [k: string]: any }): ModuleDeliveryResponse;

    /**
     * Creates a plain object from a ModuleDeliveryResponse message. Also converts values to other types if specified.
     * @param message ModuleDeliveryResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ModuleDeliveryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ModuleDeliveryResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PreFetch. */
export interface IPreFetch {

    /** PreFetch url */
    url?: (string|null);

    /** PreFetch response */
    response?: (IResponseWrapper|null);

    /** PreFetch etag */
    etag?: (string|null);

    /** PreFetch ttl */
    ttl?: (number|Long|null);

    /** PreFetch softTtl */
    softTtl?: (number|Long|null);
}

/** Represents a PreFetch. */
export class PreFetch implements IPreFetch {

    /**
     * Constructs a new PreFetch.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPreFetch);

    /** PreFetch url. */
    public url: string;

    /** PreFetch response. */
    public response?: (IResponseWrapper|null);

    /** PreFetch etag. */
    public etag: string;

    /** PreFetch ttl. */
    public ttl: (number|Long);

    /** PreFetch softTtl. */
    public softTtl: (number|Long);

    /**
     * Creates a new PreFetch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PreFetch instance
     */
    public static create(properties?: IPreFetch): PreFetch;

    /**
     * Encodes the specified PreFetch message. Does not implicitly {@link PreFetch.verify|verify} messages.
     * @param message PreFetch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPreFetch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PreFetch message, length delimited. Does not implicitly {@link PreFetch.verify|verify} messages.
     * @param message PreFetch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPreFetch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PreFetch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PreFetch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PreFetch;

    /**
     * Decodes a PreFetch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PreFetch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PreFetch;

    /**
     * Verifies a PreFetch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PreFetch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PreFetch
     */
    public static fromObject(object: { [k: string]: any }): PreFetch;

    /**
     * Creates a plain object from a PreFetch message. Also converts values to other types if specified.
     * @param message PreFetch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PreFetch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PreFetch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ServerMetadata. */
export interface IServerMetadata {

    /** ServerMetadata latencyMillis */
    latencyMillis?: (number|Long|null);
}

/** Represents a ServerMetadata. */
export class ServerMetadata implements IServerMetadata {

    /**
     * Constructs a new ServerMetadata.
     * @param [properties] Properties to set
     */
    constructor(properties?: IServerMetadata);

    /** ServerMetadata latencyMillis. */
    public latencyMillis: (number|Long);

    /**
     * Creates a new ServerMetadata instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ServerMetadata instance
     */
    public static create(properties?: IServerMetadata): ServerMetadata;

    /**
     * Encodes the specified ServerMetadata message. Does not implicitly {@link ServerMetadata.verify|verify} messages.
     * @param message ServerMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IServerMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ServerMetadata message, length delimited. Does not implicitly {@link ServerMetadata.verify|verify} messages.
     * @param message ServerMetadata message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IServerMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ServerMetadata message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ServerMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServerMetadata;

    /**
     * Decodes a ServerMetadata message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ServerMetadata
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServerMetadata;

    /**
     * Verifies a ServerMetadata message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ServerMetadata message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ServerMetadata
     */
    public static fromObject(object: { [k: string]: any }): ServerMetadata;

    /**
     * Creates a plain object from a ServerMetadata message. Also converts values to other types if specified.
     * @param message ServerMetadata
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ServerMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ServerMetadata to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Targets. */
export interface ITargets {

    /** Targets targetId */
    targetId?: ((number|Long)[]|null);

    /** Targets signature */
    signature?: (Uint8Array|null);
}

/** Represents a Targets. */
export class Targets implements ITargets {

    /**
     * Constructs a new Targets.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITargets);

    /** Targets targetId. */
    public targetId: (number|Long)[];

    /** Targets signature. */
    public signature: Uint8Array;

    /**
     * Creates a new Targets instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Targets instance
     */
    public static create(properties?: ITargets): Targets;

    /**
     * Encodes the specified Targets message. Does not implicitly {@link Targets.verify|verify} messages.
     * @param message Targets message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITargets, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Targets message, length delimited. Does not implicitly {@link Targets.verify|verify} messages.
     * @param message Targets message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITargets, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Targets message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Targets
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Targets;

    /**
     * Decodes a Targets message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Targets
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Targets;

    /**
     * Verifies a Targets message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Targets message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Targets
     */
    public static fromObject(object: { [k: string]: any }): Targets;

    /**
     * Creates a plain object from a Targets message. Also converts values to other types if specified.
     * @param message Targets
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Targets, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Targets to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ServerCookie. */
export interface IServerCookie {

    /** ServerCookie type */
    type?: (number|null);

    /** ServerCookie token */
    token?: (Uint8Array|null);
}

/** Represents a ServerCookie. */
export class ServerCookie implements IServerCookie {

    /**
     * Constructs a new ServerCookie.
     * @param [properties] Properties to set
     */
    constructor(properties?: IServerCookie);

    /** ServerCookie type. */
    public type: number;

    /** ServerCookie token. */
    public token: Uint8Array;

    /**
     * Creates a new ServerCookie instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ServerCookie instance
     */
    public static create(properties?: IServerCookie): ServerCookie;

    /**
     * Encodes the specified ServerCookie message. Does not implicitly {@link ServerCookie.verify|verify} messages.
     * @param message ServerCookie message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IServerCookie, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ServerCookie message, length delimited. Does not implicitly {@link ServerCookie.verify|verify} messages.
     * @param message ServerCookie message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IServerCookie, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ServerCookie message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ServerCookie
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServerCookie;

    /**
     * Decodes a ServerCookie message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ServerCookie
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServerCookie;

    /**
     * Verifies a ServerCookie message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ServerCookie message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ServerCookie
     */
    public static fromObject(object: { [k: string]: any }): ServerCookie;

    /**
     * Creates a plain object from a ServerCookie message. Also converts values to other types if specified.
     * @param message ServerCookie
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ServerCookie, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ServerCookie to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ServerCookies. */
export interface IServerCookies {

    /** ServerCookies serverCookie */
    serverCookie?: (IServerCookie[]|null);
}

/** Represents a ServerCookies. */
export class ServerCookies implements IServerCookies {

    /**
     * Constructs a new ServerCookies.
     * @param [properties] Properties to set
     */
    constructor(properties?: IServerCookies);

    /** ServerCookies serverCookie. */
    public serverCookie: IServerCookie[];

    /**
     * Creates a new ServerCookies instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ServerCookies instance
     */
    public static create(properties?: IServerCookies): ServerCookies;

    /**
     * Encodes the specified ServerCookies message. Does not implicitly {@link ServerCookies.verify|verify} messages.
     * @param message ServerCookies message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IServerCookies, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ServerCookies message, length delimited. Does not implicitly {@link ServerCookies.verify|verify} messages.
     * @param message ServerCookies message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IServerCookies, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ServerCookies message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ServerCookies
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServerCookies;

    /**
     * Decodes a ServerCookies message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ServerCookies
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServerCookies;

    /**
     * Verifies a ServerCookies message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ServerCookies message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ServerCookies
     */
    public static fromObject(object: { [k: string]: any }): ServerCookies;

    /**
     * Creates a plain object from a ServerCookies message. Also converts values to other types if specified.
     * @param message ServerCookies
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ServerCookies, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ServerCookies to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ResponseWrapper. */
export interface IResponseWrapper {

    /** ResponseWrapper payload */
    payload?: (IPayload|null);

    /** ResponseWrapper commands */
    commands?: (IServerCommands|null);

    /** ResponseWrapper preFetch */
    preFetch?: (IPreFetch[]|null);

    /** ResponseWrapper notification */
    notification?: (INotification[]|null);

    /** ResponseWrapper serverMetadata */
    serverMetadata?: (IServerMetadata|null);

    /** ResponseWrapper targets */
    targets?: (ITargets|null);

    /** ResponseWrapper serverCookies */
    serverCookies?: (IServerCookies|null);

    /** ResponseWrapper serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);
}

/** Represents a ResponseWrapper. */
export class ResponseWrapper implements IResponseWrapper {

    /**
     * Constructs a new ResponseWrapper.
     * @param [properties] Properties to set
     */
    constructor(properties?: IResponseWrapper);

    /** ResponseWrapper payload. */
    public payload?: (IPayload|null);

    /** ResponseWrapper commands. */
    public commands?: (IServerCommands|null);

    /** ResponseWrapper preFetch. */
    public preFetch: IPreFetch[];

    /** ResponseWrapper notification. */
    public notification: INotification[];

    /** ResponseWrapper serverMetadata. */
    public serverMetadata?: (IServerMetadata|null);

    /** ResponseWrapper targets. */
    public targets?: (ITargets|null);

    /** ResponseWrapper serverCookies. */
    public serverCookies?: (IServerCookies|null);

    /** ResponseWrapper serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /**
     * Creates a new ResponseWrapper instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ResponseWrapper instance
     */
    public static create(properties?: IResponseWrapper): ResponseWrapper;

    /**
     * Encodes the specified ResponseWrapper message. Does not implicitly {@link ResponseWrapper.verify|verify} messages.
     * @param message ResponseWrapper message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IResponseWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ResponseWrapper message, length delimited. Does not implicitly {@link ResponseWrapper.verify|verify} messages.
     * @param message ResponseWrapper message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IResponseWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ResponseWrapper message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ResponseWrapper
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ResponseWrapper;

    /**
     * Decodes a ResponseWrapper message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ResponseWrapper
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ResponseWrapper;

    /**
     * Verifies a ResponseWrapper message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ResponseWrapper message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ResponseWrapper
     */
    public static fromObject(object: { [k: string]: any }): ResponseWrapper;

    /**
     * Creates a plain object from a ResponseWrapper message. Also converts values to other types if specified.
     * @param message ResponseWrapper
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ResponseWrapper, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ResponseWrapper to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ResponseWrapperApi. */
export interface IResponseWrapperApi {

    /** ResponseWrapperApi payload */
    payload?: (IPayloadApi|null);
}

/** Represents a ResponseWrapperApi. */
export class ResponseWrapperApi implements IResponseWrapperApi {

    /**
     * Constructs a new ResponseWrapperApi.
     * @param [properties] Properties to set
     */
    constructor(properties?: IResponseWrapperApi);

    /** ResponseWrapperApi payload. */
    public payload?: (IPayloadApi|null);

    /**
     * Creates a new ResponseWrapperApi instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ResponseWrapperApi instance
     */
    public static create(properties?: IResponseWrapperApi): ResponseWrapperApi;

    /**
     * Encodes the specified ResponseWrapperApi message. Does not implicitly {@link ResponseWrapperApi.verify|verify} messages.
     * @param message ResponseWrapperApi message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IResponseWrapperApi, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ResponseWrapperApi message, length delimited. Does not implicitly {@link ResponseWrapperApi.verify|verify} messages.
     * @param message ResponseWrapperApi message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IResponseWrapperApi, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ResponseWrapperApi message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ResponseWrapperApi
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ResponseWrapperApi;

    /**
     * Decodes a ResponseWrapperApi message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ResponseWrapperApi
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ResponseWrapperApi;

    /**
     * Verifies a ResponseWrapperApi message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ResponseWrapperApi message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ResponseWrapperApi
     */
    public static fromObject(object: { [k: string]: any }): ResponseWrapperApi;

    /**
     * Creates a plain object from a ResponseWrapperApi message. Also converts values to other types if specified.
     * @param message ResponseWrapperApi
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ResponseWrapperApi, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ResponseWrapperApi to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PayloadApi. */
export interface IPayloadApi {

    /** PayloadApi userProfileResponse */
    userProfileResponse?: (IUserProfileResponse|null);
}

/** Represents a PayloadApi. */
export class PayloadApi implements IPayloadApi {

    /**
     * Constructs a new PayloadApi.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPayloadApi);

    /** PayloadApi userProfileResponse. */
    public userProfileResponse?: (IUserProfileResponse|null);

    /**
     * Creates a new PayloadApi instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PayloadApi instance
     */
    public static create(properties?: IPayloadApi): PayloadApi;

    /**
     * Encodes the specified PayloadApi message. Does not implicitly {@link PayloadApi.verify|verify} messages.
     * @param message PayloadApi message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPayloadApi, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PayloadApi message, length delimited. Does not implicitly {@link PayloadApi.verify|verify} messages.
     * @param message PayloadApi message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPayloadApi, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PayloadApi message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PayloadApi
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PayloadApi;

    /**
     * Decodes a PayloadApi message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PayloadApi
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PayloadApi;

    /**
     * Verifies a PayloadApi message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PayloadApi message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PayloadApi
     */
    public static fromObject(object: { [k: string]: any }): PayloadApi;

    /**
     * Creates a plain object from a PayloadApi message. Also converts values to other types if specified.
     * @param message PayloadApi
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PayloadApi, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PayloadApi to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UserProfileResponse. */
export interface IUserProfileResponse {

    /** UserProfileResponse userProfile */
    userProfile?: (IUserProfile|null);
}

/** Represents a UserProfileResponse. */
export class UserProfileResponse implements IUserProfileResponse {

    /**
     * Constructs a new UserProfileResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUserProfileResponse);

    /** UserProfileResponse userProfile. */
    public userProfile?: (IUserProfile|null);

    /**
     * Creates a new UserProfileResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UserProfileResponse instance
     */
    public static create(properties?: IUserProfileResponse): UserProfileResponse;

    /**
     * Encodes the specified UserProfileResponse message. Does not implicitly {@link UserProfileResponse.verify|verify} messages.
     * @param message UserProfileResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUserProfileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UserProfileResponse message, length delimited. Does not implicitly {@link UserProfileResponse.verify|verify} messages.
     * @param message UserProfileResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUserProfileResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UserProfileResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UserProfileResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UserProfileResponse;

    /**
     * Decodes a UserProfileResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UserProfileResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UserProfileResponse;

    /**
     * Verifies a UserProfileResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UserProfileResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UserProfileResponse
     */
    public static fromObject(object: { [k: string]: any }): UserProfileResponse;

    /**
     * Creates a plain object from a UserProfileResponse message. Also converts values to other types if specified.
     * @param message UserProfileResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UserProfileResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UserProfileResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ServerCommands. */
export interface IServerCommands {

    /** ServerCommands clearCache */
    clearCache?: (boolean|null);

    /** ServerCommands displayErrorMessage */
    displayErrorMessage?: (string|null);

    /** ServerCommands logErrorStacktrace */
    logErrorStacktrace?: (string|null);
}

/** Represents a ServerCommands. */
export class ServerCommands implements IServerCommands {

    /**
     * Constructs a new ServerCommands.
     * @param [properties] Properties to set
     */
    constructor(properties?: IServerCommands);

    /** ServerCommands clearCache. */
    public clearCache: boolean;

    /** ServerCommands displayErrorMessage. */
    public displayErrorMessage: string;

    /** ServerCommands logErrorStacktrace. */
    public logErrorStacktrace: string;

    /**
     * Creates a new ServerCommands instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ServerCommands instance
     */
    public static create(properties?: IServerCommands): ServerCommands;

    /**
     * Encodes the specified ServerCommands message. Does not implicitly {@link ServerCommands.verify|verify} messages.
     * @param message ServerCommands message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IServerCommands, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ServerCommands message, length delimited. Does not implicitly {@link ServerCommands.verify|verify} messages.
     * @param message ServerCommands message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IServerCommands, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ServerCommands message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ServerCommands
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ServerCommands;

    /**
     * Decodes a ServerCommands message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ServerCommands
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ServerCommands;

    /**
     * Verifies a ServerCommands message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ServerCommands message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ServerCommands
     */
    public static fromObject(object: { [k: string]: any }): ServerCommands;

    /**
     * Creates a plain object from a ServerCommands message. Also converts values to other types if specified.
     * @param message ServerCommands
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ServerCommands, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ServerCommands to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GetReviewsResponse. */
export interface IGetReviewsResponse {

    /** GetReviewsResponse review */
    review?: (IReview[]|null);

    /** GetReviewsResponse matchingCount */
    matchingCount?: (number|Long|null);
}

/** Represents a GetReviewsResponse. */
export class GetReviewsResponse implements IGetReviewsResponse {

    /**
     * Constructs a new GetReviewsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGetReviewsResponse);

    /** GetReviewsResponse review. */
    public review: IReview[];

    /** GetReviewsResponse matchingCount. */
    public matchingCount: (number|Long);

    /**
     * Creates a new GetReviewsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GetReviewsResponse instance
     */
    public static create(properties?: IGetReviewsResponse): GetReviewsResponse;

    /**
     * Encodes the specified GetReviewsResponse message. Does not implicitly {@link GetReviewsResponse.verify|verify} messages.
     * @param message GetReviewsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGetReviewsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GetReviewsResponse message, length delimited. Does not implicitly {@link GetReviewsResponse.verify|verify} messages.
     * @param message GetReviewsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGetReviewsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GetReviewsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GetReviewsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetReviewsResponse;

    /**
     * Decodes a GetReviewsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GetReviewsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetReviewsResponse;

    /**
     * Verifies a GetReviewsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GetReviewsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GetReviewsResponse
     */
    public static fromObject(object: { [k: string]: any }): GetReviewsResponse;

    /**
     * Creates a plain object from a GetReviewsResponse message. Also converts values to other types if specified.
     * @param message GetReviewsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GetReviewsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GetReviewsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a Review. */
export interface IReview {

    /** Review authorName */
    authorName?: (string|null);

    /** Review url */
    url?: (string|null);

    /** Review source */
    source?: (string|null);

    /** Review version */
    version?: (string|null);

    /** Review timestamp */
    timestamp?: (number|Long|null);

    /** Review starRating */
    starRating?: (number|null);

    /** Review title */
    title?: (string|null);

    /** Review comment */
    comment?: (string|null);

    /** Review commentId */
    commentId?: (string|null);

    /** Review deviceName */
    deviceName?: (string|null);

    /** Review replyText */
    replyText?: (string|null);

    /** Review replyTimeStamp */
    replyTimeStamp?: (number|Long|null);

    /** Review author */
    author?: (IReviewAuthor|null);

    /** Review userProfile */
    userProfile?: (IUserProfile|null);

    /** Review sentiment */
    sentiment?: (IImage|null);

    /** Review helpfulCount */
    helpfulCount?: (number|null);

    /** Review thumbsUpCount */
    thumbsUpCount?: (number|Long|null);
}

/** Represents a Review. */
export class Review implements IReview {

    /**
     * Constructs a new Review.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReview);

    /** Review authorName. */
    public authorName: string;

    /** Review url. */
    public url: string;

    /** Review source. */
    public source: string;

    /** Review version. */
    public version: string;

    /** Review timestamp. */
    public timestamp: (number|Long);

    /** Review starRating. */
    public starRating: number;

    /** Review title. */
    public title: string;

    /** Review comment. */
    public comment: string;

    /** Review commentId. */
    public commentId: string;

    /** Review deviceName. */
    public deviceName: string;

    /** Review replyText. */
    public replyText: string;

    /** Review replyTimeStamp. */
    public replyTimeStamp: (number|Long);

    /** Review author. */
    public author?: (IReviewAuthor|null);

    /** Review userProfile. */
    public userProfile?: (IUserProfile|null);

    /** Review sentiment. */
    public sentiment?: (IImage|null);

    /** Review helpfulCount. */
    public helpfulCount: number;

    /** Review thumbsUpCount. */
    public thumbsUpCount: (number|Long);

    /**
     * Creates a new Review instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Review instance
     */
    public static create(properties?: IReview): Review;

    /**
     * Encodes the specified Review message. Does not implicitly {@link Review.verify|verify} messages.
     * @param message Review message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReview, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Review message, length delimited. Does not implicitly {@link Review.verify|verify} messages.
     * @param message Review message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReview, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Review message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Review
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Review;

    /**
     * Decodes a Review message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Review
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Review;

    /**
     * Verifies a Review message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Review message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Review
     */
    public static fromObject(object: { [k: string]: any }): Review;

    /**
     * Creates a plain object from a Review message. Also converts values to other types if specified.
     * @param message Review
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Review, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Review to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CriticReviewsResponse. */
export interface ICriticReviewsResponse {

    /** CriticReviewsResponse title */
    title?: (string|null);

    /** CriticReviewsResponse image */
    image?: (IImage|null);

    /** CriticReviewsResponse totalNumReviews */
    totalNumReviews?: (number|null);

    /** CriticReviewsResponse percentFavorable */
    percentFavorable?: (number|null);

    /** CriticReviewsResponse sourceText */
    sourceText?: (string|null);

    /** CriticReviewsResponse source */
    source?: (ILink|null);

    /** CriticReviewsResponse review */
    review?: (IReview[]|null);
}

/** Represents a CriticReviewsResponse. */
export class CriticReviewsResponse implements ICriticReviewsResponse {

    /**
     * Constructs a new CriticReviewsResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICriticReviewsResponse);

    /** CriticReviewsResponse title. */
    public title: string;

    /** CriticReviewsResponse image. */
    public image?: (IImage|null);

    /** CriticReviewsResponse totalNumReviews. */
    public totalNumReviews: number;

    /** CriticReviewsResponse percentFavorable. */
    public percentFavorable: number;

    /** CriticReviewsResponse sourceText. */
    public sourceText: string;

    /** CriticReviewsResponse source. */
    public source?: (ILink|null);

    /** CriticReviewsResponse review. */
    public review: IReview[];

    /**
     * Creates a new CriticReviewsResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CriticReviewsResponse instance
     */
    public static create(properties?: ICriticReviewsResponse): CriticReviewsResponse;

    /**
     * Encodes the specified CriticReviewsResponse message. Does not implicitly {@link CriticReviewsResponse.verify|verify} messages.
     * @param message CriticReviewsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICriticReviewsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CriticReviewsResponse message, length delimited. Does not implicitly {@link CriticReviewsResponse.verify|verify} messages.
     * @param message CriticReviewsResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICriticReviewsResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CriticReviewsResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CriticReviewsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CriticReviewsResponse;

    /**
     * Decodes a CriticReviewsResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CriticReviewsResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CriticReviewsResponse;

    /**
     * Verifies a CriticReviewsResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CriticReviewsResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CriticReviewsResponse
     */
    public static fromObject(object: { [k: string]: any }): CriticReviewsResponse;

    /**
     * Creates a plain object from a CriticReviewsResponse message. Also converts values to other types if specified.
     * @param message CriticReviewsResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CriticReviewsResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CriticReviewsResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReviewAuthor. */
export interface IReviewAuthor {

    /** ReviewAuthor name */
    name?: (string|null);

    /** ReviewAuthor avatar */
    avatar?: (IImage|null);
}

/** Represents a ReviewAuthor. */
export class ReviewAuthor implements IReviewAuthor {

    /**
     * Constructs a new ReviewAuthor.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReviewAuthor);

    /** ReviewAuthor name. */
    public name: string;

    /** ReviewAuthor avatar. */
    public avatar?: (IImage|null);

    /**
     * Creates a new ReviewAuthor instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReviewAuthor instance
     */
    public static create(properties?: IReviewAuthor): ReviewAuthor;

    /**
     * Encodes the specified ReviewAuthor message. Does not implicitly {@link ReviewAuthor.verify|verify} messages.
     * @param message ReviewAuthor message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReviewAuthor, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReviewAuthor message, length delimited. Does not implicitly {@link ReviewAuthor.verify|verify} messages.
     * @param message ReviewAuthor message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReviewAuthor, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReviewAuthor message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReviewAuthor
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReviewAuthor;

    /**
     * Decodes a ReviewAuthor message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReviewAuthor
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReviewAuthor;

    /**
     * Verifies a ReviewAuthor message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReviewAuthor message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReviewAuthor
     */
    public static fromObject(object: { [k: string]: any }): ReviewAuthor;

    /**
     * Creates a plain object from a ReviewAuthor message. Also converts values to other types if specified.
     * @param message ReviewAuthor
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReviewAuthor, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReviewAuthor to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UserProfile. */
export interface IUserProfile {

    /** UserProfile profileId */
    profileId?: (string|null);

    /** UserProfile personId */
    personId?: (string|null);

    /** UserProfile profileType */
    profileType?: (number|null);

    /** UserProfile personType */
    personType?: (number|null);

    /** UserProfile name */
    name?: (string|null);

    /** UserProfile image */
    image?: (IImage[]|null);

    /** UserProfile profileUrl */
    profileUrl?: (string|null);

    /** UserProfile profileDescription */
    profileDescription?: (string|null);
}

/** Represents a UserProfile. */
export class UserProfile implements IUserProfile {

    /**
     * Constructs a new UserProfile.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUserProfile);

    /** UserProfile profileId. */
    public profileId: string;

    /** UserProfile personId. */
    public personId: string;

    /** UserProfile profileType. */
    public profileType: number;

    /** UserProfile personType. */
    public personType: number;

    /** UserProfile name. */
    public name: string;

    /** UserProfile image. */
    public image: IImage[];

    /** UserProfile profileUrl. */
    public profileUrl: string;

    /** UserProfile profileDescription. */
    public profileDescription: string;

    /**
     * Creates a new UserProfile instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UserProfile instance
     */
    public static create(properties?: IUserProfile): UserProfile;

    /**
     * Encodes the specified UserProfile message. Does not implicitly {@link UserProfile.verify|verify} messages.
     * @param message UserProfile message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUserProfile, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UserProfile message, length delimited. Does not implicitly {@link UserProfile.verify|verify} messages.
     * @param message UserProfile message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUserProfile, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UserProfile message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UserProfile
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UserProfile;

    /**
     * Decodes a UserProfile message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UserProfile
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UserProfile;

    /**
     * Verifies a UserProfile message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UserProfile message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UserProfile
     */
    public static fromObject(object: { [k: string]: any }): UserProfile;

    /**
     * Creates a plain object from a UserProfile message. Also converts values to other types if specified.
     * @param message UserProfile
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UserProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UserProfile to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ReviewResponse. */
export interface IReviewResponse {

    /** ReviewResponse userReviewsResponse */
    userReviewsResponse?: (IGetReviewsResponse|null);

    /** ReviewResponse nextPageUrl */
    nextPageUrl?: (string|null);

    /** ReviewResponse userReview */
    userReview?: (IReview|null);

    /** ReviewResponse suggestionsListUrl */
    suggestionsListUrl?: (string|null);

    /** ReviewResponse criticReviewsResponse */
    criticReviewsResponse?: (ICriticReviewsResponse|null);
}

/** Represents a ReviewResponse. */
export class ReviewResponse implements IReviewResponse {

    /**
     * Constructs a new ReviewResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReviewResponse);

    /** ReviewResponse userReviewsResponse. */
    public userReviewsResponse?: (IGetReviewsResponse|null);

    /** ReviewResponse nextPageUrl. */
    public nextPageUrl: string;

    /** ReviewResponse userReview. */
    public userReview?: (IReview|null);

    /** ReviewResponse suggestionsListUrl. */
    public suggestionsListUrl: string;

    /** ReviewResponse criticReviewsResponse. */
    public criticReviewsResponse?: (ICriticReviewsResponse|null);

    /**
     * Creates a new ReviewResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ReviewResponse instance
     */
    public static create(properties?: IReviewResponse): ReviewResponse;

    /**
     * Encodes the specified ReviewResponse message. Does not implicitly {@link ReviewResponse.verify|verify} messages.
     * @param message ReviewResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReviewResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ReviewResponse message, length delimited. Does not implicitly {@link ReviewResponse.verify|verify} messages.
     * @param message ReviewResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReviewResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ReviewResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ReviewResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ReviewResponse;

    /**
     * Decodes a ReviewResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ReviewResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ReviewResponse;

    /**
     * Verifies a ReviewResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ReviewResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ReviewResponse
     */
    public static fromObject(object: { [k: string]: any }): ReviewResponse;

    /**
     * Creates a plain object from a ReviewResponse message. Also converts values to other types if specified.
     * @param message ReviewResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ReviewResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ReviewResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RelatedSearch. */
export interface IRelatedSearch {

    /** RelatedSearch searchUrl */
    searchUrl?: (string|null);

    /** RelatedSearch header */
    header?: (string|null);

    /** RelatedSearch backendId */
    backendId?: (number|null);

    /** RelatedSearch docType */
    docType?: (number|null);

    /** RelatedSearch current */
    current?: (boolean|null);
}

/** Represents a RelatedSearch. */
export class RelatedSearch implements IRelatedSearch {

    /**
     * Constructs a new RelatedSearch.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRelatedSearch);

    /** RelatedSearch searchUrl. */
    public searchUrl: string;

    /** RelatedSearch header. */
    public header: string;

    /** RelatedSearch backendId. */
    public backendId: number;

    /** RelatedSearch docType. */
    public docType: number;

    /** RelatedSearch current. */
    public current: boolean;

    /**
     * Creates a new RelatedSearch instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RelatedSearch instance
     */
    public static create(properties?: IRelatedSearch): RelatedSearch;

    /**
     * Encodes the specified RelatedSearch message. Does not implicitly {@link RelatedSearch.verify|verify} messages.
     * @param message RelatedSearch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRelatedSearch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RelatedSearch message, length delimited. Does not implicitly {@link RelatedSearch.verify|verify} messages.
     * @param message RelatedSearch message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRelatedSearch, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RelatedSearch message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RelatedSearch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RelatedSearch;

    /**
     * Decodes a RelatedSearch message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RelatedSearch
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RelatedSearch;

    /**
     * Verifies a RelatedSearch message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RelatedSearch message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RelatedSearch
     */
    public static fromObject(object: { [k: string]: any }): RelatedSearch;

    /**
     * Creates a plain object from a RelatedSearch message. Also converts values to other types if specified.
     * @param message RelatedSearch
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RelatedSearch, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RelatedSearch to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SearchResponse. */
export interface ISearchResponse {

    /** SearchResponse originalQuery */
    originalQuery?: (string|null);

    /** SearchResponse suggestedQuery */
    suggestedQuery?: (string|null);

    /** SearchResponse aggregateQuery */
    aggregateQuery?: (boolean|null);

    /** SearchResponse bucket */
    bucket?: (IBucket[]|null);

    /** SearchResponse item */
    item?: (IItem[]|null);

    /** SearchResponse relatedSearch */
    relatedSearch?: (IRelatedSearch[]|null);

    /** SearchResponse serverLogsCookie */
    serverLogsCookie?: (Uint8Array|null);

    /** SearchResponse fullPageReplaced */
    fullPageReplaced?: (boolean|null);

    /** SearchResponse containsSnow */
    containsSnow?: (boolean|null);

    /** SearchResponse nextPageUrl */
    nextPageUrl?: (string|null);
}

/** Represents a SearchResponse. */
export class SearchResponse implements ISearchResponse {

    /**
     * Constructs a new SearchResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISearchResponse);

    /** SearchResponse originalQuery. */
    public originalQuery: string;

    /** SearchResponse suggestedQuery. */
    public suggestedQuery: string;

    /** SearchResponse aggregateQuery. */
    public aggregateQuery: boolean;

    /** SearchResponse bucket. */
    public bucket: IBucket[];

    /** SearchResponse item. */
    public item: IItem[];

    /** SearchResponse relatedSearch. */
    public relatedSearch: IRelatedSearch[];

    /** SearchResponse serverLogsCookie. */
    public serverLogsCookie: Uint8Array;

    /** SearchResponse fullPageReplaced. */
    public fullPageReplaced: boolean;

    /** SearchResponse containsSnow. */
    public containsSnow: boolean;

    /** SearchResponse nextPageUrl. */
    public nextPageUrl: string;

    /**
     * Creates a new SearchResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SearchResponse instance
     */
    public static create(properties?: ISearchResponse): SearchResponse;

    /**
     * Encodes the specified SearchResponse message. Does not implicitly {@link SearchResponse.verify|verify} messages.
     * @param message SearchResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISearchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SearchResponse message, length delimited. Does not implicitly {@link SearchResponse.verify|verify} messages.
     * @param message SearchResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISearchResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SearchResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SearchResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SearchResponse;

    /**
     * Decodes a SearchResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SearchResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SearchResponse;

    /**
     * Verifies a SearchResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SearchResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SearchResponse
     */
    public static fromObject(object: { [k: string]: any }): SearchResponse;

    /**
     * Creates a plain object from a SearchResponse message. Also converts values to other types if specified.
     * @param message SearchResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SearchResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SearchResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SearchSuggestResponse. */
export interface ISearchSuggestResponse {

    /** SearchSuggestResponse entry */
    entry?: (ISearchSuggestEntry[]|null);
}

/** Represents a SearchSuggestResponse. */
export class SearchSuggestResponse implements ISearchSuggestResponse {

    /**
     * Constructs a new SearchSuggestResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISearchSuggestResponse);

    /** SearchSuggestResponse entry. */
    public entry: ISearchSuggestEntry[];

    /**
     * Creates a new SearchSuggestResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SearchSuggestResponse instance
     */
    public static create(properties?: ISearchSuggestResponse): SearchSuggestResponse;

    /**
     * Encodes the specified SearchSuggestResponse message. Does not implicitly {@link SearchSuggestResponse.verify|verify} messages.
     * @param message SearchSuggestResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISearchSuggestResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SearchSuggestResponse message, length delimited. Does not implicitly {@link SearchSuggestResponse.verify|verify} messages.
     * @param message SearchSuggestResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISearchSuggestResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SearchSuggestResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SearchSuggestResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SearchSuggestResponse;

    /**
     * Decodes a SearchSuggestResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SearchSuggestResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SearchSuggestResponse;

    /**
     * Verifies a SearchSuggestResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SearchSuggestResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SearchSuggestResponse
     */
    public static fromObject(object: { [k: string]: any }): SearchSuggestResponse;

    /**
     * Creates a plain object from a SearchSuggestResponse message. Also converts values to other types if specified.
     * @param message SearchSuggestResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SearchSuggestResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SearchSuggestResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a SearchSuggestEntry. */
export interface ISearchSuggestEntry {

    /** SearchSuggestEntry type */
    type?: (number|null);

    /** SearchSuggestEntry suggestedQuery */
    suggestedQuery?: (string|null);

    /** SearchSuggestEntry imageContainer */
    imageContainer?: (SearchSuggestEntry.IImageContainer|null);

    /** SearchSuggestEntry title */
    title?: (string|null);

    /** SearchSuggestEntry packageNameContainer */
    packageNameContainer?: (SearchSuggestEntry.IPackageNameContainer|null);
}

/** Represents a SearchSuggestEntry. */
export class SearchSuggestEntry implements ISearchSuggestEntry {

    /**
     * Constructs a new SearchSuggestEntry.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISearchSuggestEntry);

    /** SearchSuggestEntry type. */
    public type: number;

    /** SearchSuggestEntry suggestedQuery. */
    public suggestedQuery: string;

    /** SearchSuggestEntry imageContainer. */
    public imageContainer?: (SearchSuggestEntry.IImageContainer|null);

    /** SearchSuggestEntry title. */
    public title: string;

    /** SearchSuggestEntry packageNameContainer. */
    public packageNameContainer?: (SearchSuggestEntry.IPackageNameContainer|null);

    /**
     * Creates a new SearchSuggestEntry instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SearchSuggestEntry instance
     */
    public static create(properties?: ISearchSuggestEntry): SearchSuggestEntry;

    /**
     * Encodes the specified SearchSuggestEntry message. Does not implicitly {@link SearchSuggestEntry.verify|verify} messages.
     * @param message SearchSuggestEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISearchSuggestEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SearchSuggestEntry message, length delimited. Does not implicitly {@link SearchSuggestEntry.verify|verify} messages.
     * @param message SearchSuggestEntry message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISearchSuggestEntry, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SearchSuggestEntry message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SearchSuggestEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SearchSuggestEntry;

    /**
     * Decodes a SearchSuggestEntry message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SearchSuggestEntry
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SearchSuggestEntry;

    /**
     * Verifies a SearchSuggestEntry message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SearchSuggestEntry message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SearchSuggestEntry
     */
    public static fromObject(object: { [k: string]: any }): SearchSuggestEntry;

    /**
     * Creates a plain object from a SearchSuggestEntry message. Also converts values to other types if specified.
     * @param message SearchSuggestEntry
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SearchSuggestEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SearchSuggestEntry to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace SearchSuggestEntry {

    /** Properties of an ImageContainer. */
    interface IImageContainer {

        /** ImageContainer imageUrl */
        imageUrl?: (string|null);
    }

    /** Represents an ImageContainer. */
    class ImageContainer implements IImageContainer {

        /**
         * Constructs a new ImageContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: SearchSuggestEntry.IImageContainer);

        /** ImageContainer imageUrl. */
        public imageUrl: string;

        /**
         * Creates a new ImageContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ImageContainer instance
         */
        public static create(properties?: SearchSuggestEntry.IImageContainer): SearchSuggestEntry.ImageContainer;

        /**
         * Encodes the specified ImageContainer message. Does not implicitly {@link SearchSuggestEntry.ImageContainer.verify|verify} messages.
         * @param message ImageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SearchSuggestEntry.IImageContainer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ImageContainer message, length delimited. Does not implicitly {@link SearchSuggestEntry.ImageContainer.verify|verify} messages.
         * @param message ImageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SearchSuggestEntry.IImageContainer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ImageContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ImageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SearchSuggestEntry.ImageContainer;

        /**
         * Decodes an ImageContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ImageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SearchSuggestEntry.ImageContainer;

        /**
         * Verifies an ImageContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ImageContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ImageContainer
         */
        public static fromObject(object: { [k: string]: any }): SearchSuggestEntry.ImageContainer;

        /**
         * Creates a plain object from an ImageContainer message. Also converts values to other types if specified.
         * @param message ImageContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SearchSuggestEntry.ImageContainer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ImageContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PackageNameContainer. */
    interface IPackageNameContainer {

        /** PackageNameContainer packageName */
        packageName?: (string|null);
    }

    /** Represents a PackageNameContainer. */
    class PackageNameContainer implements IPackageNameContainer {

        /**
         * Constructs a new PackageNameContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: SearchSuggestEntry.IPackageNameContainer);

        /** PackageNameContainer packageName. */
        public packageName: string;

        /**
         * Creates a new PackageNameContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PackageNameContainer instance
         */
        public static create(properties?: SearchSuggestEntry.IPackageNameContainer): SearchSuggestEntry.PackageNameContainer;

        /**
         * Encodes the specified PackageNameContainer message. Does not implicitly {@link SearchSuggestEntry.PackageNameContainer.verify|verify} messages.
         * @param message PackageNameContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SearchSuggestEntry.IPackageNameContainer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PackageNameContainer message, length delimited. Does not implicitly {@link SearchSuggestEntry.PackageNameContainer.verify|verify} messages.
         * @param message PackageNameContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SearchSuggestEntry.IPackageNameContainer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PackageNameContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PackageNameContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SearchSuggestEntry.PackageNameContainer;

        /**
         * Decodes a PackageNameContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PackageNameContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SearchSuggestEntry.PackageNameContainer;

        /**
         * Verifies a PackageNameContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PackageNameContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PackageNameContainer
         */
        public static fromObject(object: { [k: string]: any }): SearchSuggestEntry.PackageNameContainer;

        /**
         * Creates a plain object from a PackageNameContainer message. Also converts values to other types if specified.
         * @param message PackageNameContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SearchSuggestEntry.PackageNameContainer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PackageNameContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a TestingProgramResponse. */
export interface ITestingProgramResponse {

    /** TestingProgramResponse result */
    result?: (ITestingProgramResult|null);
}

/** Represents a TestingProgramResponse. */
export class TestingProgramResponse implements ITestingProgramResponse {

    /**
     * Constructs a new TestingProgramResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITestingProgramResponse);

    /** TestingProgramResponse result. */
    public result?: (ITestingProgramResult|null);

    /**
     * Creates a new TestingProgramResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TestingProgramResponse instance
     */
    public static create(properties?: ITestingProgramResponse): TestingProgramResponse;

    /**
     * Encodes the specified TestingProgramResponse message. Does not implicitly {@link TestingProgramResponse.verify|verify} messages.
     * @param message TestingProgramResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITestingProgramResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TestingProgramResponse message, length delimited. Does not implicitly {@link TestingProgramResponse.verify|verify} messages.
     * @param message TestingProgramResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITestingProgramResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TestingProgramResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TestingProgramResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestingProgramResponse;

    /**
     * Decodes a TestingProgramResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TestingProgramResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestingProgramResponse;

    /**
     * Verifies a TestingProgramResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TestingProgramResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TestingProgramResponse
     */
    public static fromObject(object: { [k: string]: any }): TestingProgramResponse;

    /**
     * Creates a plain object from a TestingProgramResponse message. Also converts values to other types if specified.
     * @param message TestingProgramResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TestingProgramResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TestingProgramResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TestingProgramResult. */
export interface ITestingProgramResult {

    /** TestingProgramResult details */
    details?: (ITestingProgramDetails|null);
}

/** Represents a TestingProgramResult. */
export class TestingProgramResult implements ITestingProgramResult {

    /**
     * Constructs a new TestingProgramResult.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITestingProgramResult);

    /** TestingProgramResult details. */
    public details?: (ITestingProgramDetails|null);

    /**
     * Creates a new TestingProgramResult instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TestingProgramResult instance
     */
    public static create(properties?: ITestingProgramResult): TestingProgramResult;

    /**
     * Encodes the specified TestingProgramResult message. Does not implicitly {@link TestingProgramResult.verify|verify} messages.
     * @param message TestingProgramResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITestingProgramResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TestingProgramResult message, length delimited. Does not implicitly {@link TestingProgramResult.verify|verify} messages.
     * @param message TestingProgramResult message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITestingProgramResult, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TestingProgramResult message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TestingProgramResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestingProgramResult;

    /**
     * Decodes a TestingProgramResult message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TestingProgramResult
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestingProgramResult;

    /**
     * Verifies a TestingProgramResult message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TestingProgramResult message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TestingProgramResult
     */
    public static fromObject(object: { [k: string]: any }): TestingProgramResult;

    /**
     * Creates a plain object from a TestingProgramResult message. Also converts values to other types if specified.
     * @param message TestingProgramResult
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TestingProgramResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TestingProgramResult to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TestingProgramDetails. */
export interface ITestingProgramDetails {

    /** TestingProgramDetails subscribed */
    subscribed?: (boolean|null);

    /** TestingProgramDetails id */
    id?: (number|Long|null);

    /** TestingProgramDetails unsubscribed */
    unsubscribed?: (boolean|null);
}

/** Represents a TestingProgramDetails. */
export class TestingProgramDetails implements ITestingProgramDetails {

    /**
     * Constructs a new TestingProgramDetails.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITestingProgramDetails);

    /** TestingProgramDetails subscribed. */
    public subscribed: boolean;

    /** TestingProgramDetails id. */
    public id: (number|Long);

    /** TestingProgramDetails unsubscribed. */
    public unsubscribed: boolean;

    /**
     * Creates a new TestingProgramDetails instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TestingProgramDetails instance
     */
    public static create(properties?: ITestingProgramDetails): TestingProgramDetails;

    /**
     * Encodes the specified TestingProgramDetails message. Does not implicitly {@link TestingProgramDetails.verify|verify} messages.
     * @param message TestingProgramDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITestingProgramDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TestingProgramDetails message, length delimited. Does not implicitly {@link TestingProgramDetails.verify|verify} messages.
     * @param message TestingProgramDetails message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITestingProgramDetails, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TestingProgramDetails message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TestingProgramDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestingProgramDetails;

    /**
     * Decodes a TestingProgramDetails message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TestingProgramDetails
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestingProgramDetails;

    /**
     * Verifies a TestingProgramDetails message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TestingProgramDetails message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TestingProgramDetails
     */
    public static fromObject(object: { [k: string]: any }): TestingProgramDetails;

    /**
     * Creates a plain object from a TestingProgramDetails message. Also converts values to other types if specified.
     * @param message TestingProgramDetails
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TestingProgramDetails, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TestingProgramDetails to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a LogRequest. */
export interface ILogRequest {

    /** LogRequest timestamp */
    timestamp?: (number|Long|null);

    /** LogRequest downloadConfirmationQuery */
    downloadConfirmationQuery?: (string|null);
}

/** Represents a LogRequest. */
export class LogRequest implements ILogRequest {

    /**
     * Constructs a new LogRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: ILogRequest);

    /** LogRequest timestamp. */
    public timestamp: (number|Long);

    /** LogRequest downloadConfirmationQuery. */
    public downloadConfirmationQuery: string;

    /**
     * Creates a new LogRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns LogRequest instance
     */
    public static create(properties?: ILogRequest): LogRequest;

    /**
     * Encodes the specified LogRequest message. Does not implicitly {@link LogRequest.verify|verify} messages.
     * @param message LogRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ILogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified LogRequest message, length delimited. Does not implicitly {@link LogRequest.verify|verify} messages.
     * @param message LogRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ILogRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a LogRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns LogRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): LogRequest;

    /**
     * Decodes a LogRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns LogRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): LogRequest;

    /**
     * Verifies a LogRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a LogRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns LogRequest
     */
    public static fromObject(object: { [k: string]: any }): LogRequest;

    /**
     * Creates a plain object from a LogRequest message. Also converts values to other types if specified.
     * @param message LogRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: LogRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this LogRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a TestingProgramRequest. */
export interface ITestingProgramRequest {

    /** TestingProgramRequest packageName */
    packageName?: (string|null);

    /** TestingProgramRequest subscribe */
    subscribe?: (boolean|null);
}

/** Represents a TestingProgramRequest. */
export class TestingProgramRequest implements ITestingProgramRequest {

    /**
     * Constructs a new TestingProgramRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: ITestingProgramRequest);

    /** TestingProgramRequest packageName. */
    public packageName: string;

    /** TestingProgramRequest subscribe. */
    public subscribe: boolean;

    /**
     * Creates a new TestingProgramRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns TestingProgramRequest instance
     */
    public static create(properties?: ITestingProgramRequest): TestingProgramRequest;

    /**
     * Encodes the specified TestingProgramRequest message. Does not implicitly {@link TestingProgramRequest.verify|verify} messages.
     * @param message TestingProgramRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ITestingProgramRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified TestingProgramRequest message, length delimited. Does not implicitly {@link TestingProgramRequest.verify|verify} messages.
     * @param message TestingProgramRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ITestingProgramRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a TestingProgramRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns TestingProgramRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): TestingProgramRequest;

    /**
     * Decodes a TestingProgramRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns TestingProgramRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): TestingProgramRequest;

    /**
     * Verifies a TestingProgramRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a TestingProgramRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns TestingProgramRequest
     */
    public static fromObject(object: { [k: string]: any }): TestingProgramRequest;

    /**
     * Creates a plain object from a TestingProgramRequest message. Also converts values to other types if specified.
     * @param message TestingProgramRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: TestingProgramRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this TestingProgramRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UploadDeviceConfigRequest. */
export interface IUploadDeviceConfigRequest {

    /** UploadDeviceConfigRequest deviceConfiguration */
    deviceConfiguration?: (IDeviceConfigurationProto|null);

    /** UploadDeviceConfigRequest manufacturer */
    manufacturer?: (string|null);

    /** UploadDeviceConfigRequest gcmRegistrationId */
    gcmRegistrationId?: (string|null);
}

/** Represents an UploadDeviceConfigRequest. */
export class UploadDeviceConfigRequest implements IUploadDeviceConfigRequest {

    /**
     * Constructs a new UploadDeviceConfigRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUploadDeviceConfigRequest);

    /** UploadDeviceConfigRequest deviceConfiguration. */
    public deviceConfiguration?: (IDeviceConfigurationProto|null);

    /** UploadDeviceConfigRequest manufacturer. */
    public manufacturer: string;

    /** UploadDeviceConfigRequest gcmRegistrationId. */
    public gcmRegistrationId: string;

    /**
     * Creates a new UploadDeviceConfigRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UploadDeviceConfigRequest instance
     */
    public static create(properties?: IUploadDeviceConfigRequest): UploadDeviceConfigRequest;

    /**
     * Encodes the specified UploadDeviceConfigRequest message. Does not implicitly {@link UploadDeviceConfigRequest.verify|verify} messages.
     * @param message UploadDeviceConfigRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUploadDeviceConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UploadDeviceConfigRequest message, length delimited. Does not implicitly {@link UploadDeviceConfigRequest.verify|verify} messages.
     * @param message UploadDeviceConfigRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUploadDeviceConfigRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UploadDeviceConfigRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UploadDeviceConfigRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UploadDeviceConfigRequest;

    /**
     * Decodes an UploadDeviceConfigRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UploadDeviceConfigRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UploadDeviceConfigRequest;

    /**
     * Verifies an UploadDeviceConfigRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UploadDeviceConfigRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UploadDeviceConfigRequest
     */
    public static fromObject(object: { [k: string]: any }): UploadDeviceConfigRequest;

    /**
     * Creates a plain object from an UploadDeviceConfigRequest message. Also converts values to other types if specified.
     * @param message UploadDeviceConfigRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UploadDeviceConfigRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UploadDeviceConfigRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an UploadDeviceConfigResponse. */
export interface IUploadDeviceConfigResponse {

    /** UploadDeviceConfigResponse uploadDeviceConfigToken */
    uploadDeviceConfigToken?: (string|null);
}

/** Represents an UploadDeviceConfigResponse. */
export class UploadDeviceConfigResponse implements IUploadDeviceConfigResponse {

    /**
     * Constructs a new UploadDeviceConfigResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUploadDeviceConfigResponse);

    /** UploadDeviceConfigResponse uploadDeviceConfigToken. */
    public uploadDeviceConfigToken: string;

    /**
     * Creates a new UploadDeviceConfigResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UploadDeviceConfigResponse instance
     */
    public static create(properties?: IUploadDeviceConfigResponse): UploadDeviceConfigResponse;

    /**
     * Encodes the specified UploadDeviceConfigResponse message. Does not implicitly {@link UploadDeviceConfigResponse.verify|verify} messages.
     * @param message UploadDeviceConfigResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUploadDeviceConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UploadDeviceConfigResponse message, length delimited. Does not implicitly {@link UploadDeviceConfigResponse.verify|verify} messages.
     * @param message UploadDeviceConfigResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUploadDeviceConfigResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an UploadDeviceConfigResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UploadDeviceConfigResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UploadDeviceConfigResponse;

    /**
     * Decodes an UploadDeviceConfigResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UploadDeviceConfigResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UploadDeviceConfigResponse;

    /**
     * Verifies an UploadDeviceConfigResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an UploadDeviceConfigResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UploadDeviceConfigResponse
     */
    public static fromObject(object: { [k: string]: any }): UploadDeviceConfigResponse;

    /**
     * Creates a plain object from an UploadDeviceConfigResponse message. Also converts values to other types if specified.
     * @param message UploadDeviceConfigResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UploadDeviceConfigResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UploadDeviceConfigResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidCheckinRequest. */
export interface IAndroidCheckinRequest {

    /** AndroidCheckinRequest imei */
    imei?: (string|null);

    /** AndroidCheckinRequest id */
    id?: (number|Long|null);

    /** AndroidCheckinRequest digest */
    digest?: (string|null);

    /** AndroidCheckinRequest checkin */
    checkin?: (IAndroidCheckinProto|null);

    /** AndroidCheckinRequest desiredBuild */
    desiredBuild?: (string|null);

    /** AndroidCheckinRequest locale */
    locale?: (string|null);

    /** AndroidCheckinRequest loggingId */
    loggingId?: (number|Long|null);

    /** AndroidCheckinRequest marketCheckin */
    marketCheckin?: (string|null);

    /** AndroidCheckinRequest macAddr */
    macAddr?: (string[]|null);

    /** AndroidCheckinRequest meid */
    meid?: (string|null);

    /** AndroidCheckinRequest accountCookie */
    accountCookie?: (string[]|null);

    /** AndroidCheckinRequest timeZone */
    timeZone?: (string|null);

    /** AndroidCheckinRequest securityToken */
    securityToken?: (number|Long|null);

    /** AndroidCheckinRequest version */
    version?: (number|null);

    /** AndroidCheckinRequest otaCert */
    otaCert?: (string[]|null);

    /** AndroidCheckinRequest serialNumber */
    serialNumber?: (string|null);

    /** AndroidCheckinRequest esn */
    esn?: (string|null);

    /** AndroidCheckinRequest deviceConfiguration */
    deviceConfiguration?: (IDeviceConfigurationProto|null);

    /** AndroidCheckinRequest macAddrType */
    macAddrType?: (string[]|null);

    /** AndroidCheckinRequest fragment */
    fragment?: (number|null);

    /** AndroidCheckinRequest userName */
    userName?: (string|null);

    /** AndroidCheckinRequest userSerialNumber */
    userSerialNumber?: (number|null);
}

/** Represents an AndroidCheckinRequest. */
export class AndroidCheckinRequest implements IAndroidCheckinRequest {

    /**
     * Constructs a new AndroidCheckinRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidCheckinRequest);

    /** AndroidCheckinRequest imei. */
    public imei: string;

    /** AndroidCheckinRequest id. */
    public id: (number|Long);

    /** AndroidCheckinRequest digest. */
    public digest: string;

    /** AndroidCheckinRequest checkin. */
    public checkin?: (IAndroidCheckinProto|null);

    /** AndroidCheckinRequest desiredBuild. */
    public desiredBuild: string;

    /** AndroidCheckinRequest locale. */
    public locale: string;

    /** AndroidCheckinRequest loggingId. */
    public loggingId: (number|Long);

    /** AndroidCheckinRequest marketCheckin. */
    public marketCheckin: string;

    /** AndroidCheckinRequest macAddr. */
    public macAddr: string[];

    /** AndroidCheckinRequest meid. */
    public meid: string;

    /** AndroidCheckinRequest accountCookie. */
    public accountCookie: string[];

    /** AndroidCheckinRequest timeZone. */
    public timeZone: string;

    /** AndroidCheckinRequest securityToken. */
    public securityToken: (number|Long);

    /** AndroidCheckinRequest version. */
    public version: number;

    /** AndroidCheckinRequest otaCert. */
    public otaCert: string[];

    /** AndroidCheckinRequest serialNumber. */
    public serialNumber: string;

    /** AndroidCheckinRequest esn. */
    public esn: string;

    /** AndroidCheckinRequest deviceConfiguration. */
    public deviceConfiguration?: (IDeviceConfigurationProto|null);

    /** AndroidCheckinRequest macAddrType. */
    public macAddrType: string[];

    /** AndroidCheckinRequest fragment. */
    public fragment: number;

    /** AndroidCheckinRequest userName. */
    public userName: string;

    /** AndroidCheckinRequest userSerialNumber. */
    public userSerialNumber: number;

    /**
     * Creates a new AndroidCheckinRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidCheckinRequest instance
     */
    public static create(properties?: IAndroidCheckinRequest): AndroidCheckinRequest;

    /**
     * Encodes the specified AndroidCheckinRequest message. Does not implicitly {@link AndroidCheckinRequest.verify|verify} messages.
     * @param message AndroidCheckinRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidCheckinRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidCheckinRequest message, length delimited. Does not implicitly {@link AndroidCheckinRequest.verify|verify} messages.
     * @param message AndroidCheckinRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidCheckinRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidCheckinRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidCheckinRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidCheckinRequest;

    /**
     * Decodes an AndroidCheckinRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidCheckinRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidCheckinRequest;

    /**
     * Verifies an AndroidCheckinRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidCheckinRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidCheckinRequest
     */
    public static fromObject(object: { [k: string]: any }): AndroidCheckinRequest;

    /**
     * Creates a plain object from an AndroidCheckinRequest message. Also converts values to other types if specified.
     * @param message AndroidCheckinRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidCheckinRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidCheckinRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidCheckinResponse. */
export interface IAndroidCheckinResponse {

    /** AndroidCheckinResponse statsOk */
    statsOk?: (boolean|null);

    /** AndroidCheckinResponse intent */
    intent?: (IAndroidIntentProto[]|null);

    /** AndroidCheckinResponse timeMsec */
    timeMsec?: (number|Long|null);

    /** AndroidCheckinResponse digest */
    digest?: (string|null);

    /** AndroidCheckinResponse setting */
    setting?: (IGservicesSetting[]|null);

    /** AndroidCheckinResponse marketOk */
    marketOk?: (boolean|null);

    /** AndroidCheckinResponse androidId */
    androidId?: (number|Long|null);

    /** AndroidCheckinResponse securityToken */
    securityToken?: (number|Long|null);

    /** AndroidCheckinResponse settingsDiff */
    settingsDiff?: (boolean|null);

    /** AndroidCheckinResponse deleteSetting */
    deleteSetting?: (string[]|null);

    /** AndroidCheckinResponse deviceCheckinConsistencyToken */
    deviceCheckinConsistencyToken?: (string|null);
}

/** Represents an AndroidCheckinResponse. */
export class AndroidCheckinResponse implements IAndroidCheckinResponse {

    /**
     * Constructs a new AndroidCheckinResponse.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidCheckinResponse);

    /** AndroidCheckinResponse statsOk. */
    public statsOk: boolean;

    /** AndroidCheckinResponse intent. */
    public intent: IAndroidIntentProto[];

    /** AndroidCheckinResponse timeMsec. */
    public timeMsec: (number|Long);

    /** AndroidCheckinResponse digest. */
    public digest: string;

    /** AndroidCheckinResponse setting. */
    public setting: IGservicesSetting[];

    /** AndroidCheckinResponse marketOk. */
    public marketOk: boolean;

    /** AndroidCheckinResponse androidId. */
    public androidId: (number|Long);

    /** AndroidCheckinResponse securityToken. */
    public securityToken: (number|Long);

    /** AndroidCheckinResponse settingsDiff. */
    public settingsDiff: boolean;

    /** AndroidCheckinResponse deleteSetting. */
    public deleteSetting: string[];

    /** AndroidCheckinResponse deviceCheckinConsistencyToken. */
    public deviceCheckinConsistencyToken: string;

    /**
     * Creates a new AndroidCheckinResponse instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidCheckinResponse instance
     */
    public static create(properties?: IAndroidCheckinResponse): AndroidCheckinResponse;

    /**
     * Encodes the specified AndroidCheckinResponse message. Does not implicitly {@link AndroidCheckinResponse.verify|verify} messages.
     * @param message AndroidCheckinResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidCheckinResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidCheckinResponse message, length delimited. Does not implicitly {@link AndroidCheckinResponse.verify|verify} messages.
     * @param message AndroidCheckinResponse message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidCheckinResponse, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidCheckinResponse message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidCheckinResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidCheckinResponse;

    /**
     * Decodes an AndroidCheckinResponse message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidCheckinResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidCheckinResponse;

    /**
     * Verifies an AndroidCheckinResponse message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidCheckinResponse message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidCheckinResponse
     */
    public static fromObject(object: { [k: string]: any }): AndroidCheckinResponse;

    /**
     * Creates a plain object from an AndroidCheckinResponse message. Also converts values to other types if specified.
     * @param message AndroidCheckinResponse
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidCheckinResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidCheckinResponse to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a GservicesSetting. */
export interface IGservicesSetting {

    /** GservicesSetting name */
    name?: (Uint8Array|null);

    /** GservicesSetting value */
    value?: (Uint8Array|null);
}

/** Represents a GservicesSetting. */
export class GservicesSetting implements IGservicesSetting {

    /**
     * Constructs a new GservicesSetting.
     * @param [properties] Properties to set
     */
    constructor(properties?: IGservicesSetting);

    /** GservicesSetting name. */
    public name: Uint8Array;

    /** GservicesSetting value. */
    public value: Uint8Array;

    /**
     * Creates a new GservicesSetting instance using the specified properties.
     * @param [properties] Properties to set
     * @returns GservicesSetting instance
     */
    public static create(properties?: IGservicesSetting): GservicesSetting;

    /**
     * Encodes the specified GservicesSetting message. Does not implicitly {@link GservicesSetting.verify|verify} messages.
     * @param message GservicesSetting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IGservicesSetting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified GservicesSetting message, length delimited. Does not implicitly {@link GservicesSetting.verify|verify} messages.
     * @param message GservicesSetting message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IGservicesSetting, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a GservicesSetting message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns GservicesSetting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GservicesSetting;

    /**
     * Decodes a GservicesSetting message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns GservicesSetting
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GservicesSetting;

    /**
     * Verifies a GservicesSetting message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a GservicesSetting message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns GservicesSetting
     */
    public static fromObject(object: { [k: string]: any }): GservicesSetting;

    /**
     * Creates a plain object from a GservicesSetting message. Also converts values to other types if specified.
     * @param message GservicesSetting
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: GservicesSetting, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this GservicesSetting to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidBuildProto. */
export interface IAndroidBuildProto {

    /** AndroidBuildProto id */
    id?: (string|null);

    /** AndroidBuildProto product */
    product?: (string|null);

    /** AndroidBuildProto carrier */
    carrier?: (string|null);

    /** AndroidBuildProto radio */
    radio?: (string|null);

    /** AndroidBuildProto bootloader */
    bootloader?: (string|null);

    /** AndroidBuildProto client */
    client?: (string|null);

    /** AndroidBuildProto timestamp */
    timestamp?: (number|Long|null);

    /** AndroidBuildProto googleServices */
    googleServices?: (number|null);

    /** AndroidBuildProto device */
    device?: (string|null);

    /** AndroidBuildProto sdkVersion */
    sdkVersion?: (number|null);

    /** AndroidBuildProto model */
    model?: (string|null);

    /** AndroidBuildProto manufacturer */
    manufacturer?: (string|null);

    /** AndroidBuildProto buildProduct */
    buildProduct?: (string|null);

    /** AndroidBuildProto otaInstalled */
    otaInstalled?: (boolean|null);
}

/** Represents an AndroidBuildProto. */
export class AndroidBuildProto implements IAndroidBuildProto {

    /**
     * Constructs a new AndroidBuildProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidBuildProto);

    /** AndroidBuildProto id. */
    public id: string;

    /** AndroidBuildProto product. */
    public product: string;

    /** AndroidBuildProto carrier. */
    public carrier: string;

    /** AndroidBuildProto radio. */
    public radio: string;

    /** AndroidBuildProto bootloader. */
    public bootloader: string;

    /** AndroidBuildProto client. */
    public client: string;

    /** AndroidBuildProto timestamp. */
    public timestamp: (number|Long);

    /** AndroidBuildProto googleServices. */
    public googleServices: number;

    /** AndroidBuildProto device. */
    public device: string;

    /** AndroidBuildProto sdkVersion. */
    public sdkVersion: number;

    /** AndroidBuildProto model. */
    public model: string;

    /** AndroidBuildProto manufacturer. */
    public manufacturer: string;

    /** AndroidBuildProto buildProduct. */
    public buildProduct: string;

    /** AndroidBuildProto otaInstalled. */
    public otaInstalled: boolean;

    /**
     * Creates a new AndroidBuildProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidBuildProto instance
     */
    public static create(properties?: IAndroidBuildProto): AndroidBuildProto;

    /**
     * Encodes the specified AndroidBuildProto message. Does not implicitly {@link AndroidBuildProto.verify|verify} messages.
     * @param message AndroidBuildProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidBuildProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidBuildProto message, length delimited. Does not implicitly {@link AndroidBuildProto.verify|verify} messages.
     * @param message AndroidBuildProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidBuildProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidBuildProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidBuildProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidBuildProto;

    /**
     * Decodes an AndroidBuildProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidBuildProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidBuildProto;

    /**
     * Verifies an AndroidBuildProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidBuildProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidBuildProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidBuildProto;

    /**
     * Creates a plain object from an AndroidBuildProto message. Also converts values to other types if specified.
     * @param message AndroidBuildProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidBuildProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidBuildProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidCheckinProto. */
export interface IAndroidCheckinProto {

    /** AndroidCheckinProto build */
    build?: (IAndroidBuildProto|null);

    /** AndroidCheckinProto lastCheckinMsec */
    lastCheckinMsec?: (number|Long|null);

    /** AndroidCheckinProto event */
    event?: (IAndroidEventProto[]|null);

    /** AndroidCheckinProto stat */
    stat?: (IAndroidStatisticProto[]|null);

    /** AndroidCheckinProto requestedGroup */
    requestedGroup?: (string[]|null);

    /** AndroidCheckinProto cellOperator */
    cellOperator?: (string|null);

    /** AndroidCheckinProto simOperator */
    simOperator?: (string|null);

    /** AndroidCheckinProto roaming */
    roaming?: (string|null);

    /** AndroidCheckinProto userNumber */
    userNumber?: (number|null);
}

/** Represents an AndroidCheckinProto. */
export class AndroidCheckinProto implements IAndroidCheckinProto {

    /**
     * Constructs a new AndroidCheckinProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidCheckinProto);

    /** AndroidCheckinProto build. */
    public build?: (IAndroidBuildProto|null);

    /** AndroidCheckinProto lastCheckinMsec. */
    public lastCheckinMsec: (number|Long);

    /** AndroidCheckinProto event. */
    public event: IAndroidEventProto[];

    /** AndroidCheckinProto stat. */
    public stat: IAndroidStatisticProto[];

    /** AndroidCheckinProto requestedGroup. */
    public requestedGroup: string[];

    /** AndroidCheckinProto cellOperator. */
    public cellOperator: string;

    /** AndroidCheckinProto simOperator. */
    public simOperator: string;

    /** AndroidCheckinProto roaming. */
    public roaming: string;

    /** AndroidCheckinProto userNumber. */
    public userNumber: number;

    /**
     * Creates a new AndroidCheckinProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidCheckinProto instance
     */
    public static create(properties?: IAndroidCheckinProto): AndroidCheckinProto;

    /**
     * Encodes the specified AndroidCheckinProto message. Does not implicitly {@link AndroidCheckinProto.verify|verify} messages.
     * @param message AndroidCheckinProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidCheckinProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidCheckinProto message, length delimited. Does not implicitly {@link AndroidCheckinProto.verify|verify} messages.
     * @param message AndroidCheckinProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidCheckinProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidCheckinProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidCheckinProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidCheckinProto;

    /**
     * Decodes an AndroidCheckinProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidCheckinProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidCheckinProto;

    /**
     * Verifies an AndroidCheckinProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidCheckinProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidCheckinProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidCheckinProto;

    /**
     * Creates a plain object from an AndroidCheckinProto message. Also converts values to other types if specified.
     * @param message AndroidCheckinProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidCheckinProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidCheckinProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidEventProto. */
export interface IAndroidEventProto {

    /** AndroidEventProto tag */
    tag?: (string|null);

    /** AndroidEventProto value */
    value?: (string|null);

    /** AndroidEventProto timeMsec */
    timeMsec?: (number|Long|null);
}

/** Represents an AndroidEventProto. */
export class AndroidEventProto implements IAndroidEventProto {

    /**
     * Constructs a new AndroidEventProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidEventProto);

    /** AndroidEventProto tag. */
    public tag: string;

    /** AndroidEventProto value. */
    public value: string;

    /** AndroidEventProto timeMsec. */
    public timeMsec: (number|Long);

    /**
     * Creates a new AndroidEventProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidEventProto instance
     */
    public static create(properties?: IAndroidEventProto): AndroidEventProto;

    /**
     * Encodes the specified AndroidEventProto message. Does not implicitly {@link AndroidEventProto.verify|verify} messages.
     * @param message AndroidEventProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidEventProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidEventProto message, length delimited. Does not implicitly {@link AndroidEventProto.verify|verify} messages.
     * @param message AndroidEventProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidEventProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidEventProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidEventProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidEventProto;

    /**
     * Decodes an AndroidEventProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidEventProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidEventProto;

    /**
     * Verifies an AndroidEventProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidEventProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidEventProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidEventProto;

    /**
     * Creates a plain object from an AndroidEventProto message. Also converts values to other types if specified.
     * @param message AndroidEventProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidEventProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidEventProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidIntentProto. */
export interface IAndroidIntentProto {

    /** AndroidIntentProto action */
    action?: (string|null);

    /** AndroidIntentProto dataUri */
    dataUri?: (string|null);

    /** AndroidIntentProto mimeType */
    mimeType?: (string|null);

    /** AndroidIntentProto javaClass */
    javaClass?: (string|null);

    /** AndroidIntentProto extra */
    extra?: (AndroidIntentProto.IExtra[]|null);
}

/** Represents an AndroidIntentProto. */
export class AndroidIntentProto implements IAndroidIntentProto {

    /**
     * Constructs a new AndroidIntentProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidIntentProto);

    /** AndroidIntentProto action. */
    public action: string;

    /** AndroidIntentProto dataUri. */
    public dataUri: string;

    /** AndroidIntentProto mimeType. */
    public mimeType: string;

    /** AndroidIntentProto javaClass. */
    public javaClass: string;

    /** AndroidIntentProto extra. */
    public extra: AndroidIntentProto.IExtra[];

    /**
     * Creates a new AndroidIntentProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidIntentProto instance
     */
    public static create(properties?: IAndroidIntentProto): AndroidIntentProto;

    /**
     * Encodes the specified AndroidIntentProto message. Does not implicitly {@link AndroidIntentProto.verify|verify} messages.
     * @param message AndroidIntentProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidIntentProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidIntentProto message, length delimited. Does not implicitly {@link AndroidIntentProto.verify|verify} messages.
     * @param message AndroidIntentProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidIntentProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidIntentProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidIntentProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidIntentProto;

    /**
     * Decodes an AndroidIntentProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidIntentProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidIntentProto;

    /**
     * Verifies an AndroidIntentProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidIntentProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidIntentProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidIntentProto;

    /**
     * Creates a plain object from an AndroidIntentProto message. Also converts values to other types if specified.
     * @param message AndroidIntentProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidIntentProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidIntentProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export namespace AndroidIntentProto {

    /** Properties of an Extra. */
    interface IExtra {

        /** Extra name */
        name?: (string|null);

        /** Extra value */
        value?: (string|null);
    }

    /** Represents an Extra. */
    class Extra implements IExtra {

        /**
         * Constructs a new Extra.
         * @param [properties] Properties to set
         */
        constructor(properties?: AndroidIntentProto.IExtra);

        /** Extra name. */
        public name: string;

        /** Extra value. */
        public value: string;

        /**
         * Creates a new Extra instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Extra instance
         */
        public static create(properties?: AndroidIntentProto.IExtra): AndroidIntentProto.Extra;

        /**
         * Encodes the specified Extra message. Does not implicitly {@link AndroidIntentProto.Extra.verify|verify} messages.
         * @param message Extra message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: AndroidIntentProto.IExtra, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Extra message, length delimited. Does not implicitly {@link AndroidIntentProto.Extra.verify|verify} messages.
         * @param message Extra message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: AndroidIntentProto.IExtra, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Extra message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Extra
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidIntentProto.Extra;

        /**
         * Decodes an Extra message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Extra
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidIntentProto.Extra;

        /**
         * Verifies an Extra message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Extra message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Extra
         */
        public static fromObject(object: { [k: string]: any }): AndroidIntentProto.Extra;

        /**
         * Creates a plain object from an Extra message. Also converts values to other types if specified.
         * @param message Extra
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: AndroidIntentProto.Extra, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Extra to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of an AndroidStatisticProto. */
export interface IAndroidStatisticProto {

    /** AndroidStatisticProto tag */
    tag?: (string|null);

    /** AndroidStatisticProto count */
    count?: (number|null);

    /** AndroidStatisticProto sum */
    sum?: (number|null);
}

/** Represents an AndroidStatisticProto. */
export class AndroidStatisticProto implements IAndroidStatisticProto {

    /**
     * Constructs a new AndroidStatisticProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidStatisticProto);

    /** AndroidStatisticProto tag. */
    public tag: string;

    /** AndroidStatisticProto count. */
    public count: number;

    /** AndroidStatisticProto sum. */
    public sum: number;

    /**
     * Creates a new AndroidStatisticProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidStatisticProto instance
     */
    public static create(properties?: IAndroidStatisticProto): AndroidStatisticProto;

    /**
     * Encodes the specified AndroidStatisticProto message. Does not implicitly {@link AndroidStatisticProto.verify|verify} messages.
     * @param message AndroidStatisticProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidStatisticProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidStatisticProto message, length delimited. Does not implicitly {@link AndroidStatisticProto.verify|verify} messages.
     * @param message AndroidStatisticProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidStatisticProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidStatisticProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidStatisticProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidStatisticProto;

    /**
     * Decodes an AndroidStatisticProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidStatisticProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidStatisticProto;

    /**
     * Verifies an AndroidStatisticProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidStatisticProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidStatisticProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidStatisticProto;

    /**
     * Creates a plain object from an AndroidStatisticProto message. Also converts values to other types if specified.
     * @param message AndroidStatisticProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidStatisticProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidStatisticProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ClientLibraryState. */
export interface IClientLibraryState {

    /** ClientLibraryState corpus */
    corpus?: (number|null);

    /** ClientLibraryState serverToken */
    serverToken?: (Uint8Array|null);

    /** ClientLibraryState hashCodeSum */
    hashCodeSum?: (number|Long|null);

    /** ClientLibraryState librarySize */
    librarySize?: (number|null);

    /** ClientLibraryState libraryId */
    libraryId?: (string|null);
}

/** Represents a ClientLibraryState. */
export class ClientLibraryState implements IClientLibraryState {

    /**
     * Constructs a new ClientLibraryState.
     * @param [properties] Properties to set
     */
    constructor(properties?: IClientLibraryState);

    /** ClientLibraryState corpus. */
    public corpus: number;

    /** ClientLibraryState serverToken. */
    public serverToken: Uint8Array;

    /** ClientLibraryState hashCodeSum. */
    public hashCodeSum: (number|Long);

    /** ClientLibraryState librarySize. */
    public librarySize: number;

    /** ClientLibraryState libraryId. */
    public libraryId: string;

    /**
     * Creates a new ClientLibraryState instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ClientLibraryState instance
     */
    public static create(properties?: IClientLibraryState): ClientLibraryState;

    /**
     * Encodes the specified ClientLibraryState message. Does not implicitly {@link ClientLibraryState.verify|verify} messages.
     * @param message ClientLibraryState message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IClientLibraryState, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ClientLibraryState message, length delimited. Does not implicitly {@link ClientLibraryState.verify|verify} messages.
     * @param message ClientLibraryState message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IClientLibraryState, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ClientLibraryState message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ClientLibraryState
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ClientLibraryState;

    /**
     * Decodes a ClientLibraryState message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ClientLibraryState
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ClientLibraryState;

    /**
     * Verifies a ClientLibraryState message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ClientLibraryState message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ClientLibraryState
     */
    public static fromObject(object: { [k: string]: any }): ClientLibraryState;

    /**
     * Creates a plain object from a ClientLibraryState message. Also converts values to other types if specified.
     * @param message ClientLibraryState
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ClientLibraryState, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ClientLibraryState to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidDataUsageProto. */
export interface IAndroidDataUsageProto {

    /** AndroidDataUsageProto version */
    version?: (number|null);

    /** AndroidDataUsageProto currentReportMsec */
    currentReportMsec?: (number|Long|null);

    /** AndroidDataUsageProto keyToPackageNameMapping */
    keyToPackageNameMapping?: (IKeyToPackageNameMapping[]|null);

    /** AndroidDataUsageProto payloadLevelAppStat */
    payloadLevelAppStat?: (IPayloadLevelAppStat[]|null);

    /** AndroidDataUsageProto ipLayerNetworkStat */
    ipLayerNetworkStat?: (IIpLayerNetworkStat[]|null);
}

/** Represents an AndroidDataUsageProto. */
export class AndroidDataUsageProto implements IAndroidDataUsageProto {

    /**
     * Constructs a new AndroidDataUsageProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidDataUsageProto);

    /** AndroidDataUsageProto version. */
    public version: number;

    /** AndroidDataUsageProto currentReportMsec. */
    public currentReportMsec: (number|Long);

    /** AndroidDataUsageProto keyToPackageNameMapping. */
    public keyToPackageNameMapping: IKeyToPackageNameMapping[];

    /** AndroidDataUsageProto payloadLevelAppStat. */
    public payloadLevelAppStat: IPayloadLevelAppStat[];

    /** AndroidDataUsageProto ipLayerNetworkStat. */
    public ipLayerNetworkStat: IIpLayerNetworkStat[];

    /**
     * Creates a new AndroidDataUsageProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidDataUsageProto instance
     */
    public static create(properties?: IAndroidDataUsageProto): AndroidDataUsageProto;

    /**
     * Encodes the specified AndroidDataUsageProto message. Does not implicitly {@link AndroidDataUsageProto.verify|verify} messages.
     * @param message AndroidDataUsageProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidDataUsageProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidDataUsageProto message, length delimited. Does not implicitly {@link AndroidDataUsageProto.verify|verify} messages.
     * @param message AndroidDataUsageProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidDataUsageProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidDataUsageProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidDataUsageProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidDataUsageProto;

    /**
     * Decodes an AndroidDataUsageProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidDataUsageProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidDataUsageProto;

    /**
     * Verifies an AndroidDataUsageProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidDataUsageProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidDataUsageProto
     */
    public static fromObject(object: { [k: string]: any }): AndroidDataUsageProto;

    /**
     * Creates a plain object from an AndroidDataUsageProto message. Also converts values to other types if specified.
     * @param message AndroidDataUsageProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidDataUsageProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidDataUsageProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AndroidUsageStatsReport. */
export interface IAndroidUsageStatsReport {

    /** AndroidUsageStatsReport androidId */
    androidId?: (number|Long|null);

    /** AndroidUsageStatsReport loggingId */
    loggingId?: (number|Long|null);

    /** AndroidUsageStatsReport usageStats */
    usageStats?: (IUsageStatsExtensionProto|null);
}

/** Represents an AndroidUsageStatsReport. */
export class AndroidUsageStatsReport implements IAndroidUsageStatsReport {

    /**
     * Constructs a new AndroidUsageStatsReport.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAndroidUsageStatsReport);

    /** AndroidUsageStatsReport androidId. */
    public androidId: (number|Long);

    /** AndroidUsageStatsReport loggingId. */
    public loggingId: (number|Long);

    /** AndroidUsageStatsReport usageStats. */
    public usageStats?: (IUsageStatsExtensionProto|null);

    /**
     * Creates a new AndroidUsageStatsReport instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AndroidUsageStatsReport instance
     */
    public static create(properties?: IAndroidUsageStatsReport): AndroidUsageStatsReport;

    /**
     * Encodes the specified AndroidUsageStatsReport message. Does not implicitly {@link AndroidUsageStatsReport.verify|verify} messages.
     * @param message AndroidUsageStatsReport message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAndroidUsageStatsReport, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AndroidUsageStatsReport message, length delimited. Does not implicitly {@link AndroidUsageStatsReport.verify|verify} messages.
     * @param message AndroidUsageStatsReport message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAndroidUsageStatsReport, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AndroidUsageStatsReport message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AndroidUsageStatsReport
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AndroidUsageStatsReport;

    /**
     * Decodes an AndroidUsageStatsReport message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AndroidUsageStatsReport
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AndroidUsageStatsReport;

    /**
     * Verifies an AndroidUsageStatsReport message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AndroidUsageStatsReport message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AndroidUsageStatsReport
     */
    public static fromObject(object: { [k: string]: any }): AndroidUsageStatsReport;

    /**
     * Creates a plain object from an AndroidUsageStatsReport message. Also converts values to other types if specified.
     * @param message AndroidUsageStatsReport
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AndroidUsageStatsReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AndroidUsageStatsReport to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an AppBucket. */
export interface IAppBucket {

    /** AppBucket bucketStartMsec */
    bucketStartMsec?: (number|Long|null);

    /** AppBucket bucketDurationMsec */
    bucketDurationMsec?: (number|Long|null);

    /** AppBucket statCounters */
    statCounters?: (IStatCounters[]|null);

    /** AppBucket operationCount */
    operationCount?: (number|Long|null);
}

/** Represents an AppBucket. */
export class AppBucket implements IAppBucket {

    /**
     * Constructs a new AppBucket.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAppBucket);

    /** AppBucket bucketStartMsec. */
    public bucketStartMsec: (number|Long);

    /** AppBucket bucketDurationMsec. */
    public bucketDurationMsec: (number|Long);

    /** AppBucket statCounters. */
    public statCounters: IStatCounters[];

    /** AppBucket operationCount. */
    public operationCount: (number|Long);

    /**
     * Creates a new AppBucket instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AppBucket instance
     */
    public static create(properties?: IAppBucket): AppBucket;

    /**
     * Encodes the specified AppBucket message. Does not implicitly {@link AppBucket.verify|verify} messages.
     * @param message AppBucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAppBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AppBucket message, length delimited. Does not implicitly {@link AppBucket.verify|verify} messages.
     * @param message AppBucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAppBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AppBucket message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AppBucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AppBucket;

    /**
     * Decodes an AppBucket message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AppBucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AppBucket;

    /**
     * Verifies an AppBucket message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AppBucket message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AppBucket
     */
    public static fromObject(object: { [k: string]: any }): AppBucket;

    /**
     * Creates a plain object from an AppBucket message. Also converts values to other types if specified.
     * @param message AppBucket
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AppBucket, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AppBucket to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a CounterData. */
export interface ICounterData {

    /** CounterData bytes */
    bytes?: (number|Long|null);

    /** CounterData packets */
    packets?: (number|Long|null);
}

/** Represents a CounterData. */
export class CounterData implements ICounterData {

    /**
     * Constructs a new CounterData.
     * @param [properties] Properties to set
     */
    constructor(properties?: ICounterData);

    /** CounterData bytes. */
    public bytes: (number|Long);

    /** CounterData packets. */
    public packets: (number|Long);

    /**
     * Creates a new CounterData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns CounterData instance
     */
    public static create(properties?: ICounterData): CounterData;

    /**
     * Encodes the specified CounterData message. Does not implicitly {@link CounterData.verify|verify} messages.
     * @param message CounterData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ICounterData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified CounterData message, length delimited. Does not implicitly {@link CounterData.verify|verify} messages.
     * @param message CounterData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ICounterData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a CounterData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns CounterData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): CounterData;

    /**
     * Decodes a CounterData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns CounterData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): CounterData;

    /**
     * Verifies a CounterData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a CounterData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns CounterData
     */
    public static fromObject(object: { [k: string]: any }): CounterData;

    /**
     * Creates a plain object from a CounterData message. Also converts values to other types if specified.
     * @param message CounterData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: CounterData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this CounterData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an IpLayerAppStat. */
export interface IIpLayerAppStat {

    /** IpLayerAppStat packageKey */
    packageKey?: (number|null);

    /** IpLayerAppStat applicationTag */
    applicationTag?: (number|null);

    /** IpLayerAppStat ipLayerAppBucket */
    ipLayerAppBucket?: (IAppBucket[]|null);
}

/** Represents an IpLayerAppStat. */
export class IpLayerAppStat implements IIpLayerAppStat {

    /**
     * Constructs a new IpLayerAppStat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IIpLayerAppStat);

    /** IpLayerAppStat packageKey. */
    public packageKey: number;

    /** IpLayerAppStat applicationTag. */
    public applicationTag: number;

    /** IpLayerAppStat ipLayerAppBucket. */
    public ipLayerAppBucket: IAppBucket[];

    /**
     * Creates a new IpLayerAppStat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns IpLayerAppStat instance
     */
    public static create(properties?: IIpLayerAppStat): IpLayerAppStat;

    /**
     * Encodes the specified IpLayerAppStat message. Does not implicitly {@link IpLayerAppStat.verify|verify} messages.
     * @param message IpLayerAppStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IIpLayerAppStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified IpLayerAppStat message, length delimited. Does not implicitly {@link IpLayerAppStat.verify|verify} messages.
     * @param message IpLayerAppStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IIpLayerAppStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an IpLayerAppStat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns IpLayerAppStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IpLayerAppStat;

    /**
     * Decodes an IpLayerAppStat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns IpLayerAppStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IpLayerAppStat;

    /**
     * Verifies an IpLayerAppStat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an IpLayerAppStat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns IpLayerAppStat
     */
    public static fromObject(object: { [k: string]: any }): IpLayerAppStat;

    /**
     * Creates a plain object from an IpLayerAppStat message. Also converts values to other types if specified.
     * @param message IpLayerAppStat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: IpLayerAppStat, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this IpLayerAppStat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an IpLayerNetworkBucket. */
export interface IIpLayerNetworkBucket {

    /** IpLayerNetworkBucket bucketStartMsec */
    bucketStartMsec?: (number|Long|null);

    /** IpLayerNetworkBucket bucketDurationMsec */
    bucketDurationMsec?: (number|Long|null);

    /** IpLayerNetworkBucket statCounters */
    statCounters?: (IStatCounters[]|null);

    /** IpLayerNetworkBucket networkActiveDuration */
    networkActiveDuration?: (number|Long|null);
}

/** Represents an IpLayerNetworkBucket. */
export class IpLayerNetworkBucket implements IIpLayerNetworkBucket {

    /**
     * Constructs a new IpLayerNetworkBucket.
     * @param [properties] Properties to set
     */
    constructor(properties?: IIpLayerNetworkBucket);

    /** IpLayerNetworkBucket bucketStartMsec. */
    public bucketStartMsec: (number|Long);

    /** IpLayerNetworkBucket bucketDurationMsec. */
    public bucketDurationMsec: (number|Long);

    /** IpLayerNetworkBucket statCounters. */
    public statCounters: IStatCounters[];

    /** IpLayerNetworkBucket networkActiveDuration. */
    public networkActiveDuration: (number|Long);

    /**
     * Creates a new IpLayerNetworkBucket instance using the specified properties.
     * @param [properties] Properties to set
     * @returns IpLayerNetworkBucket instance
     */
    public static create(properties?: IIpLayerNetworkBucket): IpLayerNetworkBucket;

    /**
     * Encodes the specified IpLayerNetworkBucket message. Does not implicitly {@link IpLayerNetworkBucket.verify|verify} messages.
     * @param message IpLayerNetworkBucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IIpLayerNetworkBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified IpLayerNetworkBucket message, length delimited. Does not implicitly {@link IpLayerNetworkBucket.verify|verify} messages.
     * @param message IpLayerNetworkBucket message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IIpLayerNetworkBucket, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an IpLayerNetworkBucket message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns IpLayerNetworkBucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IpLayerNetworkBucket;

    /**
     * Decodes an IpLayerNetworkBucket message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns IpLayerNetworkBucket
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IpLayerNetworkBucket;

    /**
     * Verifies an IpLayerNetworkBucket message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an IpLayerNetworkBucket message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns IpLayerNetworkBucket
     */
    public static fromObject(object: { [k: string]: any }): IpLayerNetworkBucket;

    /**
     * Creates a plain object from an IpLayerNetworkBucket message. Also converts values to other types if specified.
     * @param message IpLayerNetworkBucket
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: IpLayerNetworkBucket, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this IpLayerNetworkBucket to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of an IpLayerNetworkStat. */
export interface IIpLayerNetworkStat {

    /** IpLayerNetworkStat networkDetails */
    networkDetails?: (string|null);

    /** IpLayerNetworkStat type */
    type?: (number|null);

    /** IpLayerNetworkStat ipLayerNetworkBucket */
    ipLayerNetworkBucket?: (IIpLayerNetworkBucket[]|null);

    /** IpLayerNetworkStat ipLayerAppStat */
    ipLayerAppStat?: (IIpLayerAppStat[]|null);
}

/** Represents an IpLayerNetworkStat. */
export class IpLayerNetworkStat implements IIpLayerNetworkStat {

    /**
     * Constructs a new IpLayerNetworkStat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IIpLayerNetworkStat);

    /** IpLayerNetworkStat networkDetails. */
    public networkDetails: string;

    /** IpLayerNetworkStat type. */
    public type: number;

    /** IpLayerNetworkStat ipLayerNetworkBucket. */
    public ipLayerNetworkBucket: IIpLayerNetworkBucket[];

    /** IpLayerNetworkStat ipLayerAppStat. */
    public ipLayerAppStat: IIpLayerAppStat[];

    /**
     * Creates a new IpLayerNetworkStat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns IpLayerNetworkStat instance
     */
    public static create(properties?: IIpLayerNetworkStat): IpLayerNetworkStat;

    /**
     * Encodes the specified IpLayerNetworkStat message. Does not implicitly {@link IpLayerNetworkStat.verify|verify} messages.
     * @param message IpLayerNetworkStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IIpLayerNetworkStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified IpLayerNetworkStat message, length delimited. Does not implicitly {@link IpLayerNetworkStat.verify|verify} messages.
     * @param message IpLayerNetworkStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IIpLayerNetworkStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an IpLayerNetworkStat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns IpLayerNetworkStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): IpLayerNetworkStat;

    /**
     * Decodes an IpLayerNetworkStat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns IpLayerNetworkStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): IpLayerNetworkStat;

    /**
     * Verifies an IpLayerNetworkStat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an IpLayerNetworkStat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns IpLayerNetworkStat
     */
    public static fromObject(object: { [k: string]: any }): IpLayerNetworkStat;

    /**
     * Creates a plain object from an IpLayerNetworkStat message. Also converts values to other types if specified.
     * @param message IpLayerNetworkStat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: IpLayerNetworkStat, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this IpLayerNetworkStat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a KeyToPackageNameMapping. */
export interface IKeyToPackageNameMapping {

    /** KeyToPackageNameMapping packageKey */
    packageKey?: (number|null);

    /** KeyToPackageNameMapping uidName */
    uidName?: (string|null);

    /** KeyToPackageNameMapping sharedPackage */
    sharedPackage?: (IPackageInfo[]|null);
}

/** Represents a KeyToPackageNameMapping. */
export class KeyToPackageNameMapping implements IKeyToPackageNameMapping {

    /**
     * Constructs a new KeyToPackageNameMapping.
     * @param [properties] Properties to set
     */
    constructor(properties?: IKeyToPackageNameMapping);

    /** KeyToPackageNameMapping packageKey. */
    public packageKey: number;

    /** KeyToPackageNameMapping uidName. */
    public uidName: string;

    /** KeyToPackageNameMapping sharedPackage. */
    public sharedPackage: IPackageInfo[];

    /**
     * Creates a new KeyToPackageNameMapping instance using the specified properties.
     * @param [properties] Properties to set
     * @returns KeyToPackageNameMapping instance
     */
    public static create(properties?: IKeyToPackageNameMapping): KeyToPackageNameMapping;

    /**
     * Encodes the specified KeyToPackageNameMapping message. Does not implicitly {@link KeyToPackageNameMapping.verify|verify} messages.
     * @param message KeyToPackageNameMapping message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IKeyToPackageNameMapping, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified KeyToPackageNameMapping message, length delimited. Does not implicitly {@link KeyToPackageNameMapping.verify|verify} messages.
     * @param message KeyToPackageNameMapping message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IKeyToPackageNameMapping, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a KeyToPackageNameMapping message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns KeyToPackageNameMapping
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeyToPackageNameMapping;

    /**
     * Decodes a KeyToPackageNameMapping message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns KeyToPackageNameMapping
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeyToPackageNameMapping;

    /**
     * Verifies a KeyToPackageNameMapping message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a KeyToPackageNameMapping message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns KeyToPackageNameMapping
     */
    public static fromObject(object: { [k: string]: any }): KeyToPackageNameMapping;

    /**
     * Creates a plain object from a KeyToPackageNameMapping message. Also converts values to other types if specified.
     * @param message KeyToPackageNameMapping
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: KeyToPackageNameMapping, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this KeyToPackageNameMapping to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PackageInfo. */
export interface IPackageInfo {

    /** PackageInfo pkgName */
    pkgName?: (string|null);

    /** PackageInfo versionCode */
    versionCode?: (number|null);
}

/** Represents a PackageInfo. */
export class PackageInfo implements IPackageInfo {

    /**
     * Constructs a new PackageInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPackageInfo);

    /** PackageInfo pkgName. */
    public pkgName: string;

    /** PackageInfo versionCode. */
    public versionCode: number;

    /**
     * Creates a new PackageInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PackageInfo instance
     */
    public static create(properties?: IPackageInfo): PackageInfo;

    /**
     * Encodes the specified PackageInfo message. Does not implicitly {@link PackageInfo.verify|verify} messages.
     * @param message PackageInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPackageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PackageInfo message, length delimited. Does not implicitly {@link PackageInfo.verify|verify} messages.
     * @param message PackageInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPackageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PackageInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PackageInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PackageInfo;

    /**
     * Decodes a PackageInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PackageInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PackageInfo;

    /**
     * Verifies a PackageInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PackageInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PackageInfo
     */
    public static fromObject(object: { [k: string]: any }): PackageInfo;

    /**
     * Creates a plain object from a PackageInfo message. Also converts values to other types if specified.
     * @param message PackageInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PackageInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PackageInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a PayloadLevelAppStat. */
export interface IPayloadLevelAppStat {

    /** PayloadLevelAppStat packageKey */
    packageKey?: (number|null);

    /** PayloadLevelAppStat applicationTag */
    applicationTag?: (number|null);

    /** PayloadLevelAppStat payloadLevelAppBucket */
    payloadLevelAppBucket?: (IAppBucket[]|null);
}

/** Represents a PayloadLevelAppStat. */
export class PayloadLevelAppStat implements IPayloadLevelAppStat {

    /**
     * Constructs a new PayloadLevelAppStat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPayloadLevelAppStat);

    /** PayloadLevelAppStat packageKey. */
    public packageKey: number;

    /** PayloadLevelAppStat applicationTag. */
    public applicationTag: number;

    /** PayloadLevelAppStat payloadLevelAppBucket. */
    public payloadLevelAppBucket: IAppBucket[];

    /**
     * Creates a new PayloadLevelAppStat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns PayloadLevelAppStat instance
     */
    public static create(properties?: IPayloadLevelAppStat): PayloadLevelAppStat;

    /**
     * Encodes the specified PayloadLevelAppStat message. Does not implicitly {@link PayloadLevelAppStat.verify|verify} messages.
     * @param message PayloadLevelAppStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPayloadLevelAppStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified PayloadLevelAppStat message, length delimited. Does not implicitly {@link PayloadLevelAppStat.verify|verify} messages.
     * @param message PayloadLevelAppStat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPayloadLevelAppStat, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a PayloadLevelAppStat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns PayloadLevelAppStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): PayloadLevelAppStat;

    /**
     * Decodes a PayloadLevelAppStat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns PayloadLevelAppStat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): PayloadLevelAppStat;

    /**
     * Verifies a PayloadLevelAppStat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a PayloadLevelAppStat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns PayloadLevelAppStat
     */
    public static fromObject(object: { [k: string]: any }): PayloadLevelAppStat;

    /**
     * Creates a plain object from a PayloadLevelAppStat message. Also converts values to other types if specified.
     * @param message PayloadLevelAppStat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: PayloadLevelAppStat, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this PayloadLevelAppStat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a StatCounters. */
export interface IStatCounters {

    /** StatCounters networkProto */
    networkProto?: (number|null);

    /** StatCounters direction */
    direction?: (number|null);

    /** StatCounters counterData */
    counterData?: (ICounterData|null);

    /** StatCounters fgBg */
    fgBg?: (number|null);
}

/** Represents a StatCounters. */
export class StatCounters implements IStatCounters {

    /**
     * Constructs a new StatCounters.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStatCounters);

    /** StatCounters networkProto. */
    public networkProto: number;

    /** StatCounters direction. */
    public direction: number;

    /** StatCounters counterData. */
    public counterData?: (ICounterData|null);

    /** StatCounters fgBg. */
    public fgBg: number;

    /**
     * Creates a new StatCounters instance using the specified properties.
     * @param [properties] Properties to set
     * @returns StatCounters instance
     */
    public static create(properties?: IStatCounters): StatCounters;

    /**
     * Encodes the specified StatCounters message. Does not implicitly {@link StatCounters.verify|verify} messages.
     * @param message StatCounters message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStatCounters, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified StatCounters message, length delimited. Does not implicitly {@link StatCounters.verify|verify} messages.
     * @param message StatCounters message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStatCounters, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a StatCounters message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns StatCounters
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): StatCounters;

    /**
     * Decodes a StatCounters message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns StatCounters
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): StatCounters;

    /**
     * Verifies a StatCounters message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a StatCounters message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns StatCounters
     */
    public static fromObject(object: { [k: string]: any }): StatCounters;

    /**
     * Creates a plain object from a StatCounters message. Also converts values to other types if specified.
     * @param message StatCounters
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: StatCounters, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this StatCounters to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a UsageStatsExtensionProto. */
export interface IUsageStatsExtensionProto {

    /** UsageStatsExtensionProto dataUsage */
    dataUsage?: (IAndroidDataUsageProto|null);
}

/** Represents a UsageStatsExtensionProto. */
export class UsageStatsExtensionProto implements IUsageStatsExtensionProto {

    /**
     * Constructs a new UsageStatsExtensionProto.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUsageStatsExtensionProto);

    /** UsageStatsExtensionProto dataUsage. */
    public dataUsage?: (IAndroidDataUsageProto|null);

    /**
     * Creates a new UsageStatsExtensionProto instance using the specified properties.
     * @param [properties] Properties to set
     * @returns UsageStatsExtensionProto instance
     */
    public static create(properties?: IUsageStatsExtensionProto): UsageStatsExtensionProto;

    /**
     * Encodes the specified UsageStatsExtensionProto message. Does not implicitly {@link UsageStatsExtensionProto.verify|verify} messages.
     * @param message UsageStatsExtensionProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUsageStatsExtensionProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified UsageStatsExtensionProto message, length delimited. Does not implicitly {@link UsageStatsExtensionProto.verify|verify} messages.
     * @param message UsageStatsExtensionProto message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUsageStatsExtensionProto, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a UsageStatsExtensionProto message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns UsageStatsExtensionProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): UsageStatsExtensionProto;

    /**
     * Decodes a UsageStatsExtensionProto message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns UsageStatsExtensionProto
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): UsageStatsExtensionProto;

    /**
     * Verifies a UsageStatsExtensionProto message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a UsageStatsExtensionProto message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns UsageStatsExtensionProto
     */
    public static fromObject(object: { [k: string]: any }): UsageStatsExtensionProto;

    /**
     * Creates a plain object from a UsageStatsExtensionProto message. Also converts values to other types if specified.
     * @param message UsageStatsExtensionProto
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: UsageStatsExtensionProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this UsageStatsExtensionProto to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a ModifyLibraryRequest. */
export interface IModifyLibraryRequest {

    /** ModifyLibraryRequest libraryId */
    libraryId?: (string|null);

    /** ModifyLibraryRequest addPackageName */
    addPackageName?: (string[]|null);

    /** ModifyLibraryRequest removePackageName */
    removePackageName?: (string[]|null);
}

/** Represents a ModifyLibraryRequest. */
export class ModifyLibraryRequest implements IModifyLibraryRequest {

    /**
     * Constructs a new ModifyLibraryRequest.
     * @param [properties] Properties to set
     */
    constructor(properties?: IModifyLibraryRequest);

    /** ModifyLibraryRequest libraryId. */
    public libraryId: string;

    /** ModifyLibraryRequest addPackageName. */
    public addPackageName: string[];

    /** ModifyLibraryRequest removePackageName. */
    public removePackageName: string[];

    /**
     * Creates a new ModifyLibraryRequest instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ModifyLibraryRequest instance
     */
    public static create(properties?: IModifyLibraryRequest): ModifyLibraryRequest;

    /**
     * Encodes the specified ModifyLibraryRequest message. Does not implicitly {@link ModifyLibraryRequest.verify|verify} messages.
     * @param message ModifyLibraryRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IModifyLibraryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified ModifyLibraryRequest message, length delimited. Does not implicitly {@link ModifyLibraryRequest.verify|verify} messages.
     * @param message ModifyLibraryRequest message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IModifyLibraryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a ModifyLibraryRequest message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ModifyLibraryRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): ModifyLibraryRequest;

    /**
     * Decodes a ModifyLibraryRequest message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ModifyLibraryRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): ModifyLibraryRequest;

    /**
     * Verifies a ModifyLibraryRequest message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ModifyLibraryRequest message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ModifyLibraryRequest
     */
    public static fromObject(object: { [k: string]: any }): ModifyLibraryRequest;

    /**
     * Creates a plain object from a ModifyLibraryRequest message. Also converts values to other types if specified.
     * @param message ModifyLibraryRequest
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ModifyLibraryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ModifyLibraryRequest to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}
